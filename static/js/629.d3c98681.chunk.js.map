{"version":3,"file":"static/js/629.d3c98681.chunk.js","mappings":"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","sources":["components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.styled.js","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.styled.js","components/Expense/ExpenseContainer.styled.js","components/Expense/ExpenseContainer.jsx","redux/zvit/api.js","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.jsx","components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.jsx","page/FinancialPage/FinancialPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperFinancialOffice = styled.div`\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* border: 2px solid var(--main-yellow); */\n  border-radius: 8px;\n  gap: 20px;\n  margin-bottom: 8px;\n\n  /* @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n  } */\n`;\nexport const ContantLineWrapper = styled.div`\n  width: 100%;\n  max-width: 80%;\n  height: 100vh;\n  padding: 10px;\n  border: 2px solid var(--main-dark-blue);\n`;\n","import { Button } from 'antd';\nimport styled from 'styled-components';\nimport { btnStyledAll } from 'styles/GlobalStyles';\n\nexport const FinancialCommandTitle = styled.p`\n  text-align: center;\n  width: 100%;\n  text-align: center;\n  font-family: 'Roboto';\n  font-size: 20px;\n  font-weight: 400;\n  padding-bottom: 5px;\n\n  border-bottom: 2px solid var(--main-green);\n`;\nexport const CommandLineWrapper = styled.div`\n  width: 100%;\n  max-width: 20%;\n  height: 100vh;\n  /* border: 2px solid var(--main-green); */\n  padding: 10px;\n`;\n\nexport const CommandLineButton = styled(Button)`\n  ${btnStyledAll}\n  background-color: var(--main-green);\n  &:hover {\n    background-color: var(--bg-main-color);\n  }\n\n  &:disabled {\n    background-color: var(--main-disabled);\n    color: var(--header-main-color);\n  }\n  & span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n  }\n  & svg {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DateTitle = styled.p`\n  margin-bottom: 20px;\n  text-align: center;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 14px;\n`;\nexport const DateDescription = styled.p`\n  color: var(--main-green);\n`;\n","import { Drawer, Form, InputNumber, Select, Input, Button, Radio } from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport { categoryExpense } from 'assets/constants/mainConstans';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addExpense } from 'redux/expense/expenseOperetion';\nimport { DateDescription, DateTitle } from './ExpenseContainer.styled';\n\nconst ExpenseContainer = ({ selectedPeriod, open, onCloseDrawerExpense }) => {\n  const [form] = useForm();\n  const [paymentMethod, setPaymentMethod] = useState(null);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Drawer\n        title=\"Поточні витрати\"\n        placement=\"right\"\n        width={340}\n        onClose={onCloseDrawerExpense}\n        open={open}\n      >\n        <Form\n          form={form}\n          initialValues={{\n            date: null,\n            category: 'salary',\n            amount: null,\n            paymentForm: 'cash',\n            bank: '',\n            description: '',\n          }}\n          onFinish={async values => {\n            if (values.paymentForm === 'cash') {\n              values.bank = '';\n            }\n            values.date = selectedPeriod;\n            await dispatch(addExpense(values)).then(() => {\n              onCloseDrawerExpense();\n            });\n          }}\n        >\n          <DateTitle>\n            Дата витрат: <DateDescription>{selectedPeriod}</DateDescription>\n          </DateTitle>\n\n          <Form.Item\n            label=\"Категорія витрат\"\n            name=\"category\"\n            rules={[{ required: true, message: 'Виберіть категорію' }]}\n          >\n            <Select>\n              {categoryExpense.map(expense => (\n                <Select.Option key={expense.category} value={expense.category}>\n                  {expense.title}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            rules={[{ required: true, message: 'Внесіть суму витрат' }]}\n            label=\"Сума\"\n            name=\"amount\"\n          >\n            <InputNumber style={{ width: '100%' }} placeholder=\"Вкажіть суму\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Форма оплати\"\n            name=\"paymentForm\"\n            onChange={e => {\n              if (e.target.value === 'cash') {\n                form.setFieldsValue({ bank: '' });\n              }\n            }}\n          >\n            <Radio.Group\n              onChange={e => {\n                setPaymentMethod(e.target.value);\n                if (e.target.value !== 'cashless') {\n                  form.setFieldsValue({ bank: undefined });\n                  form.resetFields(['bank', 'sum']);\n                }\n              }}\n            >\n              <Radio value=\"cash\">Готівка</Radio>\n              <Radio value=\"cashless\">Безготівкова</Radio>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item\n            rules={\n              paymentMethod === 'cashless' && [\n                { required: true, message: 'Оберіть банк' },\n              ]\n            }\n            label=\"Виберіть банк\"\n            name=\"bank\"\n            style={{ width: 250 }}\n          >\n            <Select>\n              <Select.Option value=\"PrivatBank\">ПриватБанк</Select.Option>\n              <Select.Option value=\"MonoBank\">Монобанк</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Опис витрат\" name=\"description\">\n            <Input.TextArea\n              placeholder=\"За потребою додайте опис\"\n              autoSize={{\n                minRows: 1,\n                maxRows: 5,\n              }}\n            />\n          </Form.Item>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              flexDirection: 'column',\n              gap: 8,\n            }}\n          >\n            <Button\n              style={{ width: '100%' }}\n              type=\"primary\"\n              onClick={onCloseDrawerExpense}\n              htmlType=\"button\"\n            >\n              Відмінити\n            </Button>\n            <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\">\n              Зберегти зміни\n            </Button>\n          </div>\n        </Form>\n      </Drawer>\n    </>\n  );\n};\n\nexport default ExpenseContainer;\n","import axios from 'axios';\n\nexport const getZvitOneMonthTotal = async choesData => {\n  try {\n    const { data } = await axios.get(`/zvit/one_month_total`, {\n      params: choesData, // ✅ Передаємо параметри правильно\n    });\n    console.log('choesData:', choesData);\n    return data;\n  } catch (err) {\n    console.error('❌ Error:', err.message);\n  }\n};\n","import React, { useState } from 'react';\nimport { DatePicker } from 'antd';\nimport { FaRegCalendarPlus } from 'react-icons/fa';\n\nimport {\n  BsBarChartLine,\n  BsClipboardPulse,\n  BsEmojiHeartEyes,\n  BsEmojiFrown,\n} from 'react-icons/bs';\n\nimport {\n  CommandLineButton,\n  CommandLineWrapper,\n  FinancialCommandTitle,\n} from './FinancialButtonContainer.styled';\n\nimport dayjs from 'dayjs';\nimport ExpenseContainer from 'components/Expense/ExpenseContainer';\nimport { getZvitOneMonthTotal } from 'redux/zvit/api';\nconst { RangePicker } = DatePicker;\n\nconst FinancialButtonContainer = () => {\n  const today = dayjs();\n\n  const [dayOrePariod, setDayOrePariod] = useState('oneDay');\n  const [selectedPeriod, setSelectedPeriod] = useState(null);\n  const [dateFromExpense, setDateFromExpense] = useState(\n    new Date().toISOString().split('T')[0]\n  );\n\n  const [open, setOpen] = useState(false);\n  const onCloseDrawerExpense = () => {\n    setOpen(false);\n  };\n\n  function selectDay(dates, dateStrings) {\n    if (!dates || dates.length === 0) return;\n    setDateFromExpense(dateStrings[0]);\n\n    // Отримуємо дати у форматі JavaScript Date\n    const startDate = new Date(dates[0].toDate());\n    const endDate = new Date(dates[1].toDate());\n\n    // Обнуляємо години для початку дня\n    startDate.setUTCHours(0, 0, 0, 0);\n    endDate.setUTCHours(23, 59, 59, 999);\n\n    const isOneDay =\n      startDate.getUTCFullYear() === endDate.getUTCFullYear() &&\n      startDate.getUTCMonth() === endDate.getUTCMonth() &&\n      startDate.getUTCDate() === endDate.getUTCDate();\n\n    // Форматуємо для бекенду\n    const formattedDates = {\n      startDate: startDate.toISOString(), // 2025-02-01T00:00:00.000Z\n      endDate: endDate.toISOString(), // 2025-02-08T23:59:59.999Z\n    };\n    setSelectedPeriod(formattedDates);\n\n    setDayOrePariod(isOneDay ? 'oneDay' : 'period');\n  }\n\n  const fetchZvitOneMonthTotal = async period => {\n    if (!period) return;\n\n    try {\n      const { totalData } = await getZvitOneMonthTotal(period);\n      console.log('✅ totalProfit:', totalData);\n    } catch (error) {\n      console.error('❌ Error fetching total profit:', error);\n    }\n  };\n\n  return (\n    <>\n      <CommandLineWrapper>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n          }}\n        >\n          <FinancialCommandTitle>Фінансові показники:</FinancialCommandTitle>\n          <RangePicker defaultValue={[today, today]} onChange={selectDay} />\n          <CommandLineButton\n            onClick={() => fetchZvitOneMonthTotal(selectedPeriod)}\n            disabled={dayOrePariod === 'period'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Доходи за день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                Доходи за день <BsBarChartLine />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton disabled={dayOrePariod === 'period'}>\n            {dayOrePariod === 'period' ? (\n              <>\n                Звіт за день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                Звіт за день <BsClipboardPulse />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton\n            onClick={() => fetchZvitOneMonthTotal(selectedPeriod)}\n            disabled={dayOrePariod === 'oneDay'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Доходи за період <BsBarChartLine />\n              </>\n            ) : (\n              <>\n                Доходи за період <FaRegCalendarPlus />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton disabled={dayOrePariod === 'oneDay'}>\n            {dayOrePariod === 'period' ? (\n              <>\n                Звіт за період <BsClipboardPulse />\n              </>\n            ) : (\n              <>\n                Звіт за період\n                <FaRegCalendarPlus />\n              </>\n            )}\n          </CommandLineButton>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n            marginTop: 35,\n          }}\n        >\n          <FinancialCommandTitle>Зарплата вчителів:</FinancialCommandTitle>\n          <CommandLineButton disabled={dayOrePariod === 'period'}>\n            {dayOrePariod === 'period' ? (\n              <FaRegCalendarPlus />\n            ) : (\n              <>\n                День <BsEmojiHeartEyes />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton disabled={dayOrePariod === 'oneDay'}>\n            {dayOrePariod === 'period' ? (\n              <>\n                Період <BsEmojiHeartEyes />\n              </>\n            ) : (\n              <>\n                Період <FaRegCalendarPlus />\n              </>\n            )}\n          </CommandLineButton>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n            marginTop: 35,\n          }}\n        >\n          <FinancialCommandTitle>Інші платежи:</FinancialCommandTitle>\n          <CommandLineButton\n            onClick={() => setOpen(true)}\n            disabled={dayOrePariod === 'period'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Виберіть день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                Додай витрати <BsEmojiFrown />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton\n            htmlType=\"button\"\n            disabled={dayOrePariod === 'period'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Виберіть день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                Внеси дохід <BsEmojiHeartEyes />\n              </>\n            )}\n          </CommandLineButton>\n          <ExpenseContainer\n            onCloseDrawerExpense={onCloseDrawerExpense}\n            open={open}\n            selectedPeriod={dateFromExpense}\n          />\n        </div>\n      </CommandLineWrapper>\n    </>\n  );\n};\n\nexport default FinancialButtonContainer;\n","import React from 'react';\nimport {\n  ContantLineWrapper,\n  WrapperFinancialOffice,\n} from './FinancialLayout.styled';\nimport FinancialButtonContainer from '../FinancialButtonContainer/FinancialButtonContainer';\nimport Container from 'components/Container/Container';\n\nconst FinancialLayout = () => {\n  return (\n    <Container>\n      <WrapperFinancialOffice>\n        <FinancialButtonContainer />\n        <ContantLineWrapper>Контент</ContantLineWrapper>\n      </WrapperFinancialOffice>\n    </Container>\n  );\n};\n\nexport default FinancialLayout;\n","import FinancialLayout from 'components/FinancialOffice/FinancialOfficeLayout/FinancialLayout';\n\nfunction FinancialPage() {\n  return (\n    <>\n      <FinancialLayout />\n    </>\n  );\n}\n\nexport default FinancialPage;\n"],"names":["WrapperFinancialOffice","styled","div","_templateObject","_taggedTemplateLiteral","ContantLineWrapper","_templateObject2","FinancialCommandTitle","p","CommandLineWrapper","CommandLineButton","Button","_templateObject3","btnStyledAll","DateTitle","DateDescription","_ref","selectedPeriod","open","onCloseDrawerExpense","_useForm","useForm","form","_slicedToArray","_useState","useState","_useState2","paymentMethod","setPaymentMethod","dispatch","useDispatch","_jsx","_Fragment","children","Drawer","title","placement","width","onClose","_jsxs","Form","initialValues","date","category","amount","paymentForm","bank","description","onFinish","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","addExpense","then","stop","_x","apply","arguments","Item","label","name","rules","required","message","Select","categoryExpense","map","expense","Option","value","InputNumber","style","placeholder","onChange","e","target","setFieldsValue","Radio","undefined","resetFields","Input","TextArea","autoSize","minRows","maxRows","display","alignItems","flexDirection","gap","type","onClick","htmlType","getZvitOneMonthTotal","choesData","_yield$axios$get","data","axios","get","params","sent","console","log","abrupt","t0","error","RangePicker","DatePicker","today","dayjs","dayOrePariod","setDayOrePariod","_useState3","_useState4","setSelectedPeriod","_useState5","Date","toISOString","split","_useState6","dateFromExpense","setDateFromExpense","_useState7","_useState8","setOpen","fetchZvitOneMonthTotal","period","_yield$getZvitOneMont","totalData","defaultValue","dates","dateStrings","length","startDate","toDate","endDate","setUTCHours","isOneDay","getUTCFullYear","getUTCMonth","getUTCDate","formattedDates","disabled","FaRegCalendarPlus","BsBarChartLine","BsClipboardPulse","marginTop","BsEmojiHeartEyes","BsEmojiFrown","ExpenseContainer","Container","FinancialButtonContainer","FinancialLayout"],"sourceRoot":""}