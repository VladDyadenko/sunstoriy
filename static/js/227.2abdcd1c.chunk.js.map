{"version":3,"file":"static/js/227.2abdcd1c.chunk.js","mappings":"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","sources":["ui/TimeLessons/TimeLessons.stayled.js","ui/TimeLessons/TimeLessons.jsx","ui/MainTable/MainTable.styled.js","ui/MainTable/MainTable.jsx","ui/ButtonAddLesson/ButtonAddLesson.styled.js","ui/ButtonAddLesson/ButtonAddLesson.jsx","page/CorrectionPage/CorrectionPage.jsx","components/ContainerMain/ContainerMain.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { BsPlusCircleDotted } from 'react-icons/bs';\n\nexport const TimeContainer = styled.ul`\n  width: 50px;\n  display: block;\n  padding: 0 5px;\n  margin-right: 10px;\n  @media screen and (min-width: 375.1px) {\n    display: block;\n  }\n`;\nexport const TableItem = styled.li`\n  /* color: var(--main-green); */\n  /* background-color: var(--main-blue); */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  border-radius: 8px;\n  min-width: 50px;\n  height: 90px;\n  margin-bottom: 10px;\n  color: var(--text-lessons-time);\n  background: #fff;\n  border: 1px solid #ddd;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.5);\n`;\nexport const TableItemDefault = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 8px;\n  background-color: var(--main-blue);\n  border: 2px solid var(--main-green);\n  height: 70px;\n  min-width: 50px;\n  margin-bottom: 10px;\n`;\nexport const TimeItem = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 900;\n  font-size: 14px;\n  width: 100%;\n  padding: 5px;\n  text-align: center;\n`;\nexport const AddLessonLink = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  /* background-color: var(--main-blue);\n  border: 2px solid var(--main-green); */\n  height: 80px;\n  min-width: 50px;\n  margin-bottom: 10px;\n  color: var(--text-lessons-time);\n  background: #fff;\n  border: 1px solid #ddd;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.5);\n`;\nexport const IconAddLessonLink = styled(BsPlusCircleDotted)`\n  width: 30px;\n  height: 30px;\n  fill: #a9a9a9;\n  transition: cubic-bezier(0.4, 0, 0.2, 1) 100ms;\n\n  &:hover {\n    fill: var(--main-dark-blue);\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport {\n  AddLessonLink,\n  IconAddLessonLink,\n  TableItem,\n  TimeContainer,\n  TimeItem,\n} from './TimeLessons.stayled';\nimport { formatTimeRange } from 'utils/dateTransform';\n\nfunction TimeLessons({ timeLessonOnList, officeName }) {\n  const infoOffice = JSON.stringify({ office: officeName });\n  return (\n    <>\n      <TimeContainer>\n        <AddLessonLink>\n          <Link to={`/lesson?lessonCopy=${infoOffice}`}>\n            <IconAddLessonLink />\n          </Link>\n        </AddLessonLink>\n        {timeLessonOnList?.map((time, index) => {\n          return (\n            <TableItem key={time + index}>\n              <TimeItem>{formatTimeRange(time)}</TimeItem>\n            </TableItem>\n          );\n        })}\n      </TimeContainer>\n    </>\n  );\n}\n\nexport default TimeLessons;\n","import styled from 'styled-components';\n\nexport const DayWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: start;\n  justify-content: start;\n  flex-direction: row;\n  gap: 10px;\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n  }\n`;\nexport const LessonsWrapper = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  padding: 0 10px;\n`;\nexport const MainTableContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: start;\n  justify-content: center;\n  gap: 15px;\n`;\nexport const DayDeafult = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 5px;\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  border-radius: 8px;\n  height: 80px;\n  /* width: 100%; */\n  width: 300px;\n  padding: 12px;\n  margin-bottom: 10px;\n  letter-spacing: 0.1rem;\n  /* background-color: var(--main-blue);\n  border: 2px solid var(--main-green); */\n  color: var(--text-lessons-time);\n  color: rgba(0, 0, 0, 0.45);\n  background: #fff;\n  border: 1px solid #ddd;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.5);\n`;\n\nexport const DayDeafultInfo = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 900;\n  text-align: center;\n  /* color: var(--main-green); */\n  /* margin-bottom: 10px; */\n`;\nexport const DayContainer = styled.div`\n  width: 300px;\n  text-align: center;\n  border-radius: 8px;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 376px) {\n    margin-right: 10px;\n  }\n`;\n\nexport const LessonsContainer = styled.ul``;\n\nexport const LessonsItem = styled.li`\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  cursor: pointer;\n  height: 90px;\n  width: 300px;\n  flex-direction: column;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  background: #fff;\n  border: 1px solid #ddd;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);\n    transform: translateY(-2px);\n  }\n`;\n\nexport const CardInfo = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 14px;\n  padding: 5px;\n  text-align: center;\n`;\nexport const OneTimeContainer = styled.ul`\n  padding: 0 5px;\n  :not(:last-child) {\n    margin-right: 5px;\n  }\n`;\nexport const OneTimeItem = styled.li`\n  height: 70px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport FreeTableItem from 'ui/FreeTableItem/FreeTableItem';\nimport LessonTableCard from 'ui/LessonTableCard/LessonTableCard';\nimport TimeLessons from 'ui/TimeLessons/TimeLessons';\nimport {\n  LessonsWrapper,\n  LessonsContainer,\n  LessonsItem,\n  DayDeafult,\n  DayDeafultInfo,\n  DayWrapper,\n  DayContainer,\n  MainTableContainer,\n} from './MainTable.styled';\nimport { formatDateRange, formatDay } from 'utils/dateTransform';\n\nfunction MainTable({ lessons, onLessonsDelete, office }) {\n  const [uniquTime, setUniquTime] = useState(null);\n  const [uniquDate, setUniquDate] = useState(null);\n  const [groupedLessons, setGroupedLessons] = useState(null);\n\n  const extractTimeFromISOString = dateTimeString => {\n    const timeString = new Date(dateTimeString).toLocaleTimeString('en-US', {\n      timeZone: 'UTC',\n    });\n    return timeString;\n  };\n\n  useEffect(() => {\n    if (lessons) {\n      const areTimeIntervalsEqual = (intervalA, intervalB) => {\n        const roundedIntervalA = intervalA.map(extractTimeFromISOString);\n        const roundedIntervalB = intervalB.map(extractTimeFromISOString);\n        return (\n          roundedIntervalA[0] === roundedIntervalB[0] &&\n          roundedIntervalA[1] === roundedIntervalB[1]\n        );\n      };\n\n      const uniquTimeDate = lessons\n        .map(lesson => lesson.timeLesson)\n        .filter(\n          (time, index, self) =>\n            self.findIndex(t => areTimeIntervalsEqual(t, time)) === index\n        )\n        .sort((timeA, timeB) => {\n          const timePartA = timeA[0].split('T')[1];\n          const timePartB = timeB[0].split('T')[1];\n          return timePartA.localeCompare(timePartB);\n        });\n      setUniquTime(uniquTimeDate);\n\n      const uniqueDates = [...new Set(lessons.map(val => val.dateLesson))]\n        .map(dateString => new Date(dateString))\n        .sort((a, b) => a - b)\n        .map(date => date.toISOString());\n\n      setUniquDate(uniqueDates);\n\n      const groupedLessons = uniqueDates.map(date =>\n        lessons.filter(lesson => lesson.dateLesson === date)\n      );\n      setGroupedLessons(groupedLessons);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lessons]);\n\n  return (\n    <MainTableContainer>\n      <TimeLessons timeLessonOnList={uniquTime} officeName={office} />\n      <LessonsWrapper>\n        <DayWrapper>\n          {uniquDate?.map((date, index) => {\n            return (\n              <DayContainer key={index}>\n                <DayDeafult>\n                  <DayDeafultInfo>{formatDateRange(date)}</DayDeafultInfo>\n                  <DayDeafultInfo>{formatDay(date)}</DayDeafultInfo>\n                </DayDeafult>\n                <LessonsContainer>\n                  {uniquTime?.map((time, timeIndex) => {\n                    const lessonsWithSameTime = groupedLessons[index].filter(\n                      day => {\n                        const lessonTimes = day.timeLesson.map(timeString => {\n                          const lessonDate = new Date(timeString);\n                          return {\n                            hours: lessonDate.getHours(),\n                            minutes: lessonDate.getMinutes(),\n                            seconds: lessonDate.getSeconds(),\n                          };\n                        });\n\n                        const targetTime = time.map(timeString => {\n                          const targetDate = new Date(timeString);\n                          return {\n                            hours: targetDate.getHours(),\n                            minutes: targetDate.getMinutes(),\n                            seconds: targetDate.getSeconds(),\n                          };\n                        });\n\n                        return lessonTimes.some(lessonTime =>\n                          targetTime.some(\n                            target =>\n                              lessonTime.hours === target.hours &&\n                              lessonTime.minutes === target.minutes &&\n                              lessonTime.seconds === target.seconds\n                          )\n                        );\n                      }\n                    );\n\n                    const lesson =\n                      lessonsWithSameTime.length > 0\n                        ? lessonsWithSameTime[0]\n                        : null;\n\n                    return (\n                      <LessonsItem\n                        aria-description={lesson ? lesson.status : ''}\n                        aria-current={lesson ? lesson.teacherColor : ''}\n                        key={timeIndex}\n                      >\n                        {lesson ? (\n                          <LessonTableCard\n                            lesson={lesson}\n                            onLessonsDelete={onLessonsDelete}\n                          />\n                        ) : (\n                          <Link\n                            to={`/lesson?dateFreeLesson=${date}&officeFreeLesson=${office}&timeFreeLesson=${JSON.stringify(\n                              time\n                            )}`}\n                          >\n                            <FreeTableItem />\n                          </Link>\n                        )}\n                      </LessonsItem>\n                    );\n                  })}\n                </LessonsContainer>\n              </DayContainer>\n            );\n          })}\n        </DayWrapper>\n      </LessonsWrapper>\n    </MainTableContainer>\n  );\n}\n\nexport default MainTable;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BtnAddLesson = styled(Link)`\n  width: 90%;\n  height: 50px;\n`;\nexport const Wrapper = styled.div`\n  width: 100%;\n  min-height: 80px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  margin: 10px 0;\n`;\n\nexport const BtnTitle = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 20px;\n  color: var(--main-dark-blue);\n`;\n","import { BtnAddLesson, BtnTitle, Wrapper } from './ButtonAddLesson.styled';\nimport FreeTableItem from 'ui/FreeTableItem/FreeTableItem';\n\nconst ButtonAddLesson = ({ pageName }) => {\n  const infoOffice = JSON.stringify({ office: pageName });\n  return (\n    <Wrapper>\n      <BtnTitle>Додати урок:</BtnTitle>\n      <BtnAddLesson to={`/lesson?lessonCopy=${infoOffice}`}>\n        <FreeTableItem />\n      </BtnAddLesson>\n    </Wrapper>\n  );\n};\n\nexport default ButtonAddLesson;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport Container from '../../components/Container/Container';\nimport FilterLesson from 'components/FilterLesson/FilterLesson';\nimport { MainWrapper } from 'components/ContainerMain/ContainerMain.styled';\nimport MainTable from 'ui/MainTable/MainTable';\nimport { selectLessonsСorrection } from 'redux/offices/officesSelector';\nimport {\n  selectedLessonsByDateTeacher,\n  deleteLessonByOfficeAndId,\n} from 'redux/offices/officesOperetion';\nimport SelectDate from 'components/FilterLesson/SelectDate/SelectDate';\nimport { localStorageHelper } from 'helpers/helperLocalStorage';\nimport ButtonAddLesson from 'ui/ButtonAddLesson/ButtonAddLesson';\nimport { useLessonsDates } from 'hooks/useLessonsDates';\nimport { useUniqueTeacher } from 'hooks/useUniqueTeacher';\nimport { useFilteredLessonsTeachers } from 'hooks/useFilteredLessonsTeachers';\n\nfunction CorrectionPage() {\n  const dispatch = useDispatch();\n\n  const lessonsChosePeriod = useSelector(selectLessonsСorrection);\n\n  const [teachers, setTeachers] = useState(null);\n  const [teacher, setTeacher] = useState([]);\n  const [lessons, setLessons] = useState(null);\n  const [dateCurrentLesson, setLessonDates] = useState(\n    localStorageHelper.getData('Correction')\n  );\n  const [type, setType] = useState('Період');\n  const offices = ['Корекційний'];\n  useEffect(() => {\n    if (dateCurrentLesson) {\n      const choesData = { offices, dateCurrentLesson };\n      dispatch(selectedLessonsByDateTeacher(choesData));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useLessonsDates('Correction', setLessonDates, selectedLessonsByDateTeacher, [\n    'Корекційний',\n  ]);\n  useUniqueTeacher(lessonsChosePeriod, setTeachers);\n\n  useFilteredLessonsTeachers(lessonsChosePeriod, setLessons, teacher);\n\n  const items = [\n    {\n      key: 1,\n      label: 'Параметри відбору',\n      children: (\n        <SelectDate\n          pageName=\"Correction\"\n          office=\"Корекційний\"\n          type={type}\n          setType={setType}\n          setLessonDates={setLessonDates}\n          dateCurrentLesson={dateCurrentLesson}\n          teachers={teachers}\n          teacher={teacher}\n          setTeacher={setTeacher}\n          onLessonsChange={choesData => {\n            return dispatch(selectedLessonsByDateTeacher(choesData));\n          }}\n          offices={offices}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Container>\n        <FilterLesson currentItems={items} />\n        {lessonsChosePeriod?.length === 0 && (\n          <ButtonAddLesson pageName=\"Корекційний\" />\n        )}\n        <MainWrapper>\n          {lessons?.length > 0 && (\n            <MainTable\n              lessons={lessons}\n              onLessonsDelete={lesson => {\n                return dispatch(deleteLessonByOfficeAndId(lesson._id));\n              }}\n              office=\"Корекційний\"\n            />\n          )}\n        </MainWrapper>\n      </Container>\n    </>\n  );\n}\n\nexport default CorrectionPage;\n","import styled from 'styled-components';\n\nexport const MainWrapper = styled.div`\n  width: 100%;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: start;\n  gap: 10px;\n  background-color: var(--lessons-background);\n  margin-top: 10px;\n  padding: 20px 5px;\n`;\n"],"names":["TimeContainer","styled","ul","TableItem","li","TimeItem","p","AddLessonLink","IconAddLessonLink","BsPlusCircleDotted","_ref","timeLessonOnList","officeName","infoOffice","JSON","stringify","office","_jsx","_Fragment","children","_jsxs","Link","to","map","time","index","formatTimeRange","DayWrapper","div","LessonsWrapper","MainTableContainer","DayDeafult","DayDeafultInfo","DayContainer","LessonsContainer","LessonsItem","lessons","onLessonsDelete","uniquTime","setUniquTime","useState","uniquDate","setUniquDate","groupedLessons","setGroupedLessons","extractTimeFromISOString","dateTimeString","Date","toLocaleTimeString","timeZone","useEffect","areTimeIntervalsEqual","intervalA","intervalB","roundedIntervalA","roundedIntervalB","uniquTimeDate","lesson","timeLesson","filter","self","findIndex","t","sort","timeA","timeB","timePartA","split","timePartB","localeCompare","uniqueDates","Set","val","dateLesson","dateString","a","b","date","toISOString","TimeLessons","formatDateRange","formatDay","timeIndex","lessonsWithSameTime","day","lessonTimes","timeString","lessonDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","targetTime","targetDate","some","lessonTime","target","length","status","teacherColor","LessonTableCard","FreeTableItem","BtnAddLesson","Wrapper","BtnTitle","pageName","dispatch","useDispatch","lessonsChosePeriod","useSelector","selectLessonsСorrection","teachers","setTeachers","teacher","setTeacher","setLessons","dateCurrentLesson","setLessonDates","localStorageHelper","getData","type","setType","offices","choesData","selectedLessonsByDateTeacher","useLessonsDates","useUniqueTeacher","useFilteredLessonsTeachers","items","key","label","SelectDate","onLessonsChange","Container","FilterLesson","currentItems","ButtonAddLesson","MainWrapper","MainTable","deleteLessonByOfficeAndId","_id"],"sourceRoot":""}