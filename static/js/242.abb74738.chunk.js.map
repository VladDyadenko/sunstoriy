{"version":3,"file":"static/js/242.abb74738.chunk.js","mappings":"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","sources":["components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.styled.js","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.styled.js","components/Expense/ExpenseContainer.styled.js","components/Expense/ExpenseContainer.jsx","ui/ZvitReportTitle/ZvitReportTitle.styled.js","ui/ZvitReportTitle/ZvitReportTitle.jsx","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.jsx","redux/zvit/api.js","components/FinancialOffice/PeriodReport/PeriodReport.styled.js","components/FinancialOffice/PeriodReport/PeriodReport.jsx","redux/expense/expenceSelector.js","redux/zvit/zvitSelector.js","components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperFinancialOffice = styled.div`\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 8px;\n  gap: 20px;\n  margin-bottom: 8px;\n`;\nexport const ContantLineWrapper = styled.div`\n  width: 100%;\n  max-width: 80%;\n  height: 100vh;\n  padding: 10px;\n`;\nexport const ZvitContainer = styled.div`\n  border: 1px solid var(--main-yellow);\n  padding: 7px;\n  border-radius: 15px;\n  margin-bottom: 30px;\n`;\n","import { Button } from 'antd';\nimport styled from 'styled-components';\nimport { btnStyledAll } from 'styles/GlobalStyles';\n\n// export const FinancialCommandTitle = styled.p`\n//   text-align: center;\n//   width: 100%;\n//   text-align: center;\n//   font-family: 'Roboto';\n//   font-size: 20px;\n//   font-weight: 400;\n//   padding-bottom: 5px;\n\n//   border-bottom: 2px solid var(--main-green);\n// `;\nexport const CommandLineWrapper = styled.div`\n  width: 100%;\n  max-width: 20%;\n  height: 100vh;\n  /* border: 2px solid var(--main-green); */\n  padding: 10px;\n`;\n\nexport const CommandLineButton = styled(Button)`\n  ${btnStyledAll}\n  background-color: var(--main-green);\n  &:hover {\n    background-color: var(--bg-main-color);\n  }\n\n  &:disabled {\n    background-color: var(--main-disabled);\n    color: var(--header-main-color);\n  }\n  & span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n  }\n  & svg {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DateTitle = styled.div`\n  margin-bottom: 20px;\n  text-align: center;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 14px;\n`;\nexport const DateDescription = styled.p`\n  color: var(--main-green);\n`;\n","import { Drawer, Form, InputNumber, Select, Input, Button, Radio } from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport { categoryExpense } from 'assets/constants/mainConstans';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addExpense } from 'redux/expense/expenseOperetion';\nimport { DateDescription, DateTitle } from './ExpenseContainer.styled';\n\nconst ExpenseContainer = ({ selectedPeriod, open, onCloseDrawerExpense }) => {\n  const [form] = useForm();\n  const [paymentMethod, setPaymentMethod] = useState(null);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Drawer\n        title=\"Поточні витрати\"\n        placement=\"right\"\n        width={340}\n        onClose={onCloseDrawerExpense}\n        open={open}\n      >\n        <Form\n          form={form}\n          initialValues={{\n            date: null,\n            category: 'salary',\n            amount: null,\n            paymentForm: 'cash',\n            bank: '',\n            description: '',\n          }}\n          onFinish={async values => {\n            if (values.paymentForm === 'cash') {\n              values.bank = '';\n            }\n            values.date = selectedPeriod;\n            await dispatch(addExpense(values)).then(() => {\n              onCloseDrawerExpense();\n            });\n          }}\n        >\n          <DateTitle>\n            Дата витрат: <DateDescription>{selectedPeriod}</DateDescription>\n          </DateTitle>\n\n          <Form.Item\n            label=\"Категорія витрат\"\n            name=\"category\"\n            rules={[{ required: true, message: 'Виберіть категорію' }]}\n          >\n            <Select>\n              {categoryExpense.map(expense => (\n                <Select.Option key={expense.category} value={expense.category}>\n                  {expense.title}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            rules={[{ required: true, message: 'Внесіть суму витрат' }]}\n            label=\"Сума\"\n            name=\"amount\"\n          >\n            <InputNumber style={{ width: '100%' }} placeholder=\"Вкажіть суму\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Форма оплати\"\n            name=\"paymentForm\"\n            onChange={e => {\n              if (e.target.value === 'cash') {\n                form.setFieldsValue({ bank: '' });\n              }\n            }}\n          >\n            <Radio.Group\n              onChange={e => {\n                setPaymentMethod(e.target.value);\n                if (e.target.value !== 'cashless') {\n                  form.setFieldsValue({ bank: undefined });\n                  form.resetFields(['bank', 'sum']);\n                }\n              }}\n            >\n              <Radio value=\"cash\">Готівка</Radio>\n              <Radio value=\"cashless\">Безготівкова</Radio>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item\n            rules={\n              paymentMethod === 'cashless' && [\n                { required: true, message: 'Оберіть банк' },\n              ]\n            }\n            label=\"Виберіть банк\"\n            name=\"bank\"\n            style={{ width: 250 }}\n          >\n            <Select>\n              <Select.Option value=\"PrivatBank\">ПриватБанк</Select.Option>\n              <Select.Option value=\"MonoBank\">Монобанк</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Опис витрат\" name=\"description\">\n            <Input.TextArea\n              placeholder=\"За потребою додайте опис\"\n              autoSize={{\n                minRows: 1,\n                maxRows: 5,\n              }}\n            />\n          </Form.Item>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              flexDirection: 'column',\n              gap: 8,\n            }}\n          >\n            <Button\n              style={{ width: '100%' }}\n              type=\"primary\"\n              onClick={onCloseDrawerExpense}\n              htmlType=\"button\"\n            >\n              Відмінити\n            </Button>\n            <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\">\n              Зберегти зміни\n            </Button>\n          </div>\n        </Form>\n      </Drawer>\n    </>\n  );\n};\n\nexport default ExpenseContainer;\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  width: 100%;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  text-align: center;\n  margin-bottom: 10px;\n  padding: 7px 0;\n  color: var(--main-green);\n  background-color: #e6f7ff;\n  border-radius: 10px;\n`;\n","import React from 'react';\nimport { Title } from './ZvitReportTitle.styled';\n\nconst ZvitReportTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default ZvitReportTitle;\n","import React, { useState } from 'react';\nimport { DatePicker } from 'antd';\nimport { FaRegCalendarPlus } from 'react-icons/fa';\n\nimport {\n  BsBarChartLine,\n  BsClipboardPulse,\n  BsEmojiHeartEyes,\n  BsEmojiFrown,\n} from 'react-icons/bs';\n\nimport {\n  CommandLineButton,\n  CommandLineWrapper,\n} from './FinancialButtonContainer.styled';\n\nimport dayjs from 'dayjs';\nimport ExpenseContainer from 'components/Expense/ExpenseContainer';\nimport { useDispatch } from 'react-redux';\nimport { createZvitSelectedPeriod } from 'redux/zvit/zvitOperetion';\nimport ZvitReportTitle from 'ui/ZvitReportTitle/ZvitReportTitle';\nconst { RangePicker } = DatePicker;\n\nconst FinancialButtonContainer = ({ setDateFromTitle, setTypeZvit }) => {\n  const dispatch = useDispatch();\n  const today = dayjs();\n\n  const [dayOrePariod, setDayOrePariod] = useState('oneDay');\n  const [selectedPeriod, setSelectedPeriod] = useState(null);\n  const [selectedDateString, setSelectedDateString] = useState(null);\n  const [dateFromExpense, setDateFromExpense] = useState(\n    new Date().toISOString().split('T')[0]\n  );\n\n  const [open, setOpen] = useState(false);\n  const onCloseDrawerExpense = () => {\n    setOpen(false);\n  };\n\n  function selectDay(dates, dateStrings) {\n    if (!dates || dates.length === 0) return;\n    setDateFromExpense(dateStrings[0]);\n    setSelectedDateString(dateStrings);\n\n    // Отримуємо дати у форматі JavaScript Date\n    const startDate = new Date(dates[0].toDate());\n    const endDate = new Date(dates[1].toDate());\n\n    // Обнуляємо години для початку дня\n    startDate.setUTCHours(0, 0, 0, 0);\n    endDate.setUTCHours(23, 59, 59, 999);\n\n    const isOneDay =\n      startDate.getUTCFullYear() === endDate.getUTCFullYear() &&\n      startDate.getUTCMonth() === endDate.getUTCMonth() &&\n      startDate.getUTCDate() === endDate.getUTCDate();\n\n    // Форматуємо для бекенду\n    const formattedDates = {\n      startDate: startDate.toISOString(), // 2025-02-01T00:00:00.000Z\n      endDate: endDate.toISOString(), // 2025-02-08T23:59:59.999Z\n    };\n    setSelectedPeriod(formattedDates);\n\n    setDayOrePariod(isOneDay ? 'oneDay' : 'period');\n  }\n\n  const createZvitForPeriod = async period => {\n    if (!period) return;\n    setTypeZvit('report_for_period');\n\n    try {\n      await dispatch(createZvitSelectedPeriod(period)).then(() =>\n        setDateFromTitle(\n          dayOrePariod === 'oneDay'\n            ? `Обороти за ${selectedDateString[0]\n                .split('-')\n                .reverse()\n                .join('-')}`\n            : `Обороти з ${selectedDateString[0]\n                .split('-')\n                .reverse()\n                .join('-')} по ${selectedDateString[1]\n                .split('-')\n                .reverse()\n                .join('-')}`\n        )\n      );\n    } catch (error) {\n      console.error('❌ Error fetching total profit:', error);\n    }\n  };\n\n  return (\n    <>\n      <CommandLineWrapper>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n          }}\n        >\n          <ZvitReportTitle title=\"Фінансові показники:\" />\n          <RangePicker defaultValue={[today, today]} onChange={selectDay} />\n          <CommandLineButton disabled={dayOrePariod === 'period'}>\n            {dayOrePariod === 'period' ? (\n              <>\n                Доходи за день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                Доходи за день <BsBarChartLine />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton\n            onClick={() => createZvitForPeriod(selectedPeriod)}\n            disabled={dayOrePariod === 'period'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Звіт за день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                Звіт за день <BsClipboardPulse />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton disabled={dayOrePariod === 'oneDay'}>\n            {dayOrePariod === 'period' ? (\n              <>\n                Доходи за період <BsBarChartLine />\n              </>\n            ) : (\n              <>\n                Доходи за період <FaRegCalendarPlus />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton\n            onClick={() => createZvitForPeriod(selectedPeriod)}\n            disabled={dayOrePariod === 'oneDay'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Звіт за період <BsClipboardPulse />\n              </>\n            ) : (\n              <>\n                Звіт за період\n                <FaRegCalendarPlus />\n              </>\n            )}\n          </CommandLineButton>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n            marginTop: 35,\n          }}\n        >\n          <ZvitReportTitle title=\"Зарплата вчителів:\" />\n          <CommandLineButton disabled={dayOrePariod === 'period'}>\n            {dayOrePariod === 'period' ? (\n              <>\n                День <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                День <BsEmojiHeartEyes />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton disabled={dayOrePariod === 'oneDay'}>\n            {dayOrePariod === 'period' ? (\n              <>\n                Період <BsEmojiHeartEyes />\n              </>\n            ) : (\n              <>\n                Період <FaRegCalendarPlus />\n              </>\n            )}\n          </CommandLineButton>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n            marginTop: 35,\n          }}\n        >\n          <ZvitReportTitle title=\"Внесення розходів\" />\n          <CommandLineButton\n            onClick={() => setOpen(true)}\n            disabled={dayOrePariod === 'period'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Виберіть день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                Додай витрати <BsEmojiFrown />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton\n            htmlType=\"button\"\n            disabled={dayOrePariod === 'period'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Виберіть день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                Внеси дохід <BsEmojiHeartEyes />\n              </>\n            )}\n          </CommandLineButton>\n          <ExpenseContainer\n            onCloseDrawerExpense={onCloseDrawerExpense}\n            open={open}\n            selectedPeriod={dateFromExpense}\n          />\n        </div>\n      </CommandLineWrapper>\n    </>\n  );\n};\n\nexport default FinancialButtonContainer;\n","import axios from 'axios';\n\nexport const getZvitOneMonthTotal = async choesData => {\n  try {\n    const { data } = await axios.get(`/zvit/one_month_total`, {\n      params: choesData,\n    });\n\n    return data;\n  } catch (err) {\n    console.error('❌ Error:', err.message);\n  }\n};\n","import styled from 'styled-components';\nimport { Table } from 'antd';\n\nexport const StyledTable = styled(Table)`\n  .ant-table {\n    font-size: 14px;\n  }\n\n  .ant-table-thead > tr > th {\n    background-color: #f0f2f5 !important; /* Колір фону заголовків */\n    font-weight: bold;\n    text-align: center;\n  }\n\n  .ant-table-tbody > tr > td {\n    text-align: center;\n  }\n\n  .ant-table-tbody > tr:hover {\n    background-color: #e6f7ff; /* Колір при наведенні */\n  }\n\n  .ant-table-row[data-row-key='balance'] {\n    font-size: 16px;\n    font-weight: 400;\n    background-color: #e6f7ff !important; /* Колір фону */\n    color: #1890ff; /* Колір тексту */\n    border-left: 10px;\n  }\n`;\nexport const StyledCellNegative = styled.span`\n  color: var(--main-red);\n`;\nexport const StyledCell = styled.span`\n  color: inherit;\n`;\n","import React from 'react';\nimport {\n  StyledCell,\n  StyledCellNegative,\n  StyledTable,\n} from './PeriodReport.styled';\n\nconst ReportCurrentMonth = ({ indicatorsCurrentMonth, loading }) => {\n  const {\n    profit = {},\n    expense = {},\n    income = {},\n    workedIncom = 0,\n    previousPeriodProfit = {},\n  } = indicatorsCurrentMonth;\n\n  const columns = [\n    {\n      key: '1',\n      title: 'Категорія',\n      dataIndex: 'category',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '2',\n      title: 'На початок періоду',\n      dataIndex: 'profitPrev',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '3',\n      title: 'Оплачені кошти',\n      dataIndex: 'currentIncome',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '4',\n      title: 'Поточні витрати',\n      dataIndex: 'currentExpense',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '5',\n      title: 'Відпрацьовано',\n      dataIndex: 'workedLessons',\n      onCell: (_, index) => {\n        if (index === 0) {\n          return { rowSpan: dataSource.length };\n        }\n        return { rowSpan: 0 };\n      },\n    },\n\n    {\n      key: '6',\n      title: 'На кінець періоду ',\n      dataIndex: 'profit',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n  ];\n\n  const dataSource = [\n    {\n      key: 'cash',\n      category: 'Готівка',\n      profitPrev: previousPeriodProfit?.cash || 0,\n      profit: profit?.kasa || 0,\n      currentExpense: expense?.cash || 0,\n      currentIncome: income?.cash || 0,\n      workedLessons: workedIncom,\n    },\n    {\n      key: 'privat',\n      category: 'ПриватБанк',\n      profitPrev: previousPeriodProfit?.privatBank || 0,\n      profit: profit?.privatBank || 0,\n      currentExpense: expense?.privatBank || 0,\n      currentIncome: income?.privatBank || 0,\n      workedLessons: '',\n    },\n    {\n      key: 'mono',\n      category: 'МоноБанк',\n      profitPrev: previousPeriodProfit?.monoBank || 0,\n      profit: profit?.monoBank || 0,\n      currentExpense: expense?.monoBank || 0,\n      currentIncome: income?.monoBank || 0,\n      workedLessons: '',\n    },\n    {\n      key: 'balance',\n      category: 'Ітого:',\n      profitPrev: previousPeriodProfit?.amount || 0,\n      profit: profit?.amount || 0,\n      currentExpense: expense?.amount || 0,\n      currentIncome: income?.amount || 0,\n      workedLessons: '',\n    },\n  ];\n\n  return (\n    <div>\n      <StyledTable\n        columns={columns}\n        dataSource={dataSource}\n        size=\"small\"\n        pagination={false}\n        loading={loading}\n      />\n    </div>\n  );\n};\n\nexport default ReportCurrentMonth;\n","export const selectExpense = state => state.expense.operetion;\n","export const selectZvitSelectedPeriod = state => state.zvit.zvitSelectedPeriod;\nexport const selectZvitLoadinge = state => state.zvit.isloading;\n","import React, { useEffect, useState } from 'react';\nimport {\n  ContantLineWrapper,\n  WrapperFinancialOffice,\n  ZvitContainer,\n} from './FinancialLayout.styled';\nimport FinancialButtonContainer from '../FinancialButtonContainer/FinancialButtonContainer';\nimport Container from 'components/Container/Container';\nimport { getZvitOneMonthTotal } from 'redux/zvit/api';\nimport ReportCurrentMonth from '../PeriodReport/PeriodReport';\nimport { useSelector } from 'react-redux';\nimport { selectExpense } from 'redux/expense/expenceSelector';\nimport {\n  selectZvitLoadinge,\n  selectZvitSelectedPeriod,\n} from 'redux/zvit/zvitSelector';\nimport ZvitReportTitle from 'ui/ZvitReportTitle/ZvitReportTitle';\n\nconst FinancialLayout = () => {\n  const [indicatorsCurrentMonth, setIndicatorsCurrentMonth] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [typeZvit, setTypeZvit] = useState('');\n  const [dateFromTitle, setDateFromTitle] = useState('');\n\n  const expenseMarker = useSelector(selectExpense);\n  const dataFromZvitPeriod = useSelector(selectZvitSelectedPeriod);\n  const zvitIsLoading = useSelector(selectZvitLoadinge);\n\n  const { totalData } = dataFromZvitPeriod;\n  useEffect(() => {\n    const fetchZvitOneMonthTotal = async () => {\n      const now = new Date();\n\n      const startDate = new Date(now.getFullYear(), now.getMonth(), 1);\n      const endDate = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n      const formattedDates = {\n        startDate: startDate.toISOString(),\n        endDate: endDate.toISOString(),\n      };\n\n      try {\n        setLoading(true);\n        const { totalData } = await getZvitOneMonthTotal(formattedDates);\n        setIndicatorsCurrentMonth(totalData);\n      } catch (error) {\n        console.error('❌ Error fetching total profit:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchZvitOneMonthTotal();\n  }, [expenseMarker]);\n  return (\n    <Container>\n      <WrapperFinancialOffice>\n        <FinancialButtonContainer\n          setDateFromTitle={setDateFromTitle}\n          setTypeZvit={setTypeZvit}\n        />\n        <ContantLineWrapper>\n          <ZvitContainer>\n            <ZvitReportTitle title=\"Поточні цифри місяця\" />\n            <ReportCurrentMonth\n              loading={loading}\n              indicatorsCurrentMonth={indicatorsCurrentMonth}\n            />\n          </ZvitContainer>\n\n          {typeZvit === 'report_for_period' &&\n            totalData &&\n            Object.keys(totalData).length > 0 && (\n              <ZvitContainer>\n                <ZvitReportTitle title={`${dateFromTitle}`} />\n                <ReportCurrentMonth\n                  loading={zvitIsLoading}\n                  indicatorsCurrentMonth={totalData}\n                />\n              </ZvitContainer>\n            )}\n        </ContantLineWrapper>\n      </WrapperFinancialOffice>\n    </Container>\n  );\n};\n\nexport default FinancialLayout;\n"],"names":["WrapperFinancialOffice","styled","div","_templateObject","_taggedTemplateLiteral","ContantLineWrapper","_templateObject2","ZvitContainer","_templateObject3","CommandLineWrapper","CommandLineButton","Button","btnStyledAll","DateTitle","DateDescription","p","_ref","selectedPeriod","open","onCloseDrawerExpense","_useForm","useForm","form","_slicedToArray","_useState","useState","_useState2","paymentMethod","setPaymentMethod","dispatch","useDispatch","_jsx","_Fragment","children","Drawer","title","placement","width","onClose","_jsxs","Form","initialValues","date","category","amount","paymentForm","bank","description","onFinish","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","addExpense","then","stop","_x","apply","arguments","Item","label","name","rules","required","message","Select","categoryExpense","map","expense","Option","value","InputNumber","style","placeholder","onChange","e","target","setFieldsValue","Radio","undefined","resetFields","Input","TextArea","autoSize","minRows","maxRows","display","alignItems","flexDirection","gap","type","onClick","htmlType","Title","h3","RangePicker","DatePicker","setDateFromTitle","setTypeZvit","today","dayjs","dayOrePariod","setDayOrePariod","_useState3","_useState4","setSelectedPeriod","_useState5","_useState6","selectedDateString","setSelectedDateString","_useState7","Date","toISOString","split","_useState8","dateFromExpense","setDateFromExpense","_useState9","_useState10","setOpen","createZvitForPeriod","period","abrupt","createZvitSelectedPeriod","concat","reverse","join","t0","console","error","ZvitReportTitle","defaultValue","dates","dateStrings","length","startDate","toDate","endDate","setUTCHours","isOneDay","getUTCFullYear","getUTCMonth","getUTCDate","formattedDates","disabled","FaRegCalendarPlus","BsBarChartLine","BsClipboardPulse","marginTop","BsEmojiHeartEyes","BsEmojiFrown","ExpenseContainer","getZvitOneMonthTotal","choesData","_yield$axios$get","data","axios","get","params","sent","StyledTable","Table","StyledCellNegative","span","StyledCell","indicatorsCurrentMonth","loading","_indicatorsCurrentMon","profit","_indicatorsCurrentMon2","_indicatorsCurrentMon3","income","_indicatorsCurrentMon4","workedIncom","_indicatorsCurrentMon5","previousPeriodProfit","columns","key","dataIndex","render","onCell","_","index","rowSpan","dataSource","profitPrev","cash","kasa","currentExpense","currentIncome","workedLessons","privatBank","monoBank","size","pagination","selectExpense","state","operetion","selectZvitSelectedPeriod","zvit","zvitSelectedPeriod","selectZvitLoadinge","isloading","setIndicatorsCurrentMonth","setLoading","typeZvit","dateFromTitle","expenseMarker","useSelector","dataFromZvitPeriod","zvitIsLoading","totalData","useEffect","fetchZvitOneMonthTotal","now","_yield$getZvitOneMont","_totalData","getFullYear","getMonth","finish","Container","FinancialButtonContainer","ReportCurrentMonth","Object","keys"],"sourceRoot":""}