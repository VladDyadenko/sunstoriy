{"version":3,"file":"static/js/705.4f0321fc.chunk.js","mappings":"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","sources":["components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.styled.js","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.styled.js","components/Expense/ExpenseContainer.styled.js","redux/expense/expenceSelector.js","components/Expense/ExpenseContainer.jsx","assets/constants/reusableFunctions.js","redux/salary/salarySelector.js","components/SalarisForm/SalarisForm.js","ui/ZvitButtonTitle/ZvitButtonTitle.styled.js","ui/ZvitButtonTitle/ZvitButtonTitle.jsx","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.jsx","components/FinancialOffice/PeriodReport/PeriodReport.styled.js","components/FinancialOffice/PeriodReport/PeriodReport.jsx","redux/zvit/zvitSelector.js","ui/ZvitReportTitle/ZvitReportTitle.styled.js","ui/ZvitReportTitle/ZvitReportTitle.jsx","components/Zvit/TableExpensesZvit/TableExpensesZvit.jsx","components/Zvit/Salary/SalaryZvitTable/SalaryZvitTable.jsx","components/Zvit/ChildrensPeriodZvit/ChildrensPeriodZvit.jsx","components/Zvit/ChildPeriodZvit/ChildPeriodZvit.styled.js","components/Zvit/ChildPeriodZvit/PaymentChuldLesson/PaymentChuldLesson.jsx","components/Zvit/ChildPeriodZvit/ChildPeriodZvit.jsx","components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.jsx","redux/zvit/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperFinancialOffice = styled.div`\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  align-items: start;\n  justify-content: center;\n\n  border-radius: 8px;\n  gap: 20px;\n  margin-bottom: 8px;\n`;\nexport const ContantLineWrapper = styled.div`\n  width: 100%;\n  max-width: 80%;\n  padding: 10px;\n`;\nexport const ZvitContainer = styled.div`\n  border: 1px solid var(--main-yellow);\n  padding: 7px;\n  border-radius: 15px;\n  margin-bottom: 30px;\n`;\n","import { Button } from 'antd';\nimport styled from 'styled-components';\nimport { btnStyledAll } from 'styles/GlobalStyles';\n\n// export const FinancialCommandTitle = styled.p`\n//   text-align: center;\n//   width: 100%;\n//   text-align: center;\n//   font-family: 'Roboto';\n//   font-size: 20px;\n//   font-weight: 400;\n//   padding-bottom: 5px;\n\n//   border-bottom: 2px solid var(--main-green);\n// `;\nexport const CommandLineWrapper = styled.div`\n  width: 100%;\n  max-width: 20%;\n  height: 100vh;\n  /* border: 2px solid var(--main-green); */\n  padding: 10px;\n`;\nexport const SectionsContainer = styled.div`\n  margin-bottom: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const CommandLineButton = styled(Button)`\n  ${btnStyledAll}\n  background-color: var(--main-green);\n\n  &:hover {\n    background-color: var(--bg-main-color) !important;\n  }\n\n  &:disabled {\n    background-color: var(--main-disabled);\n    color: var(--header-main-color);\n  }\n  & span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n  }\n  & svg {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DateTitle = styled.div`\n  margin-bottom: 30px;\n  padding-bottom: 20px;\n  text-align: center;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  border-bottom: 1px solid rgba(5, 5, 5, 0.06);\n`;\nexport const DateDescription = styled.span`\n  margin-left: 7px;\n  font-size: 18px;\n  color: var(--main-green);\n`;\nexport const ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 8px;\n  padding-top: 20px;\n  border-top: 1px solid rgba(5, 5, 5, 0.06);\n`;\n","export const selectExpense = state => state.expense.operetion;\nexport const selectExpenseByDate = state => state.expense.expensesPeriod;\nexport const selectExpenseLoading = state => state.expense.isloading;\nexport const selectZvitStatusExpense = state => state.expense.zvitStatus;\nexport const selectExpenseSelected = state => state.expense.expenseSelected;\n","import { Drawer, Form, InputNumber, Select, Input, Button, Radio } from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport { categoryExpense } from 'assets/constants/mainConstans';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addExpense, updateExpense } from 'redux/expense/expenseOperetion';\nimport { DateDescription, DateTitle } from './ExpenseContainer.styled';\nimport { selectExpenseSelected } from 'redux/expense/expenceSelector';\nimport { clearExpenseSelected } from 'redux/expense/expenseSlice';\n\nconst ExpenseContainer = ({\n  setOpen,\n  selectedPeriod,\n  open,\n  onCloseDrawerExpense,\n}) => {\n  const [form] = useForm();\n  const [paymentMethod, setPaymentMethod] = useState(null);\n  const dispatch = useDispatch();\n  const updateExpenseInfo = useSelector(selectExpenseSelected);\n\n  useEffect(() => {\n    if (updateExpenseInfo) {\n      setOpen(true);\n      form.setFieldsValue({\n        date: updateExpenseInfo.date\n          ? updateExpenseInfo.date.split('T')[0]\n          : selectedPeriod,\n        category: updateExpenseInfo.category || 'Інше',\n        amount: updateExpenseInfo.amount || null,\n        paymentForm: updateExpenseInfo.paymentForm || 'cash',\n        bank: updateExpenseInfo.bank || '',\n        description: updateExpenseInfo.description || '',\n      });\n      setPaymentMethod(updateExpenseInfo.paymentForm || 'cash');\n    }\n  }, [updateExpenseInfo, setOpen, form, selectedPeriod]);\n\n  return (\n    <>\n      <Drawer\n        title=\"Поточні витрати\"\n        placement=\"right\"\n        width={400}\n        onClose={onCloseDrawerExpense}\n        open={open}\n      >\n        <Form\n          form={form}\n          initialValues={{\n            date: null,\n            category: 'Інше',\n            amount: null,\n            paymentForm: 'cash',\n            bank: '',\n            description: '',\n          }}\n          onFinish={async values => {\n            if (updateExpenseInfo) {\n              const expenseData = { id: updateExpenseInfo._id, values };\n              await dispatch(updateExpense(expenseData)).then(async () => {\n                dispatch(clearExpenseSelected());\n                onCloseDrawerExpense();\n                form.resetFields();\n              });\n            } else {\n              if (values.paymentForm === 'cash') {\n                values.bank = '';\n              }\n              values.date = selectedPeriod;\n              await dispatch(addExpense(values)).then(() => {\n                onCloseDrawerExpense();\n                form.resetFields();\n              });\n            }\n          }}\n        >\n          <DateTitle>\n            Дата витрат: <DateDescription>{selectedPeriod}</DateDescription>\n          </DateTitle>\n\n          <Form.Item\n            label=\"Категорія витрат\"\n            name=\"category\"\n            rules={[{ required: true, message: 'Виберіть категорію' }]}\n          >\n            <Select>\n              {categoryExpense.map(expense => (\n                <Select.Option key={expense.category} value={expense.category}>\n                  {expense.title}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            rules={[{ required: true, message: 'Внесіть суму витрат' }]}\n            label=\"Сума\"\n            name=\"amount\"\n          >\n            <InputNumber style={{ width: '100%' }} placeholder=\"Вкажіть суму\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Форма оплати\"\n            name=\"paymentForm\"\n            onChange={e => {\n              if (e.target.value === 'cash') {\n                form.setFieldsValue({ bank: '' });\n              }\n            }}\n          >\n            <Radio.Group\n              onChange={e => {\n                setPaymentMethod(e.target.value);\n                if (e.target.value !== 'cashless') {\n                  form.setFieldsValue({ bank: undefined });\n                  form.resetFields(['bank', 'sum']);\n                }\n              }}\n            >\n              <Radio value=\"cash\">Готівка</Radio>\n              <Radio value=\"cashless\">Безготівкова</Radio>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item\n            rules={\n              paymentMethod === 'cashless' && [\n                { required: true, message: 'Оберіть банк' },\n              ]\n            }\n            label=\"Виберіть банк\"\n            name=\"bank\"\n            style={{ width: 250 }}\n          >\n            <Select>\n              <Select.Option value=\"PrivatBank\">ПриватБанк</Select.Option>\n              <Select.Option value=\"MonoBank\">Монобанк</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Опис витрат\" name=\"description\">\n            <Input.TextArea\n              placeholder=\"За потребою додайте опис\"\n              autoSize={{\n                minRows: 1,\n                maxRows: 5,\n              }}\n            />\n          </Form.Item>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              flexDirection: 'column',\n              gap: 8,\n            }}\n          >\n            <Button\n              style={{ width: '100%' }}\n              type=\"primary\"\n              onClick={onCloseDrawerExpense}\n              htmlType=\"button\"\n            >\n              Відмінити\n            </Button>\n            <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\">\n              Зберегти зміни\n            </Button>\n          </div>\n        </Form>\n      </Drawer>\n    </>\n  );\n};\n\nexport default ExpenseContainer;\n","// для звітів\nexport const formatDateTitle = (dayOrePariod, selectedDateString) => {\n  if (dayOrePariod === 'oneDay') {\n    return `за ${selectedDateString[0].split('-').reverse().join('-')}`;\n  } else {\n    return `з ${selectedDateString[0]\n      .split('-')\n      .reverse()\n      .join('-')} по ${selectedDateString[1].split('-').reverse().join('-')}`;\n  }\n};\n","export const selectSalaryForPeriod = state => state.salary.salaryPeriod;\nexport const selectSalaryLoading = state => state.salary.isloading;\nexport const selectSalaryStatus = state => state.salary.salaryStatus;\nexport const selectSalarySelected = state => state.salary.salarySelected;\n","import {\n  Button,\n  Checkbox,\n  Drawer,\n  Form,\n  Input,\n  InputNumber,\n  Select,\n} from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport {\n  ButtonContainer,\n  DateDescription,\n  DateTitle,\n} from 'components/Expense/ExpenseContainer.styled';\nimport { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addExpense } from 'redux/expense/expenseOperetion';\nimport { updateSalary } from 'redux/salary/salaryOperetion';\nimport { selectSalarySelected } from 'redux/salary/salarySelector';\nimport { clearSalarySelected } from 'redux/salary/salarySlice';\n\nconst SalarisForm = ({ selectedPeriod }) => {\n  const [form] = useForm();\n  const dispatch = useDispatch();\n  const updateSalaryData = useSelector(selectSalarySelected);\n  const [open, setOpen] = useState(false);\n  const [paymentSelected, setPaymentSelected] = useState(null);\n  const [paymentMethod, setPaymentMethod] = useState(null);\n\n  const onCloseDrawerSalary = () => {\n    setOpen(false);\n  };\n  const onCencelSalarySelected = () => {\n    setOpen(false);\n    dispatch(clearSalarySelected());\n  };\n  useEffect(() => {\n    if (updateSalaryData) {\n      setOpen(true);\n\n      form.setFieldsValue({\n        amount_cash: null,\n        amount_cashless: null,\n        amount_debt: updateSalaryData?.amount_debt,\n      });\n    }\n  }, [updateSalaryData, form]);\n\n  return (\n    <Drawer\n      title=\"Виплата зарплати фахівцям\"\n      placement=\"right\"\n      width={340}\n      open={open}\n      onClose={onCloseDrawerSalary}\n    >\n      <DateTitle>\n        <p style={{ marginBottom: 15 }}>\n          Фахівець:\n          <DateDescription>{` ${updateSalaryData?.name}  ${updateSalaryData?.surname}`}</DateDescription>\n        </p>\n        <p>\n          Дата нарахування:\n          <DateDescription>{selectedPeriod}</DateDescription>\n        </p>\n        <p>\n          Дата виплати:\n          <DateDescription>{selectedPeriod}</DateDescription>\n        </p>\n        <p>\n          Сума до виплати:\n          <DateDescription>{updateSalaryData?.amount_accrued}</DateDescription>\n        </p>\n      </DateTitle>\n\n      <Form\n        form={form}\n        initialValues={{\n          amount_cash: null,\n          amount_cashless: null,\n          amount_debt: updateSalaryData?.amount_debt,\n        }}\n        onFinish={async values => {\n          const totalPaid =\n            (values.amount_cash || 0) + (values.amount_cashless || 0);\n          if (totalPaid > updateSalaryData?.amount_debt) {\n            return Notify.failure('Сума виплати перевищує заборгованність!');\n          }\n          values.date = updateSalaryData.date;\n          values.comment = [\n            values.amount_cash ? `${values.amount_cash} грн` : null,\n            values.amount_cashless ? `${values.amount_cashless} грн` : null,\n            `виплачено ${selectedPeriod}`,\n          ]\n            .filter(Boolean)\n            .join(' ');\n\n          const salaryData = { id: updateSalaryData._id, values };\n\n          await dispatch(updateSalary(salaryData)).then(() => {\n            onCloseDrawerSalary();\n            // Додаємо витрати\n            if (values.amount_cash > 0 || values.amount_cash < 0) {\n              dispatch(\n                addExpense({\n                  date: selectedPeriod,\n                  salaryId: updateSalaryData?._id,\n                  category: `Зарплата ${updateSalaryData?.name} ${updateSalaryData?.surname}`,\n                  amount: values.amount_cash,\n                  paymentForm: 'cash',\n                  bank: '',\n                  description: `Нараховано ${\n                    updateSalaryData?.date.split('T')[0]\n                  }`,\n                })\n              );\n            }\n            if (values.amount_cashless > 0 || values.amount_cashless < 0) {\n              dispatch(\n                addExpense({\n                  date: selectedPeriod,\n                  salaryId: updateSalaryData?._id,\n                  category: `Зарплата ${updateSalaryData?.name} ${updateSalaryData?.surname}`,\n                  amount: values.amount_cashless,\n                  paymentForm: 'cashless',\n                  bank: values.bank,\n                  description: `Нараховано ${\n                    updateSalaryData?.date.split('T')[0]\n                  }`,\n                })\n              );\n            }\n\n            form.resetFields();\n            dispatch(clearSalarySelected());\n          });\n        }}\n      >\n        <Form.Item label=\"Форма виплати\" name=\"paymentMethod\">\n          <Checkbox.Group\n            onChange={values => {\n              setPaymentMethod(values);\n              setPaymentSelected(values);\n              if (!values?.includes('cashless')) {\n                form.setFieldsValue({ bank: undefined });\n                form.resetFields(['bank']);\n              }\n            }}\n          >\n            <Checkbox value=\"cash\">Готівка</Checkbox>\n            <Checkbox value=\"cashless\">Безготівкова</Checkbox>\n          </Checkbox.Group>\n        </Form.Item>\n        {/* Поле для виплати готівкою */}\n        {paymentSelected?.includes('cash') && (\n          <Form.Item\n            rules={\n              paymentMethod.includes('cash') && [\n                { required: true, message: 'Вкажіть суму' },\n              ]\n            }\n            label=\"Сума готівкою\"\n            name=\"amount_cash\"\n          >\n            <InputNumber\n              style={{ width: '100%' }}\n              placeholder=\"Сума готівкою\"\n              onChange={value => {\n                const cashless = form.getFieldValue('amount_cashless') || 0;\n                form.setFieldsValue({\n                  amount_debt:\n                    updateSalaryData?.amount_debt - (value || 0) - cashless,\n                });\n              }}\n            />\n          </Form.Item>\n        )}\n\n        {/* Поле для виплати безготівково */}\n        {paymentSelected?.includes('cashless') && (\n          <>\n            <Form.Item\n              label=\"Банк\"\n              name=\"bank\"\n              rules={[{ required: true, message: 'Оберіть банк' }]}\n            >\n              <Select>\n                <Select.Option value=\"PrivatBank\">ПриватБанк</Select.Option>\n                <Select.Option value=\"MonoBank\">Монобанк</Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              rules={\n                paymentMethod.includes('cashless') && [\n                  { required: true, message: 'Вкажіть суму' },\n                ]\n              }\n              label=\"Сума безготівково\"\n              name=\"amount_cashless\"\n            >\n              <InputNumber\n                style={{ width: '100%' }}\n                placeholder=\"Сума безготівково\"\n                onChange={value => {\n                  const cash = form.getFieldValue('amount_cash') || 0;\n                  form.setFieldsValue({\n                    amount_debt:\n                      updateSalaryData?.amount_debt - (value || 0) - cash,\n                  });\n                }}\n              />\n            </Form.Item>\n          </>\n        )}\n        <Form.Item label=\"Заборгованність\" name=\"amount_debt\">\n          <InputNumber style={{ width: '100%' }} readOnly />\n        </Form.Item>\n\n        <Form.Item label=\"Примітки\" name=\"comment\">\n          <Input.TextArea\n            placeholder=\"Інформація за потреби\"\n            autoSize={{\n              minRows: 1,\n              maxRows: 5,\n            }}\n          />\n        </Form.Item>\n        <ButtonContainer>\n          <Button\n            style={{ width: '100%' }}\n            type=\"primary\"\n            onClick={() => onCencelSalarySelected()}\n            htmlType=\"button\"\n          >\n            Відмінити\n          </Button>\n          <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\">\n            Зберегти зміни\n          </Button>\n        </ButtonContainer>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default SalarisForm;\n","import styled from 'styled-components';\n\nexport const TitleButton = styled.h3`\n  width: 100%;\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  font-size: 18px;\n  text-align: center;\n  margin-bottom: 10px;\n  padding: 7px 0;\n  color: #fff;\n  background-color: var(--blue-tint);\n  border-radius: 5px;\n`;\n","import React from 'react';\nimport { TitleButton } from './ZvitButtonTitle.styled';\n\nconst ZvitButtonTitle = ({ title, zvitName }) => {\n  return (\n    <TitleButton>\n      {zvitName} {title}\n    </TitleButton>\n  );\n};\n\nexport default ZvitButtonTitle;\n","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useState } from 'react';\nimport { DatePicker, Divider } from 'antd';\nimport { FaRegCalendarPlus } from 'react-icons/fa';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/uk'; // Імпортуємо українську локаль\nimport locale from 'antd/es/date-picker/locale/uk_UA';\n\nimport { BsClipboardPulse, BsEmojiHeartEyes } from 'react-icons/bs';\n\nimport {\n  CommandLineButton,\n  CommandLineWrapper,\n  SectionsContainer,\n} from './FinancialButtonContainer.styled';\n\nimport ExpenseContainer from 'components/Expense/ExpenseContainer';\nimport {\n  createZvitSelectedPeriod,\n  getZvitChildrensPeriod,\n} from 'redux/zvit/zvitOperetion';\nimport { CirclesWithBar } from 'react-loader-spinner';\nimport { funFormattedDate } from 'assets/constants/transformation';\nimport { formatDateTitle } from 'assets/constants/reusableFunctions';\nimport { getSalarisByDate } from 'redux/salary/salaryOperetion';\nimport SalarisForm from 'components/SalarisForm/SalarisForm';\nimport { selectSalaryLoading } from 'redux/salary/salarySelector';\nimport { getExpensesByDate } from 'redux/expense/expenseOperetion';\nimport { selectExpenseLoading } from 'redux/expense/expenceSelector';\nimport ZvitButtonTitle from 'ui/ZvitButtonTitle/ZvitButtonTitle';\nconst { RangePicker } = DatePicker;\n\nconst FinancialButtonContainer = ({\n  dayOrePariod,\n  setDayOrePariod,\n  setDateFromTitle,\n  zvitIsLoading,\n  selectedPeriod,\n  setSelectedPeriod,\n  selectedDateString,\n  setSelectedDateString,\n  setTypeZvit,\n  childrensLoading,\n}) => {\n  const dispatch = useDispatch();\n  const today = dayjs();\n\n  const salariesLoading = useSelector(selectSalaryLoading);\n  const loading = useSelector(selectExpenseLoading);\n\n  const [dateFromExpense, setDateFromExpense] = useState(\n    new Date().toISOString().split('T')[0]\n  );\n\n  const [open, setOpen] = useState(false);\n  const onCloseDrawerExpense = () => {\n    setOpen(false);\n  };\n\n  function selectDay(dates, dateStrings) {\n    if (!dates || dates.length === 0) return;\n    setDateFromExpense(dateStrings[0]);\n    setSelectedDateString(dateStrings);\n\n    const { formattedDates, isOneDay } = funFormattedDate(dates);\n\n    setSelectedPeriod(formattedDates);\n\n    setDayOrePariod(isOneDay ? 'oneDay' : 'period');\n  }\n\n  const createZvitForPeriod = async period => {\n    if (!period) return;\n    setTypeZvit('report_period');\n    await dispatch(createZvitSelectedPeriod(period)).then(() =>\n      setDateFromTitle(formatDateTitle(dayOrePariod, selectedDateString))\n    );\n  };\n  const getExpensesBySelectedPeriod = async period => {\n    if (!period) return;\n    setTypeZvit('report_expenses');\n\n    await dispatch(getExpensesByDate(period)).then(() =>\n      setDateFromTitle(formatDateTitle(dayOrePariod, selectedDateString))\n    );\n  };\n  const createSalaryZvitForPeriod = async period => {\n    if (!period) return;\n    setTypeZvit('report_salaries');\n\n    await dispatch(getSalarisByDate(period)).then(() =>\n      setDateFromTitle(formatDateTitle(dayOrePariod, selectedDateString))\n    );\n  };\n  const createChildrensZvitForPeriod = async period => {\n    if (!period) return;\n    setTypeZvit('report_childrens');\n\n    await dispatch(getZvitChildrensPeriod(period)).then(() =>\n      setDateFromTitle(formatDateTitle(dayOrePariod, selectedDateString))\n    );\n  };\n\n  return (\n    <>\n      <CommandLineWrapper>\n        <SectionsContainer>\n          <RangePicker\n            defaultValue={[today, today]}\n            onChange={selectDay}\n            locale={locale}\n            style={{ marginBottom: 20, borderColor: '#fce010' }}\n          />\n          <ZvitButtonTitle title=\"Фінансові показники:\" />\n          <CommandLineButton\n            onClick={() => createZvitForPeriod(selectedPeriod)}\n          >\n            <>\n              {zvitIsLoading ? (\n                <CirclesWithBar\n                  height=\"21\"\n                  width=\"50\"\n                  color=\"#ffffff\"\n                  wrapperStyle={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                  visible={true}\n                  ariaLabel=\"circles-with-bar-loading\"\n                />\n              ) : (\n                <>\n                  Обіг коштів за період <BsClipboardPulse />\n                </>\n              )}\n            </>\n          </CommandLineButton>\n          <CommandLineButton\n            onClick={() => getExpensesBySelectedPeriod(selectedPeriod)}\n          >\n            {loading ? (\n              <CirclesWithBar\n                height=\"21\"\n                width=\"50\"\n                color=\"#ffffff\"\n                wrapperStyle={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                visible={true}\n                ariaLabel=\"circles-with-bar-loading\"\n              />\n            ) : (\n              <>\n                Розходи за період <BsClipboardPulse />\n              </>\n            )}\n          </CommandLineButton>\n        </SectionsContainer>\n        <Divider\n          style={{ borderWidth: 1, borderColor: '#fce010' }}\n          variant=\"solid\"\n        />\n        <SectionsContainer>\n          <ZvitButtonTitle title=\"Зарплата фахівців:\" />\n          <CommandLineButton\n            onClick={() => createSalaryZvitForPeriod(selectedPeriod)}\n          >\n            {salariesLoading ? (\n              <CirclesWithBar\n                height=\"21\"\n                width=\"50\"\n                color=\"#ffffff\"\n                wrapperStyle={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                visible={true}\n                ariaLabel=\"circles-with-bar-loading\"\n              />\n            ) : (\n              <>\n                За вибраний період <BsEmojiHeartEyes />\n              </>\n            )}\n          </CommandLineButton>\n        </SectionsContainer>\n        <Divider\n          style={{ borderWidth: 1, borderColor: '#fce010' }}\n          variant=\"solid\"\n        />\n        <SectionsContainer>\n          <ZvitButtonTitle title=\"Звіт по дітям:\" />\n          <CommandLineButton\n            onClick={() => createChildrensZvitForPeriod(selectedPeriod)}\n          >\n            {childrensLoading ? (\n              <CirclesWithBar\n                height=\"21\"\n                width=\"50\"\n                color=\"#ffffff\"\n                wrapperStyle={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                visible={true}\n                ariaLabel=\"circles-with-bar-loading\"\n              />\n            ) : (\n              <>\n                За вибраний період <BsEmojiHeartEyes />\n              </>\n            )}\n          </CommandLineButton>\n        </SectionsContainer>\n        <Divider\n          style={{ borderWidth: 1, borderColor: '#fce010' }}\n          variant=\"solid\"\n        />\n        <SectionsContainer>\n          <ZvitButtonTitle title=\"Внесення розходів\" />\n          <CommandLineButton\n            onClick={() => setOpen(true)}\n            disabled={dayOrePariod === 'period'}\n          >\n            <>\n              Виберіть день <FaRegCalendarPlus />\n            </>\n          </CommandLineButton>\n          <ExpenseContainer\n            onCloseDrawerExpense={onCloseDrawerExpense}\n            open={open}\n            setOpen={setOpen}\n            selectedPeriod={dateFromExpense}\n          />\n          <SalarisForm selectedPeriod={dateFromExpense} />\n        </SectionsContainer>\n      </CommandLineWrapper>\n    </>\n  );\n};\n\nexport default FinancialButtonContainer;\n","import styled from 'styled-components';\nimport { Table } from 'antd';\n\nexport const StyledTable = styled(Table)`\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n\n  .ant-table {\n    font-size: 14px;\n  }\n\n  .ant-table-thead > tr > th {\n    background-color: #f0f2f5 !important; /* Колір фону заголовків */\n    font-weight: bold;\n    text-align: center;\n  }\n\n  .ant-table-tbody > tr:nth-child(even) {\n    background-color: #e6f7ff; /* Світло-сірий бекграунд через строчку */\n  }\n\n  .ant-table-tbody > tr > td {\n    text-align: center;\n  }\n\n  .ant-table-tbody > tr:hover {\n    background-color: #e6f7ff; /* Колір при наведенні */\n  }\n\n  .ant-table-row[data-row-key='balance'],\n  .ant-table-row[data-row-key='total'] {\n    font-size: 16px;\n    font-weight: 400;\n    background-color: #e6f7ff !important; /* Колір фону */\n    color: #1890ff; /* Колір тексту */\n    border-left: 10px;\n  }\n  .ant-btn-icon .anticon.anticon-delete > svg {\n    transition: all 0.05s cubic-bezier(0.645, 0.045, 0.355, 1);\n  }\n  .ant-btn-icon .anticon.anticon-delete > svg:hover {\n    fill: red;\n  }\n`;\nexport const StyledCellNegative = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n  color: var(--main-red);\n`;\nexport const StyledCellPositive = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n  color: var(--main-green);\n`;\nexport const StyledCell = styled.span`\n  color: inherit;\n`;\n","import React from 'react';\nimport {\n  StyledCell,\n  StyledCellNegative,\n  StyledTable,\n} from './PeriodReport.styled';\n\nconst ReportCurrentMonth = ({ indicatorsCurrentMonth, loading }) => {\n  const {\n    profit = {},\n    expense = {},\n    income = {},\n    workedIncom = 0,\n    previousPeriodProfit = {},\n  } = indicatorsCurrentMonth;\n\n  const columns = [\n    {\n      key: '1',\n      title: 'Категорія',\n      dataIndex: 'category',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '2',\n      title: 'На початок періоду',\n      dataIndex: 'profitPrev',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '3',\n      title: 'Оплачені кошти',\n      dataIndex: 'currentIncome',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n\n    {\n      key: '4',\n      title: 'Відпрацьовано',\n      dataIndex: 'workedLessons',\n      onCell: (_, index) => {\n        if (index === 0) {\n          return { rowSpan: dataSource.length - 1 };\n        }\n        if (index === dataSource.length - 1) {\n          return { rowSpan: 1 };\n        }\n        return { rowSpan: 0 };\n      },\n    },\n    {\n      key: '5',\n      title: 'Поточні витрати',\n      dataIndex: 'currentExpense',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n\n    {\n      key: '6',\n      title: 'На кінець періоду ',\n      dataIndex: 'profit',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n  ];\n\n  const dataSource = [\n    {\n      key: 'cash',\n      category: 'Готівка',\n      profitPrev: previousPeriodProfit?.cash || 0,\n      profit: profit?.kasa || 0,\n      currentExpense: expense?.cash || 0,\n      currentIncome: income?.cash || 0,\n      workedLessons: workedIncom,\n    },\n    {\n      key: 'privat',\n      category: 'ПриватБанк',\n      profitPrev: previousPeriodProfit?.privatBank || 0,\n      profit: profit?.privatBank || 0,\n      currentExpense: expense?.privatBank || 0,\n      currentIncome: income?.privatBank || 0,\n      workedLessons: '',\n    },\n    {\n      key: 'mono',\n      category: 'МоноБанк',\n      profitPrev: previousPeriodProfit?.monoBank || 0,\n      profit: profit?.monoBank || 0,\n      currentExpense: expense?.monoBank || 0,\n      currentIncome: income?.monoBank || 0,\n      workedLessons: '',\n    },\n    {\n      key: 'balance',\n      category: 'Ітого:',\n      profitPrev: previousPeriodProfit?.amount || 0,\n      profit: profit?.amount || 0,\n      currentExpense: expense?.amount || 0,\n      currentIncome: income?.amount || 0,\n      workedLessons: workedIncom,\n    },\n  ];\n\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={loading}\n    />\n  );\n};\n\nexport default ReportCurrentMonth;\n","export const selectZvitSelectedPeriod = state => state.zvit.zvitSelectedPeriod;\nexport const selectZvitChildrens = state => state.zvit.childrensSelected;\nexport const selectZvitChild = state => state.zvit.selectedChildData;\n\nexport const selectZvitLoadinge = state => state.zvit.isloading;\nexport const selectZvitLoadingeChildrens = state =>\n  state.zvit.isloadingChildrens;\nexport const selectZvitLoadingeChild = state => state.zvit.isloadingChild;\n\nexport const selectZvitStatus = state => state.zvit.zvitStatus;\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  width: 100%;\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  font-size: 18px;\n  text-align: center;\n  margin-bottom: 10px;\n  padding: 7px 0;\n  color: #fff;\n  background-color: var(--blue-tint);\n  border-top-left-radius: 15px;\n  border-top-right-radius: 15px;\n`;\n","import React from 'react';\nimport { Title } from './ZvitReportTitle.styled';\n\nconst ZvitReportTitle = ({ title, zvitName }) => {\n  return (\n    <Title>\n      {zvitName} {title}\n    </Title>\n  );\n};\n\nexport default ZvitReportTitle;\n","import { StyledTable } from 'components/FinancialOffice/PeriodReport/PeriodReport.styled';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Popconfirm, Space } from 'antd';\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  QuestionCircleOutlined,\n} from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteExpenseById,\n  getExpenseById,\n} from 'redux/expense/expenseOperetion';\n\nconst TableExpensesZvit = ({ expensZvitLoading, expenses }) => {\n  const dispatch = useDispatch();\n\n  const [expensesData, setExpensesData] = useState(expenses);\n  const [filters, setFilters] = useState({});\n\n  useEffect(() => {\n    const filteredData = applyFilters(expenses, filters);\n    setExpensesData(filteredData);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expenses, filters]);\n\n  const uniqueDates = [\n    ...new Set(\n      expenses.map(expense =>\n        new Date(expense.date).toLocaleDateString('uk-UA')\n      )\n    ),\n  ];\n\n  const applyFilters = (data, filters) => {\n    let filteredData = data;\n\n    const dateFilterKey = columns.find(col => col.dataIndex === 'date')?.key;\n    const categoryFilterKey = columns.find(\n      col => col.dataIndex === 'category'\n    )?.key;\n\n    if (filters[dateFilterKey] && filters[dateFilterKey].length) {\n      filteredData = filteredData.filter(expense =>\n        filters[dateFilterKey].includes(\n          new Date(expense.date).toLocaleDateString('uk-UA')\n        )\n      );\n    }\n\n    if (filters[categoryFilterKey] && filters[categoryFilterKey].length) {\n      filteredData = filteredData.filter(expense =>\n        filters[categoryFilterKey].includes(expense.category)\n      );\n    }\n\n    return filteredData;\n  };\n\n  const handleTableChange = (_, filters) => {\n    setFilters(filters);\n  };\n\n  const columns = [\n    {\n      key: '1',\n      title: 'Дата',\n      dataIndex: 'date',\n      filters: uniqueDates.map(date => ({ text: date, value: date })),\n      onFilter: (value, record) =>\n        record.key === 'total' || record.date === value,\n    },\n    {\n      key: '2',\n      title: 'Категорія',\n      dataIndex: 'category',\n      filters: [...new Set(expenses.map(expense => expense.category))].map(\n        category => ({ text: category, value: category })\n      ),\n      onFilter: (value, record) =>\n        record.key === 'total' || record.category === value,\n    },\n    {\n      key: '3',\n      title: 'Готівка',\n      dataIndex: 'amount_cash',\n    },\n    {\n      key: '4',\n      title: 'Приватбанк',\n      dataIndex: 'amount_privat',\n    },\n    {\n      key: '5',\n      title: 'Монобанк',\n      dataIndex: 'amount_mono',\n    },\n    {\n      key: '6',\n      title: 'Додаткова інформація',\n      dataIndex: 'description',\n    },\n    {\n      key: '7',\n      title: 'Дії',\n      dataIndex: 'actions',\n      render: (_, record) =>\n        record.key !== 'total' && (\n          <Space>\n            <Button\n              type=\"primary\"\n              icon={<EditOutlined />}\n              onClick={async () =>\n                await dispatch(getExpenseById(record.key)).then()\n              }\n            />\n            <Popconfirm\n              title=\"Видалення\"\n              description=\"Ви намагаєтесь видалити цю строчку. Продовжити?\"\n              icon={\n                <QuestionCircleOutlined\n                  style={{\n                    color: 'red',\n                  }}\n                />\n              }\n              onConfirm={() => {\n                dispatch(deleteExpenseById(record.key));\n              }}\n            >\n              <Button type=\"danger\" icon={<DeleteOutlined />} />\n            </Popconfirm>\n          </Space>\n        ),\n    },\n  ];\n\n  const dataSource = expensesData.map(expense => ({\n    key: expense._id,\n    date: new Date(expense.date).toLocaleDateString('uk-UA'),\n    category: expense.category,\n    amount_cash: expense.paymentForm === 'cash' ? expense.amount : '',\n    amount_privat:\n      expense.paymentForm === 'cashless' && expense.bank === 'PrivatBank'\n        ? expense.amount\n        : '',\n    amount_mono:\n      expense.paymentForm === 'cashless' && expense.bank === 'MonoBank'\n        ? expense.amount\n        : '',\n    description: expense.description,\n  }));\n\n  const totalCash = expensesData.reduce(\n    (sum, item) => sum + (item.paymentForm === 'cash' ? item.amount : 0),\n    0\n  );\n  const totalPrivat = expensesData.reduce(\n    (sum, item) =>\n      sum +\n      (item.paymentForm === 'cashless' && item.bank === 'PrivatBank'\n        ? item.amount\n        : 0),\n    0\n  );\n  const totalMono = expensesData.reduce(\n    (sum, item) =>\n      sum +\n      (item.paymentForm === 'cashless' && item.bank === 'MonoBank'\n        ? item.amount\n        : 0),\n    0\n  );\n\n  dataSource.push({\n    key: 'total',\n    date: 'Ітогом за період:',\n    category: '',\n    amount_cash: totalCash,\n    amount_privat: totalPrivat,\n    amount_mono: totalMono,\n    description: '',\n  });\n\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={expensZvitLoading}\n      onChange={handleTableChange}\n    />\n  );\n};\n\nexport default TableExpensesZvit;\n","import {\n  DeleteOutlined,\n  EditOutlined,\n  QuestionCircleOutlined,\n} from '@ant-design/icons';\nimport { Button, Popconfirm, Space } from 'antd';\nimport {\n  StyledCell,\n  StyledCellNegative,\n  StyledTable,\n} from 'components/FinancialOffice/PeriodReport/PeriodReport.styled';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteSalaryById, getSalaryById } from 'redux/salary/salaryOperetion';\n\nconst SalaryZvitTable = ({ salaryLoading, salaris }) => {\n  const dispatch = useDispatch();\n\n  const [filters, setFilters] = useState({});\n  const [salariesData, setSalariesData] = useState(salaris);\n\n  const uniqueDates = [\n    ...new Set(\n      salaris.map(salary => new Date(salary.date).toLocaleDateString('uk-UA'))\n    ),\n  ];\n  useEffect(() => {\n    setSalariesData(applyFilters(salaris, filters));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, salaris]);\n\n  const applyFilters = (data, filters) => {\n    let filteredData = data;\n    const dateFilterKey = columns.find(col => col.dataIndex === 'date')?.key;\n    const specialistFilterKey = columns.find(\n      col => col.dataIndex === 'specialist'\n    )?.key;\n\n    if (filters[dateFilterKey] && filters[dateFilterKey].length) {\n      filteredData = filteredData.filter(salary => {\n        return filters[dateFilterKey].includes(\n          new Date(salary.date).toLocaleDateString('uk-UA')\n        );\n      });\n    }\n    if (filters[specialistFilterKey] && filters[specialistFilterKey].length) {\n      filteredData = filteredData.filter(salary =>\n        filters[specialistFilterKey].includes(\n          `${salary.name} ${salary.surname}`\n        )\n      );\n    }\n\n    return filteredData;\n  };\n  const handleTableChange = (_, filters) => {\n    setFilters(filters);\n  };\n  const columns = [\n    {\n      key: '1',\n      title: 'Дата',\n      dataIndex: 'date',\n      filters: uniqueDates.map(date => ({ text: date, value: date })),\n      onFilter: (value, record) =>\n        record.key === 'total' || record.date === value,\n    },\n    {\n      key: '2',\n      title: 'Нараховано',\n      dataIndex: 'salaryStatus',\n    },\n    {\n      key: '3',\n      title: 'Фахівець',\n      dataIndex: 'specialist',\n      filters: [\n        ...new Set(salaris.map(salary => `${salary.name} ${salary.surname}`)),\n      ].map(fullName => ({ text: fullName, value: fullName })),\n      onFilter: (value, record) => {\n        if (record.key === 'total') return true;\n        const transformValue = value.replace(/([а-яa-z])([А-ЯA-Z])/g, '$1 $2');\n        return record.specialist === transformValue;\n      },\n    },\n    {\n      key: 'group',\n      title: 'Виплачено',\n      children: [\n        {\n          key: '4',\n          title: 'Готівка',\n          dataIndex: 'amount_cash',\n        },\n        {\n          key: '5',\n          title: 'Приватбанк',\n          dataIndex: 'amount_privat',\n        },\n        {\n          key: '6',\n          title: 'Монобанк',\n          dataIndex: 'amount_mono',\n        },\n      ],\n    },\n    {\n      key: '7',\n      title: 'Заборгованість',\n      dataIndex: 'amount_debt',\n      render: (value, record) => {\n        if (value < 0 && record.key !== 'total') {\n          return <StyledCellNegative>{value} (переплата) </StyledCellNegative>;\n        }\n\n        if (record.key === 'total') {\n          return <StyledCell>{value}</StyledCell>;\n        } else {\n          return <StyledCellNegative>{value}</StyledCellNegative>;\n        }\n      },\n    },\n    {\n      key: '8',\n      title: 'Додаткова інформація',\n      dataIndex: 'description',\n    },\n\n    {\n      key: '9',\n      title: 'Дії',\n      dataIndex: 'actions',\n      render: (_, record) =>\n        record.key !== 'total' && (\n          <Space>\n            <Popconfirm\n              title=\"Виплата зарплати\"\n              description=\"Нарахувати виплату?\"\n              icon={\n                <QuestionCircleOutlined\n                  style={{\n                    color: 'red',\n                  }}\n                />\n              }\n              onConfirm={async () => await dispatch(getSalaryById(record.key))}\n            >\n              <Button type=\"primary\" icon={<EditOutlined />} />\n            </Popconfirm>\n\n            <Popconfirm\n              title=\"Видалення\"\n              description=\"Ви намагаєтесь видалити цю строчку. Продовжити?\"\n              icon={\n                <QuestionCircleOutlined\n                  style={{\n                    color: 'red',\n                  }}\n                />\n              }\n              onConfirm={() => {\n                dispatch(deleteSalaryById(record.key));\n              }}\n            >\n              <Button type=\"danger\" icon={<DeleteOutlined />} />\n            </Popconfirm>\n          </Space>\n        ),\n    },\n  ];\n  const dataSource = salariesData.map(salary => {\n    const {\n      _id,\n      date,\n      amount_accrued,\n      amount_cash,\n      amount_cashless,\n      amount_debt,\n      name,\n      surname,\n      bank,\n      comment,\n    } = salary;\n\n    return {\n      key: _id,\n      date: new Date(date).toLocaleDateString('uk-UA'),\n      salaryStatus: amount_accrued ? amount_accrued : '',\n      specialist: `${name} ${surname}`,\n      amount_cash: amount_cash ? amount_cash : '',\n      amount_privat:\n        amount_cashless && bank === 'PrivatBank' ? amount_cashless : '',\n      amount_mono:\n        amount_cashless && bank === 'MonoBank' ? amount_cashless : '',\n      amount_debt: amount_debt ? amount_debt : '',\n      description: comment,\n    };\n  });\n\n  const total = salariesData.reduce(\n    (sum, item) => sum + (item.amount_accrued ? item.amount_accrued : 0),\n    0\n  );\n  const totalDebt = salariesData.reduce(\n    (sum, item) => sum + (item.amount_debt ? item.amount_debt : 0),\n    0\n  );\n  const totalCash = salariesData.reduce(\n    (sum, item) => sum + (item.amount_cash ? item.amount_cash : 0),\n    0\n  );\n  const totalPrivat = salariesData.reduce(\n    (sum, item) =>\n      sum +\n      (item.amount_cashless && item.bank === 'PrivatBank'\n        ? item.amount_cashless\n        : 0),\n    0\n  );\n  const totalMono = salariesData.reduce(\n    (sum, item) =>\n      sum +\n      (item.amount_cashless && item.bank === 'MonoBank'\n        ? item.amount_cashless\n        : 0),\n    0\n  );\n\n  dataSource.push({\n    key: 'total',\n    date: 'Ітогом за період:',\n    salaryStatus: total,\n    amount_cash: totalCash,\n    amount_privat: totalPrivat,\n    amount_mono: totalMono,\n    amount_debt: totalDebt,\n    description: '',\n  });\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={salaryLoading}\n      onChange={handleTableChange}\n    />\n  );\n};\n\nexport default SalaryZvitTable;\n","import { Button } from 'antd';\nimport {\n  StyledCell,\n  StyledCellNegative,\n  StyledCellPositive,\n  StyledTable,\n} from 'components/FinancialOffice/PeriodReport/PeriodReport.styled';\nimport React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useDispatch } from 'react-redux';\nimport { getZvitChildByIdAndPeriod } from 'redux/zvit/zvitOperetion';\n\nconst ChildrensPeriodZvit = ({\n  childrens,\n  childrensLoading,\n  selectedPeriod,\n  setOpenDrawer,\n  childrenLoading,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleChildClick = async id => {\n    const choesData = { id, selectedPeriod };\n    await dispatch(getZvitChildByIdAndPeriod(choesData)).then(() =>\n      setOpenDrawer(true)\n    );\n  };\n  const columns = [\n    {\n      key: '1',\n      title: \"Ім'я дитини\",\n      dataIndex: 'childName',\n      render: (text, record) => {\n        return childrenLoading === record.key ? (\n          <ThreeDots\n            visible={true}\n            height=\"32\"\n            width=\"148\"\n            color=\"#4fa94d\"\n            radius=\"9\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            wrapperClass=\"\"\n          />\n        ) : (\n          <Button\n            type=\"link\"\n            htmlType=\"button\"\n            onClick={() => handleChildClick(record.key)}\n          >\n            {text}\n          </Button>\n        );\n      },\n    },\n\n    {\n      key: '4',\n      title: 'Баланс на початок',\n      dataIndex: ['start', 'balance'],\n      render: (value, record) => {\n        if (value < 0) {\n          return <StyledCellNegative>{value}</StyledCellNegative>;\n        } else if (value > 0) {\n          return <StyledCellPositive>{value}</StyledCellPositive>;\n        } else {\n          return <StyledCell>{value}</StyledCell>;\n        }\n      },\n    },\n    {\n      key: 'group2',\n      title: 'За період',\n      children: [\n        {\n          key: '5',\n          title: 'Відпрацьовано',\n          dataIndex: ['period', 'price'],\n        },\n        {\n          key: '6',\n          title: 'Оплачено',\n          dataIndex: ['period', 'sum'],\n        },\n        {\n          key: '7',\n          title: 'Баланс',\n          dataIndex: ['period', 'balance'],\n        },\n      ],\n    },\n    {\n      key: '8',\n      title: 'Кінцевий баланс',\n      dataIndex: ['end', 'balance'],\n      render: (value, record) => {\n        if (value < 0) {\n          return <StyledCellNegative>{value}</StyledCellNegative>;\n        } else if (value > 0) {\n          return <StyledCellPositive>{value}</StyledCellPositive>;\n        } else {\n          return <StyledCell>{value}</StyledCell>;\n        }\n      },\n    },\n  ];\n\n  const dataSource = childrens?.map(children => ({\n    key: children.child,\n    childName: `${children.childName}${\n      children.childSurname ? ` ${children.childSurname}` : ''\n    }`,\n    start: {\n      balance: children.start.balance,\n    },\n    period: {\n      price: children.period.price,\n      sum: children.period.sum,\n      balance: children.period.balance,\n    },\n    end: {\n      balance: children.end.balance,\n    },\n  }));\n\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={childrensLoading}\n      // onChange={handleTableChange}\n    />\n  );\n};\n\nexport default ChildrensPeriodZvit;\n","import styled from 'styled-components';\n\nexport const TitleChildZvit = styled.p`\n  width: 100%;\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 26px;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  color: var(--main-green);\n`;\nexport const DescrBalance = styled.span`\n  margin-left: 100px;\n  font-size: 18px;\n  color: var(--main-green);\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n`;\n","import { Alert, Button, Drawer, Form, InputNumber, Radio, Select } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateLesson } from 'redux/Lesson/lessonOperetion';\nimport {\n  getZvitChildByIdAndPeriod,\n  getZvitChildrensPeriod,\n} from 'redux/zvit/zvitOperetion';\n\nconst PaymentChuldLesson = ({\n  selectedChildData,\n  selectedPeriod,\n  selectedLessonData,\n  openPaymentDrawer,\n  setOpenPaymentDrawer,\n}) => {\n  const [paymentMethod, setPaymentMethod] = useState(null);\n  const { id, price, sum } = selectedLessonData;\n  const dutyToLesson = sum && sum !== 0 && sum < price ? price - sum : price;\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const sumForm = Form.useWatch('sum', form);\n  const [advancePayment, setAdvancePayment] = useState(false);\n\n  useEffect(() => {\n    setAdvancePayment(sum + sumForm > price);\n  }, [price, sumForm, sum]);\n\n  return (\n    <>\n      <Drawer\n        open={openPaymentDrawer}\n        title=\"Внесення оплати за заняття\"\n        placement=\"right\"\n        width={340}\n      >\n        <p style={{ marginTop: 20, marginBottom: 20 }}>\n          Заборгованість: {dutyToLesson}\n        </p>\n        <Form\n          form={form}\n          initialValues={{ sum: 0, paymentForm: 'cash' }}\n          onFinish={async values => {\n            if (values.paymentForm === 'cash') {\n              values.bank = '';\n            }\n            const combinedData = { id, values };\n            try {\n              await dispatch(updateLesson(combinedData)).then(async () => {\n                const choesData = {\n                  id: selectedChildData.child,\n                  selectedPeriod,\n                };\n                await dispatch(getZvitChildByIdAndPeriod(choesData));\n                await dispatch(getZvitChildrensPeriod(selectedPeriod));\n              });\n            } catch (error) {\n              console.error('Помилка при оновленні уроку або звіту:', error);\n            } finally {\n              setOpenPaymentDrawer(false);\n              form.resetFields();\n            }\n          }}\n        >\n          <Form.Item\n            label=\"Форма оплати\"\n            name=\"paymentForm\"\n            onChange={e => {\n              if (e.target.value === 'cash' || e.target.value === 'noPayment') {\n                form.setFieldsValue({ bank: '' });\n              }\n            }}\n          >\n            <Radio.Group\n              onChange={e => {\n                setPaymentMethod(e.target.value);\n                if (e.target.value !== 'cashless') {\n                  form.setFieldsValue({ bank: undefined });\n                  form.resetFields(['bank']);\n                }\n              }}\n            >\n              <Radio value=\"cash\">Готівка</Radio>\n              <Radio value=\"cashless\">Безготівкова</Radio>\n              <Radio value=\"noPayment\">Не сплачено</Radio>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item\n            rules={\n              paymentMethod === 'cashless'\n                ? [{ required: true, message: 'Оберіть банк' }]\n                : []\n            }\n            label=\"Виберіть банк\"\n            name=\"bank\"\n            style={{ width: 250 }}\n          >\n            <Select>\n              <Select.Option value=\"PrivatBank\">ПриватБанк</Select.Option>\n              <Select.Option value=\"MonoBank\">Монобанк</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            rules={[{ required: true, message: 'Внесіть суму оплати' }]}\n            label=\"Сума\"\n            name=\"sum\"\n          >\n            <InputNumber />\n          </Form.Item>\n          {advancePayment && (\n            <Alert\n              message=\"Сума перевищує вартість уроку!\"\n              type=\"error\"\n              showIcon\n              style={{ marginBottom: 16 }}\n            />\n          )}\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              flexDirection: 'column',\n              gap: 8,\n            }}\n          >\n            <Button\n              style={{ width: '100%' }}\n              type=\"primary\"\n              onClick={() => setOpenPaymentDrawer(false)}\n              htmlType=\"button\"\n            >\n              Вийти\n            </Button>\n            <Button\n              disabled={advancePayment}\n              style={{ width: '100%' }}\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              Зберегти зміни\n            </Button>\n          </div>\n        </Form>\n      </Drawer>\n    </>\n  );\n};\n\nexport default PaymentChuldLesson;\n","import { Button, Drawer, Popconfirm } from 'antd';\nimport {\n  StyledCell,\n  StyledCellNegative,\n  StyledCellPositive,\n  StyledTable,\n} from 'components/FinancialOffice/PeriodReport/PeriodReport.styled';\n\nimport { DescrBalance, TitleChildZvit } from './ChildPeriodZvit.styled';\nimport { ZvitContainer } from 'components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.styled';\nimport { EditOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport PaymentChuldLesson from './PaymentChuldLesson/PaymentChuldLesson';\nimport { useEffect, useState } from 'react';\n\nconst ChildPeriodZvit = ({\n  selectedPeriod,\n  childSelectedData,\n  openDrawer,\n  setOpenDrawer,\n  childrenLoading,\n}) => {\n  const [openPaymentDrawer, setOpenPaymentDrawer] = useState(false);\n  const [selectedLessonData, setSelectedLessonData] = useState('');\n  const [selectedChildData, setSelectedChildData] = useState(null);\n\n  const totalPrice = selectedChildData?.details.reduce(\n    (acm, item) => acm + (item.price ? item.price : 0),\n    0\n  );\n  const totalSum = selectedChildData?.details.reduce(\n    (acm, item) => acm + (item.sum ? item.sum : 0),\n    0\n  );\n  const totalBalance =\n    selectedChildData?.totalPreviousBalance + (totalSum - totalPrice);\n  const titleTotalBalance = balance => {\n    if (balance > 0) {\n      return <StyledCellPositive>{balance} грн</StyledCellPositive>;\n    }\n    if (balance === 0) {\n      return <StyledCell>{balance}</StyledCell>;\n    } else {\n      return <StyledCellNegative>{balance} грн</StyledCellNegative>;\n    }\n  };\n  useEffect(() => {\n    if (childSelectedData) {\n      setSelectedChildData(childSelectedData);\n    }\n  }, [childSelectedData]);\n\n  const handlePaymentLesson = (id, price, sum) => {\n    const lessonFinanseData = { id, price, sum };\n    setOpenPaymentDrawer(true);\n    setSelectedLessonData(lessonFinanseData);\n  };\n  const columns = [\n    {\n      key: '1',\n      title: 'Дата',\n      dataIndex: 'date',\n    },\n    {\n      key: '2',\n      title: 'Вхідний баланс',\n      dataIndex: 'previousBalance',\n    },\n    {\n      key: '3',\n      title: 'Кабінет',\n      dataIndex: 'office',\n    },\n    {\n      key: '4',\n      title: 'Відпрацьовано',\n      dataIndex: 'price',\n    },\n    {\n      key: '5',\n      title: 'Сплачено',\n      dataIndex: 'sum',\n    },\n    {\n      key: '6',\n      title: 'Кінцевий баланс',\n      dataIndex: 'balance',\n      render: (value, record) => {\n        if (value < 0) {\n          return <StyledCellNegative>{value}</StyledCellNegative>;\n        } else if (value > 0) {\n          return <StyledCellPositive>{value}</StyledCellPositive>;\n        } else {\n          return <StyledCell>{value}</StyledCell>;\n        }\n      },\n    },\n    {\n      key: '6',\n      title: 'Дії',\n      dataIndex: 'actions',\n      render: (_, record) => {\n        if (\n          record.key !== 'total' &&\n          record.price !== 0 &&\n          (record.sum === 0 || record.sum < record.price)\n        ) {\n          return (\n            <Popconfirm\n              title=\"Оплата заняття\"\n              description=\"Внести оплату?\"\n              icon={\n                <QuestionCircleOutlined\n                  style={{\n                    color: 'red',\n                  }}\n                />\n              }\n              onConfirm={() =>\n                handlePaymentLesson(record.key, record.price, record.sum)\n              }\n            >\n              <Button type=\"primary\" icon={<EditOutlined />} />\n            </Popconfirm>\n          );\n        }\n        return null;\n      },\n    },\n  ];\n\n  const dataSource = selectedChildData?.details.map(lesson => {\n    const { balance, dateLesson, office, price, sum, lessonId } = lesson;\n    return {\n      key: lessonId,\n      date: new Date(dateLesson).toLocaleDateString('uk-UA'),\n      previousBalance: '',\n      office,\n      price,\n      sum,\n      balance,\n    };\n  });\n  dataSource?.push({\n    key: 'total',\n    date: 'Ітог:',\n    previousBalance: selectedChildData.totalPreviousBalance\n      ? selectedChildData.totalPreviousBalance\n      : 0,\n    office: '',\n    price: totalPrice,\n    sum: totalSum,\n    balance: totalBalance,\n  });\n\n  return (\n    <>\n      <Drawer\n        title=\"Історія по дитині за вибраний період\"\n        placement=\"top\"\n        open={openDrawer}\n        styles={{\n          content: {\n            height: '60vh',\n            overflowY: 'auto',\n          },\n        }}\n      >\n        <ZvitContainer>\n          <TitleChildZvit>\n            {selectedChildData?.childName}\n            {selectedChildData?.childSurname\n              ? ` ${selectedChildData?.childSurname}`\n              : ''}\n            <DescrBalance>\n              Загальний баланс: {titleTotalBalance(totalBalance)}\n            </DescrBalance>\n          </TitleChildZvit>\n          <StyledTable\n            columns={columns}\n            dataSource={dataSource}\n            size=\"small\"\n            pagination={false}\n            loading={childrenLoading}\n            // onChange={handleTableChange}\n          />\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Button\n              style={{ width: 200, marginTop: 20 }}\n              type=\"primary\"\n              htmlType=\"button\"\n              onClick={() => setOpenDrawer(false)}\n            >\n              Закрити\n            </Button>\n          </div>\n        </ZvitContainer>\n      </Drawer>\n      <PaymentChuldLesson\n        selectedChildData={selectedChildData}\n        selectedPeriod={selectedPeriod}\n        setOpenPaymentDrawer={setOpenPaymentDrawer}\n        setSelectedLessonData={setSelectedLessonData}\n        openPaymentDrawer={openPaymentDrawer}\n        selectedLessonData={selectedLessonData}\n      />\n    </>\n  );\n};\n\nexport default ChildPeriodZvit;\n","import React, { useEffect, useState } from 'react';\nimport {\n  ContantLineWrapper,\n  WrapperFinancialOffice,\n  ZvitContainer,\n} from './FinancialLayout.styled';\nimport FinancialButtonContainer from '../FinancialButtonContainer/FinancialButtonContainer';\nimport Container from 'components/Container/Container';\nimport { getZvitOneMonthTotal } from 'redux/zvit/api';\nimport ReportCurrentMonth from '../PeriodReport/PeriodReport';\nimport { useSelector } from 'react-redux';\nimport {\n  selectExpenseByDate,\n  selectExpenseLoading,\n} from 'redux/expense/expenceSelector';\nimport {\n  selectZvitChild,\n  selectZvitChildrens,\n  selectZvitLoadinge,\n  selectZvitLoadingeChild,\n  selectZvitLoadingeChildrens,\n  selectZvitSelectedPeriod,\n} from 'redux/zvit/zvitSelector';\nimport ZvitReportTitle from 'ui/ZvitReportTitle/ZvitReportTitle';\nimport TableExpensesZvit from 'components/Zvit/TableExpensesZvit/TableExpensesZvit';\nimport SalaryZvitTable from 'components/Zvit/Salary/SalaryZvitTable/SalaryZvitTable';\nimport {\n  selectSalaryForPeriod,\n  selectSalaryLoading,\n} from 'redux/salary/salarySelector';\nimport ChildrensPeriodZvit from 'components/Zvit/ChildrensPeriodZvit/ChildrensPeriodZvit';\nimport ChildPeriodZvit from 'components/Zvit/ChildPeriodZvit/ChildPeriodZvit';\n\nconst FinancialLayout = () => {\n  const [indicatorsCurrentMonth, setIndicatorsCurrentMonth] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [typeZvit, setTypeZvit] = useState('');\n  const [dateFromTitle, setDateFromTitle] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState(null);\n  const [selectedDateString, setSelectedDateString] = useState(null);\n  const [dayOrePariod, setDayOrePariod] = useState('oneDay');\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  const { totalData } = useSelector(selectZvitSelectedPeriod);\n  const zvitIsLoading = useSelector(selectZvitLoadinge);\n\n  const { expenses } = useSelector(selectExpenseByDate);\n  const expensZvitLoading = useSelector(selectExpenseLoading);\n\n  const salaris = useSelector(selectSalaryForPeriod);\n  const salaryLoading = useSelector(selectSalaryLoading);\n\n  const childSelectedData = useSelector(selectZvitChild);\n\n  const childrens = useSelector(selectZvitChildrens);\n  const childrensLoading = useSelector(selectZvitLoadingeChildrens);\n  const childrenLoading = useSelector(selectZvitLoadingeChild);\n\n  const isLoad = zvitIsLoading || salaryLoading || childrensLoading;\n\n  useEffect(() => {\n    const fetchZvitOneMonthTotal = async () => {\n      const now = new Date();\n\n      const startDate = new Date(now.getFullYear(), now.getMonth(), 1);\n      const endDate = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n      const formattedDates = {\n        startDate: startDate.toISOString(),\n        endDate: endDate.toISOString(),\n      };\n\n      try {\n        setLoading(true);\n        setTypeZvit('');\n\n        const { totalData } = await getZvitOneMonthTotal(formattedDates);\n        setIndicatorsCurrentMonth(totalData);\n      } catch (error) {\n        console.error('❌ Error fetching total profit:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchZvitOneMonthTotal();\n  }, []);\n\n  // Перевірка даних в totalData, що там є значення, не рівні 0\n  function hasNonZeroValue(obj) {\n    if (typeof obj === 'object' && obj !== null) {\n      for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n          if (hasNonZeroValue(obj[key])) {\n            return true;\n          }\n        }\n      }\n    } else if (obj !== 0) {\n      return true;\n    }\n    return false;\n  }\n  const isTotalDate = hasNonZeroValue(totalData);\n\n  return (\n    <Container>\n      <WrapperFinancialOffice>\n        <FinancialButtonContainer\n          setTypeZvit={setTypeZvit}\n          dayOrePariod={dayOrePariod}\n          setDayOrePariod={setDayOrePariod}\n          setDateFromTitle={setDateFromTitle}\n          zvitIsLoading={zvitIsLoading}\n          selectedPeriod={selectedPeriod}\n          setSelectedPeriod={setSelectedPeriod}\n          selectedDateString={selectedDateString}\n          setSelectedDateString={setSelectedDateString}\n          childrensLoading={childrensLoading}\n        />\n        <ContantLineWrapper>\n          <ZvitContainer>\n            <ZvitReportTitle title=\"Поточні цифри місяця\" />\n            <ReportCurrentMonth\n              loading={loading}\n              indicatorsCurrentMonth={indicatorsCurrentMonth}\n            />\n          </ZvitContainer>\n          {typeZvit === 'report_childrens' &&\n          childrens &&\n          childrens.length > 0 ? (\n            <ZvitContainer>\n              <ZvitReportTitle\n                zvitName={`Інформація по дітям`}\n                title={`${dateFromTitle}`}\n              />\n              <ChildrensPeriodZvit\n                childrens={childrens}\n                childrensLoading={childrensLoading}\n                selectedPeriod={selectedPeriod}\n                setOpenDrawer={setOpenDrawer}\n                childrenLoading={childrenLoading}\n              />\n\n              <ChildPeriodZvit\n                selectedPeriod={selectedPeriod}\n                openDrawer={openDrawer}\n                setOpenDrawer={setOpenDrawer}\n                childSelectedData={childSelectedData}\n                childrenLoading={childrenLoading}\n              />\n            </ZvitContainer>\n          ) : typeZvit === '' ||\n            typeZvit === 'report_expenses' ||\n            typeZvit === 'report_salaries' ||\n            typeZvit === 'report_period' ||\n            isLoad ? null : (\n            <>\n              <ZvitReportTitle\n                zvitName={`Інформація по дітям`}\n                title={`${dateFromTitle}`}\n              />\n              <h4>Даних в обраному періоді немає</h4>\n            </>\n          )}\n\n          {typeZvit === 'report_period' && totalData && isTotalDate ? (\n            <ZvitContainer>\n              <ZvitReportTitle\n                zvitName={`Обороти`}\n                title={`${dateFromTitle}`}\n              />\n              <ReportCurrentMonth\n                loading={zvitIsLoading}\n                indicatorsCurrentMonth={totalData}\n              />\n            </ZvitContainer>\n          ) : typeZvit === '' ||\n            typeZvit === 'report_expenses' ||\n            typeZvit === 'report_salaries' ||\n            typeZvit === 'report_childrens' ||\n            isLoad ? null : (\n            <>\n              <ZvitReportTitle\n                zvitName={`Обороти`}\n                title={`${dateFromTitle}`}\n              />\n              <h4>Даних в обраному періоді немає</h4>\n            </>\n          )}\n          {typeZvit === 'report_expenses' &&\n          expenses &&\n          expenses?.length > 0 ? (\n            <ZvitContainer>\n              <ZvitReportTitle\n                zvitName={`Розходи`}\n                title={`${dateFromTitle}`}\n              />\n              <TableExpensesZvit\n                expensZvitLoading={expensZvitLoading}\n                expenses={expenses}\n              />\n            </ZvitContainer>\n          ) : typeZvit === '' ||\n            typeZvit === 'report_period' ||\n            typeZvit === 'report_salaries' ||\n            typeZvit === 'report_childrens' ||\n            isLoad ? null : (\n            <>\n              <ZvitReportTitle\n                zvitName={`Розходи`}\n                title={`${dateFromTitle}`}\n              />\n              <h4>Витрат в обраному періоді немає</h4>\n            </>\n          )}\n          {typeZvit === 'report_salaries' && salaris && salaris?.length > 0 ? (\n            <ZvitContainer>\n              <ZvitReportTitle\n                zvitName={`Зарплата`}\n                title={`${dateFromTitle}`}\n              />\n              <SalaryZvitTable\n                salaris={salaris}\n                salaryLoading={salaryLoading}\n              />\n            </ZvitContainer>\n          ) : typeZvit === '' ||\n            typeZvit === 'report_period' ||\n            typeZvit === 'report_expenses' ||\n            typeZvit === 'report_childrens' ||\n            isLoad ? null : (\n            <>\n              <ZvitReportTitle\n                zvitName={`Зарплата`}\n                title={`${dateFromTitle}`}\n              />\n              <h4>Зарплата в обраному періоді не нарахована</h4>\n            </>\n          )}\n        </ContantLineWrapper>\n      </WrapperFinancialOffice>\n    </Container>\n  );\n};\n\nexport default FinancialLayout;\n","import axios from 'axios';\n\nexport const getZvitOneMonthTotal = async choesData => {\n  try {\n    const { data } = await axios.get(`/zvit/one_month_total`, {\n      params: choesData,\n    });\n\n    return data;\n  } catch (err) {\n    console.error('❌ Error:', err.message);\n  }\n};\n"],"names":["WrapperFinancialOffice","styled","div","ContantLineWrapper","ZvitContainer","CommandLineWrapper","SectionsContainer","CommandLineButton","Button","btnStyledAll","DateTitle","DateDescription","span","ButtonContainer","selectExpenseByDate","state","expense","expensesPeriod","selectExpenseLoading","isloading","selectExpenseSelected","expenseSelected","_ref","setOpen","selectedPeriod","open","onCloseDrawerExpense","form","useForm","paymentMethod","setPaymentMethod","useState","dispatch","useDispatch","updateExpenseInfo","useSelector","useEffect","setFieldsValue","date","split","category","amount","paymentForm","bank","description","_jsx","_Fragment","children","Drawer","title","placement","width","onClose","_jsxs","Form","initialValues","onFinish","async","expenseData","id","_id","values","updateExpense","then","clearExpenseSelected","resetFields","addExpense","Item","label","name","rules","required","message","Select","categoryExpense","map","Option","value","InputNumber","style","placeholder","onChange","e","target","Radio","undefined","Input","TextArea","autoSize","minRows","maxRows","display","alignItems","flexDirection","gap","type","onClick","htmlType","formatDateTitle","dayOrePariod","selectedDateString","reverse","join","selectSalaryForPeriod","salary","salaryPeriod","selectSalaryLoading","selectSalarySelected","salarySelected","updateSalaryData","paymentSelected","setPaymentSelected","onCloseDrawerSalary","amount_cash","amount_cashless","amount_debt","marginBottom","surname","amount_accrued","Notify","failure","comment","filter","Boolean","salaryData","updateSalary","salaryId","clearSalarySelected","Checkbox","Group","includes","cashless","getFieldValue","cash","readOnly","TitleButton","h3","zvitName","RangePicker","DatePicker","setDayOrePariod","setDateFromTitle","zvitIsLoading","setSelectedPeriod","setSelectedDateString","setTypeZvit","childrensLoading","today","dayjs","salariesLoading","loading","dateFromExpense","setDateFromExpense","Date","toISOString","defaultValue","dates","dateStrings","length","formattedDates","isOneDay","funFormattedDate","locale","borderColor","ZvitButtonTitle","period","createZvitSelectedPeriod","createZvitForPeriod","CirclesWithBar","height","color","wrapperStyle","justifyContent","visible","ariaLabel","BsClipboardPulse","getExpensesByDate","getExpensesBySelectedPeriod","Divider","borderWidth","variant","getSalarisByDate","createSalaryZvitForPeriod","BsEmojiHeartEyes","getZvitChildrensPeriod","createChildrensZvitForPeriod","disabled","FaRegCalendarPlus","ExpenseContainer","SalarisForm","StyledTable","Table","StyledCellNegative","StyledCellPositive","StyledCell","indicatorsCurrentMonth","profit","income","workedIncom","previousPeriodProfit","columns","key","dataIndex","render","onCell","_","index","rowSpan","dataSource","profitPrev","kasa","currentExpense","currentIncome","workedLessons","privatBank","monoBank","size","pagination","selectZvitSelectedPeriod","zvit","zvitSelectedPeriod","selectZvitChildrens","childrensSelected","selectZvitChild","selectedChildData","selectZvitLoadinge","selectZvitLoadingeChildrens","isloadingChildrens","selectZvitLoadingeChild","isloadingChild","Title","expensZvitLoading","expenses","expensesData","setExpensesData","filters","setFilters","filteredData","applyFilters","uniqueDates","Set","toLocaleDateString","data","_columns$find","_columns$find2","dateFilterKey","find","col","categoryFilterKey","text","onFilter","record","Space","icon","EditOutlined","getExpenseById","Popconfirm","QuestionCircleOutlined","onConfirm","deleteExpenseById","DeleteOutlined","amount_privat","amount_mono","totalCash","reduce","sum","item","totalPrivat","totalMono","push","handleTableChange","salaryLoading","salaris","salariesData","setSalariesData","specialistFilterKey","fullName","transformValue","replace","specialist","getSalaryById","deleteSalaryById","salaryStatus","total","totalDebt","childrens","setOpenDrawer","childrenLoading","ThreeDots","radius","wrapperClass","choesData","getZvitChildByIdAndPeriod","handleChildClick","child","childName","childSurname","start","balance","price","end","TitleChildZvit","p","DescrBalance","selectedLessonData","openPaymentDrawer","setOpenPaymentDrawer","dutyToLesson","sumForm","useWatch","advancePayment","setAdvancePayment","marginTop","combinedData","updateLesson","error","console","Alert","showIcon","childSelectedData","openDrawer","setSelectedLessonData","setSelectedChildData","totalPrice","details","acm","totalSum","totalBalance","totalPreviousBalance","handlePaymentLesson","lessonFinanseData","lesson","dateLesson","office","lessonId","previousBalance","styles","content","overflowY","PaymentChuldLesson","FinancialLayout","setIndicatorsCurrentMonth","setLoading","typeZvit","dateFromTitle","totalData","isLoad","now","startDate","getFullYear","getMonth","endDate","axios","get","params","err","getZvitOneMonthTotal","fetchZvitOneMonthTotal","isTotalDate","hasNonZeroValue","obj","Object","hasOwnProperty","call","Container","FinancialButtonContainer","ZvitReportTitle","ReportCurrentMonth","ChildrensPeriodZvit","ChildPeriodZvit","TableExpensesZvit","SalaryZvitTable"],"sourceRoot":""}