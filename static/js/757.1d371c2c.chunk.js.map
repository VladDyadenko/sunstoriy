{"version":3,"file":"static/js/757.1d371c2c.chunk.js","mappings":"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","sources":["components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.styled.js","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.styled.js","components/Expense/ExpenseContainer.styled.js","redux/expense/expenceSelector.js","components/Expense/ExpenseContainer.jsx","ui/ZvitReportTitle/ZvitReportTitle.styled.js","ui/ZvitReportTitle/ZvitReportTitle.jsx","assets/constants/reusableFunctions.js","redux/salary/salarySelector.js","components/SalarisForm/SalarisForm.js","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.jsx","redux/zvit/api.js","components/FinancialOffice/PeriodReport/PeriodReport.styled.js","components/FinancialOffice/PeriodReport/PeriodReport.jsx","redux/zvit/zvitSelector.js","components/Zvit/TableExpensesZvit/TableExpensesZvit.jsx","components/Zvit/Salary/SalaryZvitTable/SalaryZvitTable.jsx","components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperFinancialOffice = styled.div`\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 8px;\n  gap: 20px;\n  margin-bottom: 8px;\n`;\nexport const ContantLineWrapper = styled.div`\n  width: 100%;\n  max-width: 80%;\n  height: 100vh;\n  padding: 10px;\n`;\nexport const ZvitContainer = styled.div`\n  border: 1px solid var(--main-yellow);\n  padding: 7px;\n  border-radius: 15px;\n  margin-bottom: 30px;\n`;\n","import { Button } from 'antd';\nimport styled from 'styled-components';\nimport { btnStyledAll } from 'styles/GlobalStyles';\n\n// export const FinancialCommandTitle = styled.p`\n//   text-align: center;\n//   width: 100%;\n//   text-align: center;\n//   font-family: 'Roboto';\n//   font-size: 20px;\n//   font-weight: 400;\n//   padding-bottom: 5px;\n\n//   border-bottom: 2px solid var(--main-green);\n// `;\nexport const CommandLineWrapper = styled.div`\n  width: 100%;\n  max-width: 20%;\n  height: 100vh;\n  /* border: 2px solid var(--main-green); */\n  padding: 10px;\n`;\nexport const SectionsContainer = styled.div`\n  margin-bottom: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const CommandLineButton = styled(Button)`\n  ${btnStyledAll}\n  background-color: var(--main-green);\n  &:hover {\n    background-color: var(--bg-main-color);\n  }\n\n  &:disabled {\n    background-color: var(--main-disabled);\n    color: var(--header-main-color);\n  }\n  & span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n  }\n  & svg {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DateTitle = styled.div`\n  margin-bottom: 30px;\n  padding-bottom: 20px;\n  text-align: center;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  border-bottom: 1px solid rgba(5, 5, 5, 0.06);\n`;\nexport const DateDescription = styled.span`\n  margin-left: 7px;\n  font-size: 18px;\n  color: var(--main-green);\n`;\nexport const ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 8px;\n  padding-top: 20px;\n  border-top: 1px solid rgba(5, 5, 5, 0.06);\n`;\n","export const selectExpense = state => state.expense.operetion;\nexport const selectExpenseByDate = state => state.expense.expensesPeriod;\nexport const selectExpenseLoading = state => state.expense.isloading;\nexport const selectZvitStatusExpense = state => state.expense.zvitStatus;\nexport const selectExpenseSelected = state => state.expense.expenseSelected;\n","import { Drawer, Form, InputNumber, Select, Input, Button, Radio } from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport { categoryExpense } from 'assets/constants/mainConstans';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addExpense, updateExpense } from 'redux/expense/expenseOperetion';\nimport { DateDescription, DateTitle } from './ExpenseContainer.styled';\nimport { selectExpenseSelected } from 'redux/expense/expenceSelector';\nimport { clearExpenseSelected } from 'redux/expense/expenseSlice';\n\nconst ExpenseContainer = ({\n  setOpen,\n  selectedPeriod,\n  open,\n  onCloseDrawerExpense,\n}) => {\n  const [form] = useForm();\n  const [paymentMethod, setPaymentMethod] = useState(null);\n  const dispatch = useDispatch();\n  const updateExpenseInfo = useSelector(selectExpenseSelected);\n\n  useEffect(() => {\n    if (updateExpenseInfo) {\n      setOpen(true);\n      form.setFieldsValue({\n        date: updateExpenseInfo.date\n          ? updateExpenseInfo.date.split('T')[0]\n          : selectedPeriod,\n        category: updateExpenseInfo.category || 'Інше',\n        amount: updateExpenseInfo.amount || null,\n        paymentForm: updateExpenseInfo.paymentForm || 'cash',\n        bank: updateExpenseInfo.bank || '',\n        description: updateExpenseInfo.description || '',\n      });\n      setPaymentMethod(updateExpenseInfo.paymentForm || 'cash');\n    }\n  }, [updateExpenseInfo, setOpen, form, selectedPeriod]);\n\n  return (\n    <>\n      <Drawer\n        title=\"Поточні витрати\"\n        placement=\"right\"\n        width={400}\n        onClose={onCloseDrawerExpense}\n        open={open}\n      >\n        <Form\n          form={form}\n          initialValues={{\n            date: null,\n            category: 'Інше',\n            amount: null,\n            paymentForm: 'cash',\n            bank: '',\n            description: '',\n          }}\n          onFinish={async values => {\n            if (updateExpenseInfo) {\n              const expenseData = { id: updateExpenseInfo._id, values };\n              await dispatch(updateExpense(expenseData)).then(async () => {\n                dispatch(clearExpenseSelected());\n                onCloseDrawerExpense();\n                form.resetFields();\n              });\n            } else {\n              if (values.paymentForm === 'cash') {\n                values.bank = '';\n              }\n              values.date = selectedPeriod;\n              await dispatch(addExpense(values)).then(() => {\n                onCloseDrawerExpense();\n                form.resetFields();\n              });\n            }\n          }}\n        >\n          <DateTitle>\n            Дата витрат: <DateDescription>{selectedPeriod}</DateDescription>\n          </DateTitle>\n\n          <Form.Item\n            label=\"Категорія витрат\"\n            name=\"category\"\n            rules={[{ required: true, message: 'Виберіть категорію' }]}\n          >\n            <Select>\n              {categoryExpense.map(expense => (\n                <Select.Option key={expense.category} value={expense.category}>\n                  {expense.title}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            rules={[{ required: true, message: 'Внесіть суму витрат' }]}\n            label=\"Сума\"\n            name=\"amount\"\n          >\n            <InputNumber style={{ width: '100%' }} placeholder=\"Вкажіть суму\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Форма оплати\"\n            name=\"paymentForm\"\n            onChange={e => {\n              if (e.target.value === 'cash') {\n                form.setFieldsValue({ bank: '' });\n              }\n            }}\n          >\n            <Radio.Group\n              onChange={e => {\n                setPaymentMethod(e.target.value);\n                if (e.target.value !== 'cashless') {\n                  form.setFieldsValue({ bank: undefined });\n                  form.resetFields(['bank', 'sum']);\n                }\n              }}\n            >\n              <Radio value=\"cash\">Готівка</Radio>\n              <Radio value=\"cashless\">Безготівкова</Radio>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item\n            rules={\n              paymentMethod === 'cashless' && [\n                { required: true, message: 'Оберіть банк' },\n              ]\n            }\n            label=\"Виберіть банк\"\n            name=\"bank\"\n            style={{ width: 250 }}\n          >\n            <Select>\n              <Select.Option value=\"PrivatBank\">ПриватБанк</Select.Option>\n              <Select.Option value=\"MonoBank\">Монобанк</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Опис витрат\" name=\"description\">\n            <Input.TextArea\n              placeholder=\"За потребою додайте опис\"\n              autoSize={{\n                minRows: 1,\n                maxRows: 5,\n              }}\n            />\n          </Form.Item>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              flexDirection: 'column',\n              gap: 8,\n            }}\n          >\n            <Button\n              style={{ width: '100%' }}\n              type=\"primary\"\n              onClick={onCloseDrawerExpense}\n              htmlType=\"button\"\n            >\n              Відмінити\n            </Button>\n            <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\">\n              Зберегти зміни\n            </Button>\n          </div>\n        </Form>\n      </Drawer>\n    </>\n  );\n};\n\nexport default ExpenseContainer;\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  width: 100%;\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  text-align: center;\n  margin-bottom: 10px;\n  padding: 7px 0;\n  color: #4b5c6d;\n  background-color: #f1f2f6;\n`;\n","import React from 'react';\nimport { Title } from './ZvitReportTitle.styled';\n\nconst ZvitReportTitle = ({ title, zvitName }) => {\n  return (\n    <Title>\n      {zvitName} {title}\n    </Title>\n  );\n};\n\nexport default ZvitReportTitle;\n","// для звітів\nexport const formatDateTitle = (dayOrePariod, selectedDateString) => {\n  if (dayOrePariod === 'oneDay') {\n    return `за ${selectedDateString[0].split('-').reverse().join('-')}`;\n  } else {\n    return `з ${selectedDateString[0]\n      .split('-')\n      .reverse()\n      .join('-')} по ${selectedDateString[1].split('-').reverse().join('-')}`;\n  }\n};\n","export const selectSalaryForPeriod = state => state.salary.salaryPeriod;\nexport const selectSalaryLoading = state => state.salary.isloading;\nexport const selectSalaryStatus = state => state.salary.salaryStatus;\nexport const selectSalarySelected = state => state.salary.salarySelected;\n","import {\n  Button,\n  Checkbox,\n  Drawer,\n  Form,\n  Input,\n  InputNumber,\n  Select,\n} from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport {\n  ButtonContainer,\n  DateDescription,\n  DateTitle,\n} from 'components/Expense/ExpenseContainer.styled';\nimport { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addExpense } from 'redux/expense/expenseOperetion';\nimport { updateSalary } from 'redux/salary/salaryOperetion';\nimport { selectSalarySelected } from 'redux/salary/salarySelector';\nimport { clearSalarySelected } from 'redux/salary/salarySlice';\n\nconst SalarisForm = ({ selectedPeriod }) => {\n  const [form] = useForm();\n  const dispatch = useDispatch();\n  const updateSalaryData = useSelector(selectSalarySelected);\n  const [open, setOpen] = useState(false);\n  const [paymentSelected, setPaymentSelected] = useState(null);\n  const [paymentMethod, setPaymentMethod] = useState(null);\n\n  const onCloseDrawerSalary = () => {\n    setOpen(false);\n  };\n  const onCencelSalarySelected = () => {\n    setOpen(false);\n    dispatch(clearSalarySelected());\n  };\n  useEffect(() => {\n    if (updateSalaryData) {\n      setOpen(true);\n\n      form.setFieldsValue({\n        amount_cash: null,\n        amount_cashless: null,\n        amount_debt: updateSalaryData?.amount_debt,\n      });\n    }\n  }, [updateSalaryData, form]);\n\n  return (\n    <Drawer\n      title=\"Виплата зарплати фахівцям\"\n      placement=\"right\"\n      width={340}\n      open={open}\n      onClose={onCloseDrawerSalary}\n    >\n      <DateTitle>\n        <p style={{ marginBottom: 15 }}>\n          Фахівець:\n          <DateDescription>{` ${updateSalaryData?.name}  ${updateSalaryData?.surname}`}</DateDescription>\n        </p>\n        <p>\n          Дата нарахування:\n          <DateDescription>{selectedPeriod}</DateDescription>\n        </p>\n        <p>\n          Дата виплати:\n          <DateDescription>{selectedPeriod}</DateDescription>\n        </p>\n        <p>\n          Сума до виплати:\n          <DateDescription>{updateSalaryData?.amount_accrued}</DateDescription>\n        </p>\n      </DateTitle>\n\n      <Form\n        form={form}\n        initialValues={{\n          amount_cash: null,\n          amount_cashless: null,\n          amount_debt: updateSalaryData?.amount_debt,\n        }}\n        onFinish={async values => {\n          const totalPaid =\n            (values.amount_cash || 0) + (values.amount_cashless || 0);\n          if (totalPaid > updateSalaryData?.amount_debt) {\n            return Notify.failure('Сума виплати перевищує заборгованність!');\n          }\n          values.date = updateSalaryData.date;\n          values.comment = [\n            values.amount_cash ? `${values.amount_cash} грн` : null,\n            values.amount_cashless ? `${values.amount_cashless} грн` : null,\n            `виплачено ${selectedPeriod}`,\n          ]\n            .filter(Boolean)\n            .join(' ');\n\n          const salaryData = { id: updateSalaryData._id, values };\n\n          await dispatch(updateSalary(salaryData)).then(() => {\n            onCloseDrawerSalary();\n            // Додаємо витрати\n            if (values.amount_cash > 0 || values.amount_cash < 0) {\n              dispatch(\n                addExpense({\n                  date: selectedPeriod,\n                  salaryId: updateSalaryData?._id,\n                  category: `Зарплата ${updateSalaryData?.name} ${updateSalaryData?.surname}`,\n                  amount: values.amount_cash,\n                  paymentForm: 'cash',\n                  bank: '',\n                  description: `Нараховано ${\n                    updateSalaryData?.date.split('T')[0]\n                  }`,\n                })\n              );\n            }\n            if (values.amount_cashless > 0 || values.amount_cashless < 0) {\n              dispatch(\n                addExpense({\n                  date: selectedPeriod,\n                  salaryId: updateSalaryData?._id,\n                  category: `Зарплата ${updateSalaryData?.name} ${updateSalaryData?.surname}`,\n                  amount: values.amount_cashless,\n                  paymentForm: 'cashless',\n                  bank: values.bank,\n                  description: `Нараховано ${\n                    updateSalaryData?.date.split('T')[0]\n                  }`,\n                })\n              );\n            }\n\n            form.resetFields();\n            dispatch(clearSalarySelected());\n          });\n        }}\n      >\n        <Form.Item label=\"Форма виплати\" name=\"paymentMethod\">\n          <Checkbox.Group\n            onChange={values => {\n              setPaymentMethod(values);\n              setPaymentSelected(values);\n              if (!values?.includes('cashless')) {\n                form.setFieldsValue({ bank: undefined });\n                form.resetFields(['bank']);\n              }\n            }}\n          >\n            <Checkbox value=\"cash\">Готівка</Checkbox>\n            <Checkbox value=\"cashless\">Безготівкова</Checkbox>\n          </Checkbox.Group>\n        </Form.Item>\n        {/* Поле для виплати готівкою */}\n        {paymentSelected?.includes('cash') && (\n          <Form.Item\n            rules={\n              paymentMethod.includes('cash') && [\n                { required: true, message: 'Вкажіть суму' },\n              ]\n            }\n            label=\"Сума готівкою\"\n            name=\"amount_cash\"\n          >\n            <InputNumber\n              style={{ width: '100%' }}\n              placeholder=\"Сума готівкою\"\n              onChange={value => {\n                const cashless = form.getFieldValue('amount_cashless') || 0;\n                form.setFieldsValue({\n                  amount_debt:\n                    updateSalaryData?.amount_debt - (value || 0) - cashless,\n                });\n              }}\n            />\n          </Form.Item>\n        )}\n\n        {/* Поле для виплати безготівково */}\n        {paymentSelected?.includes('cashless') && (\n          <>\n            <Form.Item\n              label=\"Банк\"\n              name=\"bank\"\n              rules={[{ required: true, message: 'Оберіть банк' }]}\n            >\n              <Select>\n                <Select.Option value=\"PrivatBank\">ПриватБанк</Select.Option>\n                <Select.Option value=\"MonoBank\">Монобанк</Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              rules={\n                paymentMethod.includes('cashless') && [\n                  { required: true, message: 'Вкажіть суму' },\n                ]\n              }\n              label=\"Сума безготівково\"\n              name=\"amount_cashless\"\n            >\n              <InputNumber\n                style={{ width: '100%' }}\n                placeholder=\"Сума безготівково\"\n                onChange={value => {\n                  const cash = form.getFieldValue('amount_cash') || 0;\n                  form.setFieldsValue({\n                    amount_debt:\n                      updateSalaryData?.amount_debt - (value || 0) - cash,\n                  });\n                }}\n              />\n            </Form.Item>\n          </>\n        )}\n        <Form.Item label=\"Заборгованність\" name=\"amount_debt\">\n          <InputNumber style={{ width: '100%' }} readOnly />\n        </Form.Item>\n\n        <Form.Item label=\"Примітки\" name=\"comment\">\n          <Input.TextArea\n            placeholder=\"Інформація за потреби\"\n            autoSize={{\n              minRows: 1,\n              maxRows: 5,\n            }}\n          />\n        </Form.Item>\n        <ButtonContainer>\n          <Button\n            style={{ width: '100%' }}\n            type=\"primary\"\n            onClick={() => onCencelSalarySelected()}\n            htmlType=\"button\"\n          >\n            Відмінити\n          </Button>\n          <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\">\n            Зберегти зміни\n          </Button>\n        </ButtonContainer>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default SalarisForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useState } from 'react';\nimport { DatePicker, Divider } from 'antd';\nimport { FaRegCalendarPlus } from 'react-icons/fa';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/uk'; // Імпортуємо українську локаль\nimport locale from 'antd/es/date-picker/locale/uk_UA';\n\nimport { BsClipboardPulse, BsEmojiHeartEyes } from 'react-icons/bs';\n\nimport {\n  CommandLineButton,\n  CommandLineWrapper,\n  SectionsContainer,\n} from './FinancialButtonContainer.styled';\n\nimport ExpenseContainer from 'components/Expense/ExpenseContainer';\nimport { createZvitSelectedPeriod } from 'redux/zvit/zvitOperetion';\nimport ZvitReportTitle from 'ui/ZvitReportTitle/ZvitReportTitle';\nimport { CirclesWithBar } from 'react-loader-spinner';\nimport { funFormattedDate } from 'assets/constants/transformation';\nimport { formatDateTitle } from 'assets/constants/reusableFunctions';\nimport { getSalarisByDate } from 'redux/salary/salaryOperetion';\nimport SalarisForm from 'components/SalarisForm/SalarisForm';\nimport { selectSalaryLoading } from 'redux/salary/salarySelector';\nimport { getExpensesByDate } from 'redux/expense/expenseOperetion';\nimport { selectExpenseLoading } from 'redux/expense/expenceSelector';\nconst { RangePicker } = DatePicker;\n\nconst FinancialButtonContainer = ({\n  dayOrePariod,\n  setDayOrePariod,\n  setDateFromTitle,\n  zvitIsLoading,\n  selectedPeriod,\n  setSelectedPeriod,\n  selectedDateString,\n  setSelectedDateString,\n  setTypeZvit,\n}) => {\n  const dispatch = useDispatch();\n  const today = dayjs();\n\n  const salariesLoading = useSelector(selectSalaryLoading);\n  const loading = useSelector(selectExpenseLoading);\n\n  const [dateFromExpense, setDateFromExpense] = useState(\n    new Date().toISOString().split('T')[0]\n  );\n\n  const [open, setOpen] = useState(false);\n  const onCloseDrawerExpense = () => {\n    setOpen(false);\n  };\n\n  function selectDay(dates, dateStrings) {\n    if (!dates || dates.length === 0) return;\n    setDateFromExpense(dateStrings[0]);\n    setSelectedDateString(dateStrings);\n\n    const { formattedDates, isOneDay } = funFormattedDate(dates);\n\n    setSelectedPeriod(formattedDates);\n\n    setDayOrePariod(isOneDay ? 'oneDay' : 'period');\n  }\n\n  const createZvitForPeriod = async period => {\n    if (!period) return;\n    setTypeZvit('report_period');\n    await dispatch(createZvitSelectedPeriod(period)).then(() =>\n      setDateFromTitle(formatDateTitle(dayOrePariod, selectedDateString))\n    );\n  };\n  const getExpensesBySelectedPeriod = async period => {\n    if (!period) return;\n    setTypeZvit('report_expenses');\n\n    await dispatch(getExpensesByDate(period)).then(() =>\n      setDateFromTitle(formatDateTitle(dayOrePariod, selectedDateString))\n    );\n  };\n  const createSalaryZvitForPeriod = async period => {\n    if (!period) return;\n    setTypeZvit('report_salaries');\n\n    await dispatch(getSalarisByDate(period)).then(() =>\n      setDateFromTitle(formatDateTitle(dayOrePariod, selectedDateString))\n    );\n  };\n\n  return (\n    <>\n      <CommandLineWrapper>\n        <SectionsContainer>\n          <RangePicker\n            defaultValue={[today, today]}\n            onChange={selectDay}\n            locale={locale}\n            style={{ marginBottom: 20, borderColor: '#fce010' }}\n          />\n          <ZvitReportTitle title=\"Фінансові показники:\" />\n          <CommandLineButton\n            onClick={() => createZvitForPeriod(selectedPeriod)}\n          >\n            <>\n              {zvitIsLoading ? (\n                <CirclesWithBar\n                  height=\"21\"\n                  width=\"50\"\n                  color=\"#ffffff\"\n                  wrapperStyle={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                  visible={true}\n                  ariaLabel=\"circles-with-bar-loading\"\n                />\n              ) : (\n                <>\n                  Обіг коштів за період <BsClipboardPulse />\n                </>\n              )}\n            </>\n          </CommandLineButton>\n          <CommandLineButton\n            onClick={() => getExpensesBySelectedPeriod(selectedPeriod)}\n          >\n            {loading ? (\n              <CirclesWithBar\n                height=\"21\"\n                width=\"50\"\n                color=\"#ffffff\"\n                wrapperStyle={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                visible={true}\n                ariaLabel=\"circles-with-bar-loading\"\n              />\n            ) : (\n              <>\n                Розходи за період <BsClipboardPulse />\n              </>\n            )}\n          </CommandLineButton>\n        </SectionsContainer>\n        <Divider\n          style={{ borderWidth: 1, borderColor: '#fce010' }}\n          variant=\"solid\"\n        />\n        <SectionsContainer>\n          <ZvitReportTitle title=\"Зарплата вчителів:\" />\n          <CommandLineButton\n            onClick={() => createSalaryZvitForPeriod(selectedPeriod)}\n          >\n            {salariesLoading ? (\n              <CirclesWithBar\n                height=\"21\"\n                width=\"50\"\n                color=\"#ffffff\"\n                wrapperStyle={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                visible={true}\n                ariaLabel=\"circles-with-bar-loading\"\n              />\n            ) : (\n              <>\n                За вибраний період <BsEmojiHeartEyes />\n              </>\n            )}\n          </CommandLineButton>\n        </SectionsContainer>\n        <Divider\n          style={{ borderWidth: 1, borderColor: '#fce010' }}\n          variant=\"solid\"\n        />\n        <SectionsContainer>\n          <ZvitReportTitle title=\"Внесення розходів\" />\n          <CommandLineButton\n            onClick={() => setOpen(true)}\n            disabled={dayOrePariod === 'period'}\n          >\n            <>\n              Виберіть день <FaRegCalendarPlus />\n            </>\n          </CommandLineButton>\n          <ExpenseContainer\n            onCloseDrawerExpense={onCloseDrawerExpense}\n            open={open}\n            setOpen={setOpen}\n            selectedPeriod={dateFromExpense}\n          />\n          <SalarisForm selectedPeriod={dateFromExpense} />\n        </SectionsContainer>\n      </CommandLineWrapper>\n    </>\n  );\n};\n\nexport default FinancialButtonContainer;\n","import axios from 'axios';\n\nexport const getZvitOneMonthTotal = async choesData => {\n  try {\n    const { data } = await axios.get(`/zvit/one_month_total`, {\n      params: choesData,\n    });\n\n    return data;\n  } catch (err) {\n    console.error('❌ Error:', err.message);\n  }\n};\n","import styled from 'styled-components';\nimport { Table } from 'antd';\n\nexport const StyledTable = styled(Table)`\n  .ant-table {\n    font-size: 14px;\n  }\n\n  .ant-table-thead > tr > th {\n    background-color: #f0f2f5 !important; /* Колір фону заголовків */\n    font-weight: bold;\n    text-align: center;\n  }\n\n  .ant-table-tbody > tr > td {\n    text-align: center;\n  }\n\n  .ant-table-tbody > tr:hover {\n    background-color: #e6f7ff; /* Колір при наведенні */\n  }\n\n  .ant-table-row[data-row-key='balance'],\n  .ant-table-row[data-row-key='total'] {\n    font-size: 16px;\n    font-weight: 400;\n    background-color: #e6f7ff !important; /* Колір фону */\n    color: #1890ff; /* Колір тексту */\n    border-left: 10px;\n  }\n  .ant-btn-icon .anticon.anticon-delete > svg {\n    transition: all 0.05s cubic-bezier(0.645, 0.045, 0.355, 1);\n  }\n  .ant-btn-icon .anticon.anticon-delete > svg:hover {\n    fill: red;\n  }\n`;\nexport const StyledCellNegative = styled.span`\n  color: var(--main-red);\n`;\nexport const StyledCell = styled.span`\n  color: inherit;\n`;\n","import React from 'react';\nimport {\n  StyledCell,\n  StyledCellNegative,\n  StyledTable,\n} from './PeriodReport.styled';\n\nconst ReportCurrentMonth = ({ indicatorsCurrentMonth, loading }) => {\n  const {\n    profit = {},\n    expense = {},\n    income = {},\n    workedIncom = 0,\n    previousPeriodProfit = {},\n  } = indicatorsCurrentMonth;\n\n  const columns = [\n    {\n      key: '1',\n      title: 'Категорія',\n      dataIndex: 'category',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '2',\n      title: 'На початок періоду',\n      dataIndex: 'profitPrev',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '3',\n      title: 'Оплачені кошти',\n      dataIndex: 'currentIncome',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n\n    {\n      key: '4',\n      title: 'Відпрацьовано',\n      dataIndex: 'workedLessons',\n      onCell: (_, index) => {\n        if (index === 0) {\n          return { rowSpan: dataSource.length - 1 };\n        }\n        if (index === dataSource.length - 1) {\n          return { rowSpan: 1 };\n        }\n        return { rowSpan: 0 };\n      },\n    },\n    {\n      key: '5',\n      title: 'Поточні витрати',\n      dataIndex: 'currentExpense',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n\n    {\n      key: '6',\n      title: 'На кінець періоду ',\n      dataIndex: 'profit',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n  ];\n\n  const dataSource = [\n    {\n      key: 'cash',\n      category: 'Готівка',\n      profitPrev: previousPeriodProfit?.cash || 0,\n      profit: profit?.kasa || 0,\n      currentExpense: expense?.cash || 0,\n      currentIncome: income?.cash || 0,\n      workedLessons: workedIncom,\n    },\n    {\n      key: 'privat',\n      category: 'ПриватБанк',\n      profitPrev: previousPeriodProfit?.privatBank || 0,\n      profit: profit?.privatBank || 0,\n      currentExpense: expense?.privatBank || 0,\n      currentIncome: income?.privatBank || 0,\n      workedLessons: '',\n    },\n    {\n      key: 'mono',\n      category: 'МоноБанк',\n      profitPrev: previousPeriodProfit?.monoBank || 0,\n      profit: profit?.monoBank || 0,\n      currentExpense: expense?.monoBank || 0,\n      currentIncome: income?.monoBank || 0,\n      workedLessons: '',\n    },\n    {\n      key: 'balance',\n      category: 'Ітого:',\n      profitPrev: previousPeriodProfit?.amount || 0,\n      profit: profit?.amount || 0,\n      currentExpense: expense?.amount || 0,\n      currentIncome: income?.amount || 0,\n      workedLessons: workedIncom,\n    },\n  ];\n\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={loading}\n    />\n  );\n};\n\nexport default ReportCurrentMonth;\n","export const selectZvitSelectedPeriod = state => state.zvit.zvitSelectedPeriod;\nexport const selectZvitLoadinge = state => state.zvit.isloading;\nexport const selectZvitStatus = state => state.zvit.zvitStatus;\n","import { StyledTable } from 'components/FinancialOffice/PeriodReport/PeriodReport.styled';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Popconfirm, Space } from 'antd';\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  QuestionCircleOutlined,\n} from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteExpenseById,\n  getExpenseById,\n} from 'redux/expense/expenseOperetion';\n\nconst TableExpensesZvit = ({ expensZvitLoading, expenses }) => {\n  const dispatch = useDispatch();\n\n  const [expensesData, setExpensesData] = useState(expenses);\n  const [filters, setFilters] = useState({});\n\n  useEffect(() => {\n    const filteredData = applyFilters(expenses, filters);\n    setExpensesData(filteredData);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expenses, filters]);\n\n  const uniqueDates = [\n    ...new Set(\n      expenses.map(expense =>\n        new Date(expense.date).toLocaleDateString('uk-UA')\n      )\n    ),\n  ];\n\n  const applyFilters = (data, filters) => {\n    let filteredData = data;\n\n    const dateFilterKey = columns.find(col => col.dataIndex === 'date')?.key;\n    const categoryFilterKey = columns.find(\n      col => col.dataIndex === 'category'\n    )?.key;\n\n    if (filters[dateFilterKey] && filters[dateFilterKey].length) {\n      filteredData = filteredData.filter(expense =>\n        filters[dateFilterKey].includes(\n          new Date(expense.date).toLocaleDateString('uk-UA')\n        )\n      );\n    }\n\n    if (filters[categoryFilterKey] && filters[categoryFilterKey].length) {\n      filteredData = filteredData.filter(expense =>\n        filters[categoryFilterKey].includes(expense.category)\n      );\n    }\n\n    return filteredData;\n  };\n\n  const handleTableChange = (_, filters) => {\n    setFilters(filters);\n  };\n\n  const columns = [\n    {\n      key: '1',\n      title: 'Дата',\n      dataIndex: 'date',\n      filters: uniqueDates.map(date => ({ text: date, value: date })),\n      onFilter: (value, record) =>\n        record.key === 'total' || record.date === value,\n    },\n    {\n      key: '2',\n      title: 'Категорія',\n      dataIndex: 'category',\n      filters: [...new Set(expenses.map(expense => expense.category))].map(\n        category => ({ text: category, value: category })\n      ),\n      onFilter: (value, record) =>\n        record.key === 'total' || record.category === value,\n    },\n    {\n      key: '3',\n      title: 'Готівка',\n      dataIndex: 'amount_cash',\n    },\n    {\n      key: '4',\n      title: 'Приватбанк',\n      dataIndex: 'amount_privat',\n    },\n    {\n      key: '5',\n      title: 'Монобанк',\n      dataIndex: 'amount_mono',\n    },\n    {\n      key: '6',\n      title: 'Додаткова інформація',\n      dataIndex: 'description',\n    },\n    {\n      key: '7',\n      title: 'Дії',\n      dataIndex: 'actions',\n      render: (_, record) =>\n        record.key !== 'total' && (\n          <Space>\n            <Button\n              type=\"primary\"\n              icon={<EditOutlined />}\n              onClick={async () =>\n                await dispatch(getExpenseById(record.key)).then()\n              }\n            />\n            <Popconfirm\n              title=\"Видалення\"\n              description=\"Ви намагаєтесь видалити цю строчку. Продовжити?\"\n              icon={\n                <QuestionCircleOutlined\n                  style={{\n                    color: 'red',\n                  }}\n                />\n              }\n              onConfirm={() => {\n                dispatch(deleteExpenseById(record.key));\n              }}\n            >\n              <Button type=\"danger\" icon={<DeleteOutlined />} />\n            </Popconfirm>\n          </Space>\n        ),\n    },\n  ];\n\n  const dataSource = expensesData.map(expense => ({\n    key: expense._id,\n    date: new Date(expense.date).toLocaleDateString('uk-UA'),\n    category: expense.category,\n    amount_cash: expense.paymentForm === 'cash' ? expense.amount : '',\n    amount_privat:\n      expense.paymentForm === 'cashless' && expense.bank === 'PrivatBank'\n        ? expense.amount\n        : '',\n    amount_mono:\n      expense.paymentForm === 'cashless' && expense.bank === 'MonoBank'\n        ? expense.amount\n        : '',\n    description: expense.description,\n  }));\n\n  const totalCash = expensesData.reduce(\n    (sum, item) => sum + (item.paymentForm === 'cash' ? item.amount : 0),\n    0\n  );\n  const totalPrivat = expensesData.reduce(\n    (sum, item) =>\n      sum +\n      (item.paymentForm === 'cashless' && item.bank === 'PrivatBank'\n        ? item.amount\n        : 0),\n    0\n  );\n  const totalMono = expensesData.reduce(\n    (sum, item) =>\n      sum +\n      (item.paymentForm === 'cashless' && item.bank === 'MonoBank'\n        ? item.amount\n        : 0),\n    0\n  );\n\n  dataSource.push({\n    key: 'total',\n    date: 'Ітогом за період:',\n    category: '',\n    amount_cash: totalCash,\n    amount_privat: totalPrivat,\n    amount_mono: totalMono,\n    description: '',\n  });\n\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={expensZvitLoading}\n      onChange={handleTableChange}\n    />\n  );\n};\n\nexport default TableExpensesZvit;\n","import {\n  DeleteOutlined,\n  EditOutlined,\n  QuestionCircleOutlined,\n} from '@ant-design/icons';\nimport { Button, Popconfirm, Space } from 'antd';\nimport {\n  StyledCell,\n  StyledCellNegative,\n  StyledTable,\n} from 'components/FinancialOffice/PeriodReport/PeriodReport.styled';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteSalaryById, getSalaryById } from 'redux/salary/salaryOperetion';\n\nconst SalaryZvitTable = ({ salaryLoading, salaris }) => {\n  const dispatch = useDispatch();\n\n  const [filters, setFilters] = useState({});\n  const [salariesData, setSalariesData] = useState(salaris);\n\n  const uniqueDates = [\n    ...new Set(\n      salaris.map(salary => new Date(salary.date).toLocaleDateString('uk-UA'))\n    ),\n  ];\n  useEffect(() => {\n    setSalariesData(applyFilters(salaris, filters));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters, salaris]);\n\n  const applyFilters = (data, filters) => {\n    let filteredData = data;\n    const dateFilterKey = columns.find(col => col.dataIndex === 'date')?.key;\n    const specialistFilterKey = columns.find(\n      col => col.dataIndex === 'specialist'\n    )?.key;\n\n    if (filters[dateFilterKey] && filters[dateFilterKey].length) {\n      filteredData = filteredData.filter(salary => {\n        return filters[dateFilterKey].includes(\n          new Date(salary.date).toLocaleDateString('uk-UA')\n        );\n      });\n    }\n    if (filters[specialistFilterKey] && filters[specialistFilterKey].length) {\n      filteredData = filteredData.filter(salary =>\n        filters[specialistFilterKey].includes(\n          `${salary.name} ${salary.surname}`\n        )\n      );\n    }\n\n    return filteredData;\n  };\n  const handleTableChange = (_, filters) => {\n    setFilters(filters);\n  };\n  const columns = [\n    {\n      key: '1',\n      title: 'Дата',\n      dataIndex: 'date',\n      filters: uniqueDates.map(date => ({ text: date, value: date })),\n      onFilter: (value, record) =>\n        record.key === 'total' || record.date === value,\n    },\n    {\n      key: '2',\n      title: 'Нараховано',\n      dataIndex: 'salaryStatus',\n    },\n    {\n      key: '3',\n      title: 'Фахівець',\n      dataIndex: 'specialist',\n      filters: [\n        ...new Set(salaris.map(salary => `${salary.name} ${salary.surname}`)),\n      ].map(fullName => ({ text: fullName, value: fullName })),\n      onFilter: (value, record) => {\n        if (record.key === 'total') return true;\n        const transformValue = value.replace(/([а-яa-z])([А-ЯA-Z])/g, '$1 $2');\n        return record.specialist === transformValue;\n      },\n    },\n    {\n      key: 'group',\n      title: 'Виплачено',\n      children: [\n        {\n          key: '4',\n          title: 'Готівка',\n          dataIndex: 'amount_cash',\n        },\n        {\n          key: '5',\n          title: 'Приватбанк',\n          dataIndex: 'amount_privat',\n        },\n        {\n          key: '6',\n          title: 'Монобанк',\n          dataIndex: 'amount_mono',\n        },\n      ],\n    },\n    {\n      key: '7',\n      title: 'Заборгованість',\n      dataIndex: 'amount_debt',\n      render: (value, record) => {\n        if (value < 0 && record.key !== 'total') {\n          return <StyledCellNegative>{value} (переплата) </StyledCellNegative>;\n        }\n\n        if (record.key === 'total') {\n          return <StyledCell>{value}</StyledCell>;\n        } else {\n          return <StyledCellNegative>{value}</StyledCellNegative>;\n        }\n      },\n    },\n    {\n      key: '8',\n      title: 'Додаткова інформація',\n      dataIndex: 'description',\n    },\n\n    {\n      key: '9',\n      title: 'Дії',\n      dataIndex: 'actions',\n      render: (_, record) =>\n        record.key !== 'total' && (\n          <Space>\n            <Popconfirm\n              title=\"Виплата зарплати\"\n              description=\"Нарахувати виплату?\"\n              icon={\n                <QuestionCircleOutlined\n                  style={{\n                    color: 'red',\n                  }}\n                />\n              }\n              onConfirm={async () => await dispatch(getSalaryById(record.key))}\n            >\n              <Button type=\"primary\" icon={<EditOutlined />} />\n            </Popconfirm>\n\n            <Popconfirm\n              title=\"Видалення\"\n              description=\"Ви намагаєтесь видалити цю строчку. Продовжити?\"\n              icon={\n                <QuestionCircleOutlined\n                  style={{\n                    color: 'red',\n                  }}\n                />\n              }\n              onConfirm={() => {\n                dispatch(deleteSalaryById(record.key));\n              }}\n            >\n              <Button type=\"danger\" icon={<DeleteOutlined />} />\n            </Popconfirm>\n          </Space>\n        ),\n    },\n  ];\n  const dataSource = salariesData.map(salary => {\n    const {\n      _id,\n      date,\n      amount_accrued,\n      amount_cash,\n      amount_cashless,\n      amount_debt,\n      name,\n      surname,\n      bank,\n      comment,\n    } = salary;\n\n    return {\n      key: _id,\n      date: new Date(date).toLocaleDateString('uk-UA'),\n      salaryStatus: amount_accrued ? amount_accrued : '',\n      specialist: `${name} ${surname}`,\n      amount_cash: amount_cash ? amount_cash : '',\n      amount_privat:\n        amount_cashless && bank === 'PrivatBank' ? amount_cashless : '',\n      amount_mono:\n        amount_cashless && bank === 'MonoBank' ? amount_cashless : '',\n      amount_debt: amount_debt ? amount_debt : '',\n      description: comment,\n    };\n  });\n\n  const total = salariesData.reduce(\n    (sum, item) => sum + (item.amount_accrued ? item.amount_accrued : 0),\n    0\n  );\n  const totalDebt = salariesData.reduce(\n    (sum, item) => sum + (item.amount_debt ? item.amount_debt : 0),\n    0\n  );\n  const totalCash = salariesData.reduce(\n    (sum, item) => sum + (item.amount_cash ? item.amount_cash : 0),\n    0\n  );\n  const totalPrivat = salariesData.reduce(\n    (sum, item) =>\n      sum +\n      (item.amount_cashless && item.bank === 'PrivatBank'\n        ? item.amount_cashless\n        : 0),\n    0\n  );\n  const totalMono = salariesData.reduce(\n    (sum, item) =>\n      sum +\n      (item.amount_cashless && item.bank === 'MonoBank'\n        ? item.amount_cashless\n        : 0),\n    0\n  );\n\n  dataSource.push({\n    key: 'total',\n    date: 'Ітогом за період:',\n    salaryStatus: total,\n    amount_cash: totalCash,\n    amount_privat: totalPrivat,\n    amount_mono: totalMono,\n    amount_debt: totalDebt,\n    description: '',\n  });\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={salaryLoading}\n      onChange={handleTableChange}\n    />\n  );\n};\n\nexport default SalaryZvitTable;\n","import React, { useEffect, useState } from 'react';\nimport {\n  ContantLineWrapper,\n  WrapperFinancialOffice,\n  ZvitContainer,\n} from './FinancialLayout.styled';\nimport FinancialButtonContainer from '../FinancialButtonContainer/FinancialButtonContainer';\nimport Container from 'components/Container/Container';\nimport { getZvitOneMonthTotal } from 'redux/zvit/api';\nimport ReportCurrentMonth from '../PeriodReport/PeriodReport';\nimport { useSelector } from 'react-redux';\nimport {\n  selectExpenseByDate,\n  selectExpenseLoading,\n} from 'redux/expense/expenceSelector';\nimport {\n  selectZvitLoadinge,\n  selectZvitSelectedPeriod,\n} from 'redux/zvit/zvitSelector';\nimport ZvitReportTitle from 'ui/ZvitReportTitle/ZvitReportTitle';\nimport TableExpensesZvit from 'components/Zvit/TableExpensesZvit/TableExpensesZvit';\nimport SalaryZvitTable from 'components/Zvit/Salary/SalaryZvitTable/SalaryZvitTable';\nimport {\n  selectSalaryForPeriod,\n  selectSalaryLoading,\n} from 'redux/salary/salarySelector';\n\nconst FinancialLayout = () => {\n  const [indicatorsCurrentMonth, setIndicatorsCurrentMonth] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [typeZvit, setTypeZvit] = useState('');\n  const [dateFromTitle, setDateFromTitle] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState(null);\n  const [selectedDateString, setSelectedDateString] = useState(null);\n  const [dayOrePariod, setDayOrePariod] = useState('oneDay');\n\n  const { totalData } = useSelector(selectZvitSelectedPeriod);\n  const zvitIsLoading = useSelector(selectZvitLoadinge);\n  const expensZvitLoading = useSelector(selectExpenseLoading);\n  const { expenses } = useSelector(selectExpenseByDate);\n\n  const salaris = useSelector(selectSalaryForPeriod);\n  const salaryLoading = useSelector(selectSalaryLoading);\n\n  useEffect(() => {\n    const fetchZvitOneMonthTotal = async () => {\n      const now = new Date();\n\n      const startDate = new Date(now.getFullYear(), now.getMonth(), 1);\n      const endDate = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n      const formattedDates = {\n        startDate: startDate.toISOString(),\n        endDate: endDate.toISOString(),\n      };\n\n      try {\n        setLoading(true);\n        setTypeZvit('');\n\n        const { totalData } = await getZvitOneMonthTotal(formattedDates);\n        setIndicatorsCurrentMonth(totalData);\n      } catch (error) {\n        console.error('❌ Error fetching total profit:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchZvitOneMonthTotal();\n  }, []);\n\n  // Перевірка даних в totalData, що там є значення, не рівні 0\n  function hasNonZeroValue(obj) {\n    if (typeof obj === 'object' && obj !== null) {\n      for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n          if (hasNonZeroValue(obj[key])) {\n            return true;\n          }\n        }\n      }\n    } else if (obj !== 0) {\n      return true;\n    }\n    return false;\n  }\n  const isTotalDate = hasNonZeroValue(totalData);\n\n  return (\n    <Container>\n      <WrapperFinancialOffice>\n        <FinancialButtonContainer\n          setTypeZvit={setTypeZvit}\n          dayOrePariod={dayOrePariod}\n          setDayOrePariod={setDayOrePariod}\n          setDateFromTitle={setDateFromTitle}\n          zvitIsLoading={zvitIsLoading}\n          selectedPeriod={selectedPeriod}\n          setSelectedPeriod={setSelectedPeriod}\n          selectedDateString={selectedDateString}\n          setSelectedDateString={setSelectedDateString}\n        />\n        <ContantLineWrapper>\n          <ZvitContainer>\n            <ZvitReportTitle title=\"Поточні цифри місяця\" />\n            <ReportCurrentMonth\n              loading={loading}\n              indicatorsCurrentMonth={indicatorsCurrentMonth}\n            />\n          </ZvitContainer>\n          {typeZvit === 'report_period' && totalData && isTotalDate ? (\n            <ZvitContainer>\n              <ZvitReportTitle\n                zvitName={`Обороти`}\n                title={`${dateFromTitle}`}\n              />\n              <ReportCurrentMonth\n                loading={zvitIsLoading}\n                indicatorsCurrentMonth={totalData}\n              />\n            </ZvitContainer>\n          ) : typeZvit === '' ||\n            typeZvit === 'report_expenses' ||\n            typeZvit === 'report_salaries' ? null : (\n            <>\n              <ZvitReportTitle\n                zvitName={`Обороти`}\n                title={`${dateFromTitle}`}\n              />\n              <h4>Даних в обраному періоді немає</h4>\n            </>\n          )}\n          {typeZvit === 'report_expenses' &&\n          expenses &&\n          expenses?.length > 0 ? (\n            <ZvitContainer>\n              <ZvitReportTitle\n                zvitName={`Розходи`}\n                title={`${dateFromTitle}`}\n              />\n              <TableExpensesZvit\n                expensZvitLoading={expensZvitLoading}\n                expenses={expenses}\n              />\n            </ZvitContainer>\n          ) : typeZvit === '' ||\n            typeZvit === 'report_period' ||\n            typeZvit === 'report_salaries' ? null : (\n            <>\n              <ZvitReportTitle\n                zvitName={`Розходи`}\n                title={`${dateFromTitle}`}\n              />\n              <h4>Витрат в обраному періоді немає</h4>\n            </>\n          )}\n          {typeZvit === 'report_salaries' && salaris && salaris?.length > 0 ? (\n            <ZvitContainer>\n              <ZvitReportTitle\n                zvitName={`Зарплата`}\n                title={`${dateFromTitle}`}\n              />\n              <SalaryZvitTable\n                salaris={salaris}\n                salaryLoading={salaryLoading}\n              />\n            </ZvitContainer>\n          ) : typeZvit === '' ||\n            typeZvit === 'report_period' ||\n            typeZvit === 'report_expenses' ? null : (\n            <>\n              <ZvitReportTitle\n                zvitName={`Зарплата`}\n                title={`${dateFromTitle}`}\n              />\n              <h4>Зарплата в обраному періоді не нарахована</h4>\n            </>\n          )}\n        </ContantLineWrapper>\n      </WrapperFinancialOffice>\n    </Container>\n  );\n};\n\nexport default FinancialLayout;\n"],"names":["WrapperFinancialOffice","styled","div","_templateObject","_taggedTemplateLiteral","ContantLineWrapper","_templateObject2","ZvitContainer","_templateObject3","CommandLineWrapper","SectionsContainer","CommandLineButton","Button","btnStyledAll","DateTitle","DateDescription","span","ButtonContainer","selectExpenseByDate","state","expense","expensesPeriod","selectExpenseLoading","isloading","selectExpenseSelected","expenseSelected","_ref","setOpen","selectedPeriod","open","onCloseDrawerExpense","_useForm","useForm","form","_slicedToArray","_useState","useState","_useState2","paymentMethod","setPaymentMethod","dispatch","useDispatch","updateExpenseInfo","useSelector","useEffect","setFieldsValue","date","split","category","amount","paymentForm","bank","description","_jsx","_Fragment","children","Drawer","title","placement","width","onClose","_jsxs","Form","initialValues","onFinish","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","values","expenseData","wrap","_context2","prev","next","id","_id","updateExpense","then","_callee","_context","clearExpenseSelected","resetFields","stop","addExpense","_x","apply","arguments","Item","label","name","rules","required","message","Select","categoryExpense","map","Option","value","InputNumber","style","placeholder","onChange","e","target","Radio","undefined","Input","TextArea","autoSize","minRows","maxRows","display","alignItems","flexDirection","gap","type","onClick","htmlType","Title","h3","zvitName","formatDateTitle","dayOrePariod","selectedDateString","concat","reverse","join","selectSalaryForPeriod","salary","salaryPeriod","selectSalaryLoading","selectSalarySelected","salarySelected","updateSalaryData","_useState3","_useState4","paymentSelected","setPaymentSelected","_useState5","_useState6","onCloseDrawerSalary","amount_cash","amount_cashless","amount_debt","marginBottom","surname","amount_accrued","salaryData","abrupt","Notify","failure","comment","filter","Boolean","updateSalary","salaryId","clearSalarySelected","Checkbox","Group","includes","cashless","getFieldValue","cash","readOnly","RangePicker","DatePicker","setDayOrePariod","setDateFromTitle","zvitIsLoading","setSelectedPeriod","setSelectedDateString","setTypeZvit","today","dayjs","salariesLoading","loading","Date","toISOString","dateFromExpense","setDateFromExpense","createZvitForPeriod","period","createZvitSelectedPeriod","getExpensesBySelectedPeriod","_ref3","getExpensesByDate","_x2","createSalaryZvitForPeriod","_ref4","_callee3","_context3","getSalarisByDate","_x3","defaultValue","dates","dateStrings","length","_funFormattedDate","funFormattedDate","formattedDates","isOneDay","locale","borderColor","ZvitReportTitle","CirclesWithBar","height","color","wrapperStyle","justifyContent","visible","ariaLabel","BsClipboardPulse","Divider","borderWidth","variant","BsEmojiHeartEyes","disabled","FaRegCalendarPlus","ExpenseContainer","SalarisForm","getZvitOneMonthTotal","choesData","_yield$axios$get","data","axios","get","params","sent","t0","console","error","StyledTable","Table","StyledCellNegative","StyledCell","indicatorsCurrentMonth","_indicatorsCurrentMon","profit","_indicatorsCurrentMon2","_indicatorsCurrentMon3","income","_indicatorsCurrentMon4","workedIncom","_indicatorsCurrentMon5","previousPeriodProfit","columns","key","dataIndex","render","onCell","_","index","rowSpan","dataSource","profitPrev","kasa","currentExpense","currentIncome","workedLessons","privatBank","monoBank","size","pagination","selectZvitSelectedPeriod","zvit","zvitSelectedPeriod","selectZvitLoadinge","expensZvitLoading","expenses","expensesData","setExpensesData","filters","setFilters","filteredData","applyFilters","uniqueDates","_toConsumableArray","Set","toLocaleDateString","_columns$find","_columns$find2","dateFilterKey","find","col","categoryFilterKey","text","onFilter","record","Space","icon","EditOutlined","getExpenseById","Popconfirm","QuestionCircleOutlined","onConfirm","deleteExpenseById","DeleteOutlined","amount_privat","amount_mono","totalCash","reduce","sum","item","totalPrivat","totalMono","push","salaryLoading","salaris","salariesData","setSalariesData","specialistFilterKey","fullName","transformValue","replace","specialist","getSalaryById","deleteSalaryById","salaryStatus","total","totalDebt","setIndicatorsCurrentMonth","setLoading","typeZvit","_useState7","_useState8","dateFromTitle","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","totalData","fetchZvitOneMonthTotal","now","startDate","endDate","_yield$getZvitOneMont","_totalData","getFullYear","getMonth","finish","isTotalDate","hasNonZeroValue","obj","Object","hasOwnProperty","call","Container","FinancialButtonContainer","ReportCurrentMonth","TableExpensesZvit","SalaryZvitTable"],"sourceRoot":""}