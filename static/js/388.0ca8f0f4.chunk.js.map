{"version":3,"file":"static/js/388.0ca8f0f4.chunk.js","mappings":"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","sources":["components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.styled.js","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.styled.js","components/Expense/ExpenseContainer.styled.js","redux/expense/expenceSelector.js","components/Expense/ExpenseContainer.jsx","ui/ZvitReportTitle/ZvitReportTitle.styled.js","ui/ZvitReportTitle/ZvitReportTitle.jsx","assets/constants/reusableFunctions.js","components/Zvit/Expenses/Expenses.jsx","redux/salary/salarySelector.js","components/SalarisForm/SalarisForm.js","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.jsx","redux/zvit/api.js","components/FinancialOffice/PeriodReport/PeriodReport.styled.js","components/FinancialOffice/PeriodReport/PeriodReport.jsx","redux/zvit/zvitSelector.js","components/Zvit/TableExpensesZvit/TableExpensesZvit.jsx","components/Zvit/Salary/SalaryZvitTable/SalaryZvitTable.jsx","components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperFinancialOffice = styled.div`\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 8px;\n  gap: 20px;\n  margin-bottom: 8px;\n`;\nexport const ContantLineWrapper = styled.div`\n  width: 100%;\n  max-width: 80%;\n  height: 100vh;\n  padding: 10px;\n`;\nexport const ZvitContainer = styled.div`\n  border: 1px solid var(--main-yellow);\n  padding: 7px;\n  border-radius: 15px;\n  margin-bottom: 30px;\n`;\n","import { Button } from 'antd';\nimport styled from 'styled-components';\nimport { btnStyledAll } from 'styles/GlobalStyles';\n\n// export const FinancialCommandTitle = styled.p`\n//   text-align: center;\n//   width: 100%;\n//   text-align: center;\n//   font-family: 'Roboto';\n//   font-size: 20px;\n//   font-weight: 400;\n//   padding-bottom: 5px;\n\n//   border-bottom: 2px solid var(--main-green);\n// `;\nexport const CommandLineWrapper = styled.div`\n  width: 100%;\n  max-width: 20%;\n  height: 100vh;\n  /* border: 2px solid var(--main-green); */\n  padding: 10px;\n`;\n\nexport const CommandLineButton = styled(Button)`\n  ${btnStyledAll}\n  background-color: var(--main-green);\n  &:hover {\n    background-color: var(--bg-main-color);\n  }\n\n  &:disabled {\n    background-color: var(--main-disabled);\n    color: var(--header-main-color);\n  }\n  & span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n  }\n  & svg {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DateTitle = styled.div`\n  margin-bottom: 30px;\n  padding-bottom: 20px;\n  text-align: center;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  border-bottom: 1px solid rgba(5, 5, 5, 0.06);\n`;\nexport const DateDescription = styled.span`\n  margin-left: 7px;\n  font-size: 18px;\n  color: var(--main-green);\n`;\nexport const ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 8px;\n  padding-top: 20px;\n  border-top: 1px solid rgba(5, 5, 5, 0.06);\n`;\n","export const selectExpense = state => state.expense.operetion;\nexport const selectExpenseByDate = state => state.expense.expensesPeriod;\nexport const selectExpenseLoading = state => state.expense.isloading;\nexport const selectZvitStatusExpense = state => state.expense.zvitStatus;\nexport const selectExpenseSelected = state => state.expense.expenseSelected;\n","import { Drawer, Form, InputNumber, Select, Input, Button, Radio } from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport { categoryExpense } from 'assets/constants/mainConstans';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addExpense, updateExpense } from 'redux/expense/expenseOperetion';\nimport { DateDescription, DateTitle } from './ExpenseContainer.styled';\nimport { selectExpenseSelected } from 'redux/expense/expenceSelector';\nimport { clearExpenseSelected } from 'redux/expense/expenseSlice';\n\nconst ExpenseContainer = ({\n  setOpen,\n  selectedPeriod,\n  open,\n  onCloseDrawerExpense,\n}) => {\n  const [form] = useForm();\n  const [paymentMethod, setPaymentMethod] = useState(null);\n  const dispatch = useDispatch();\n  const updateExpenseInfo = useSelector(selectExpenseSelected);\n\n  useEffect(() => {\n    if (updateExpenseInfo) {\n      setOpen(true);\n      form.setFieldsValue({\n        date: updateExpenseInfo.date\n          ? updateExpenseInfo.date.split('T')[0]\n          : selectedPeriod,\n        category: updateExpenseInfo.category || 'Інше',\n        amount: updateExpenseInfo.amount || null,\n        paymentForm: updateExpenseInfo.paymentForm || 'cash',\n        bank: updateExpenseInfo.bank || '',\n        description: updateExpenseInfo.description || '',\n      });\n      setPaymentMethod(updateExpenseInfo.paymentForm || 'cash');\n    }\n  }, [updateExpenseInfo, setOpen, form, selectedPeriod]);\n\n  return (\n    <>\n      <Drawer\n        title=\"Поточні витрати\"\n        placement=\"right\"\n        width={340}\n        onClose={onCloseDrawerExpense}\n        open={open}\n      >\n        <Form\n          form={form}\n          initialValues={{\n            date: null,\n            category: 'Інше',\n            amount: null,\n            paymentForm: 'cash',\n            bank: '',\n            description: '',\n          }}\n          onFinish={async values => {\n            if (updateExpenseInfo) {\n              const expenseData = { id: updateExpenseInfo._id, values };\n              await dispatch(updateExpense(expenseData)).then(async () => {\n                dispatch(clearExpenseSelected());\n                onCloseDrawerExpense();\n              });\n            } else {\n              if (values.paymentForm === 'cash') {\n                values.bank = '';\n              }\n              values.date = selectedPeriod;\n              await dispatch(addExpense(values)).then(() => {\n                onCloseDrawerExpense();\n              });\n            }\n          }}\n        >\n          <DateTitle>\n            Дата витрат: <DateDescription>{selectedPeriod}</DateDescription>\n          </DateTitle>\n\n          <Form.Item\n            label=\"Категорія витрат\"\n            name=\"category\"\n            rules={[{ required: true, message: 'Виберіть категорію' }]}\n          >\n            <Select>\n              {categoryExpense.map(expense => (\n                <Select.Option key={expense.category} value={expense.category}>\n                  {expense.title}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            rules={[{ required: true, message: 'Внесіть суму витрат' }]}\n            label=\"Сума\"\n            name=\"amount\"\n          >\n            <InputNumber style={{ width: '100%' }} placeholder=\"Вкажіть суму\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Форма оплати\"\n            name=\"paymentForm\"\n            onChange={e => {\n              if (e.target.value === 'cash') {\n                form.setFieldsValue({ bank: '' });\n              }\n            }}\n          >\n            <Radio.Group\n              onChange={e => {\n                setPaymentMethod(e.target.value);\n                if (e.target.value !== 'cashless') {\n                  form.setFieldsValue({ bank: undefined });\n                  form.resetFields(['bank', 'sum']);\n                }\n              }}\n            >\n              <Radio value=\"cash\">Готівка</Radio>\n              <Radio value=\"cashless\">Безготівкова</Radio>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item\n            rules={\n              paymentMethod === 'cashless' && [\n                { required: true, message: 'Оберіть банк' },\n              ]\n            }\n            label=\"Виберіть банк\"\n            name=\"bank\"\n            style={{ width: 250 }}\n          >\n            <Select>\n              <Select.Option value=\"PrivatBank\">ПриватБанк</Select.Option>\n              <Select.Option value=\"MonoBank\">Монобанк</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Опис витрат\" name=\"description\">\n            <Input.TextArea\n              placeholder=\"За потребою додайте опис\"\n              autoSize={{\n                minRows: 1,\n                maxRows: 5,\n              }}\n            />\n          </Form.Item>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              flexDirection: 'column',\n              gap: 8,\n            }}\n          >\n            <Button\n              style={{ width: '100%' }}\n              type=\"primary\"\n              onClick={onCloseDrawerExpense}\n              htmlType=\"button\"\n            >\n              Відмінити\n            </Button>\n            <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\">\n              Зберегти зміни\n            </Button>\n          </div>\n        </Form>\n      </Drawer>\n    </>\n  );\n};\n\nexport default ExpenseContainer;\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  width: 100%;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  text-align: center;\n  margin-bottom: 10px;\n  padding: 7px 0;\n  color: var(--main-green);\n  background-color: #e6f7ff;\n  border-radius: 10px;\n`;\n","import React from 'react';\nimport { Title } from './ZvitReportTitle.styled';\n\nconst ZvitReportTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default ZvitReportTitle;\n","// для звітів\nexport const formatDateTitle = (dayOrePariod, selectedDateString) => {\n  if (dayOrePariod === 'oneDay') {\n    return `Обороти за ${selectedDateString[0].split('-').reverse().join('-')}`;\n  } else {\n    return `Обороти з ${selectedDateString[0]\n      .split('-')\n      .reverse()\n      .join('-')} по ${selectedDateString[1].split('-').reverse().join('-')}`;\n  }\n};\n","import { formatDateTitle } from 'assets/constants/reusableFunctions';\nimport { CommandLineButton } from 'components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.styled';\nimport React from 'react';\nimport { BsClipboardPulse } from 'react-icons/bs';\nimport { CirclesWithBar } from 'react-loader-spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectExpenseLoading } from 'redux/expense/expenceSelector';\nimport { getExpensesByDate } from 'redux/expense/expenseOperetion';\n\nconst Expenses = ({\n  dayOrePariod,\n  selectedPeriod,\n  selectedDateString,\n  setDateFromTitle,\n}) => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectExpenseLoading);\n\n  const getExpensesBySelectedPeriod = async period => {\n    if (!period) return;\n\n    await dispatch(getExpensesByDate(period)).then(() =>\n      setDateFromTitle(formatDateTitle(dayOrePariod, selectedDateString))\n    );\n  };\n  return (\n    <>\n      <CommandLineButton\n        onClick={() => getExpensesBySelectedPeriod(selectedPeriod)}\n      >\n        {loading ? (\n          <CirclesWithBar\n            height=\"21\"\n            width=\"50\"\n            color=\"#ffffff\"\n            wrapperStyle={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            visible={true}\n            ariaLabel=\"circles-with-bar-loading\"\n          />\n        ) : (\n          <>\n            Розходи за період <BsClipboardPulse />\n          </>\n        )}\n      </CommandLineButton>\n    </>\n  );\n};\n\nexport default Expenses;\n","export const selectSalaryForPeriod = state => state.salary.salaryPeriod;\nexport const selectSalaryLoading = state => state.salary.isloading;\nexport const selectSalaryStatus = state => state.salary.salaryStatus;\nexport const selectSalarySelected = state => state.salary.salarySelected;\n","import {\n  Button,\n  Checkbox,\n  Drawer,\n  Form,\n  Input,\n  InputNumber,\n  Select,\n} from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport {\n  ButtonContainer,\n  DateDescription,\n  DateTitle,\n} from 'components/Expense/ExpenseContainer.styled';\nimport { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addExpense } from 'redux/expense/expenseOperetion';\nimport { updateSalary } from 'redux/salary/salaryOperetion';\nimport { selectSalarySelected } from 'redux/salary/salarySelector';\nimport { clearSalarySelected } from 'redux/salary/salarySlice';\n\nconst SalarisForm = ({ selectedPeriod }) => {\n  const [form] = useForm();\n  const dispatch = useDispatch();\n  const updateSalaryData = useSelector(selectSalarySelected);\n\n  const [open, setOpen] = useState(false);\n  const [paymentSelected, setPaymentSelected] = useState(null);\n\n  const onCloseDrawerSalary = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (updateSalaryData) {\n      setOpen(true);\n    }\n  }, [updateSalaryData]);\n\n  useEffect(() => {\n    if (updateSalaryData) {\n      setOpen(true);\n      // Встановлюємо початкові значення для форми\n      form.setFieldsValue({\n        amount_cash: null,\n        amount_cashless: null,\n        amount_debt: updateSalaryData?.amount_debt, // Початкове значення для заборгованості\n      });\n    }\n  }, [updateSalaryData, form]);\n\n  const currentDay = new Date().toISOString().split('T')[0];\n\n  const currentDayDescr = new Date()\n    .toLocaleDateString('uk-UA', {\n      day: '2-digit',\n      month: '2-digit',\n    })\n    .replace(/\\./g, '.');\n\n  return (\n    <Drawer\n      title=\"Виплата зарплати фахівцям\"\n      placement=\"right\"\n      width={340}\n      open={open}\n      onClose={onCloseDrawerSalary}\n    >\n      <DateTitle>\n        <p style={{ marginBottom: 15 }}>\n          Фахівець:\n          <DateDescription>{` ${updateSalaryData?.name}  ${updateSalaryData?.surname}`}</DateDescription>\n        </p>\n        <p>\n          Дата нарахування:\n          <DateDescription>{selectedPeriod}</DateDescription>\n        </p>\n        <p>\n          Дата виплати:\n          <DateDescription>{currentDay}</DateDescription>\n        </p>\n        <p>\n          Сума до виплати:\n          <DateDescription>{updateSalaryData?.amount_accrued}</DateDescription>\n        </p>\n      </DateTitle>\n\n      <Form\n        form={form}\n        initialValues={{\n          amount_cash: null,\n          amount_cashless: null,\n          amount_debt: updateSalaryData?.amount_debt,\n        }}\n        onFinish={async values => {\n          const totalPaid =\n            (values.amount_cash || 0) + (values.amount_cashless || 0);\n          if (totalPaid > updateSalaryData?.amount_debt) {\n            return Notify.failure('Сума виплати перевищує заборгованність!');\n          }\n          values.date = updateSalaryData.date;\n          values.comment = [\n            values.amount_cash ? `${values.amount_cash} грн` : null,\n            values.amount_cashless ? `${values.amount_cashless} грн` : null,\n            `виплачено ${currentDayDescr}`,\n          ]\n            .filter(Boolean)\n            .join(' ');\n\n          console.log('values', values);\n          const salaryData = { id: updateSalaryData._id, values };\n\n          await dispatch(updateSalary(salaryData)).then(() => {\n            onCloseDrawerSalary();\n            // Додаємо витрати\n            if (values.amount_cash > 0 || values.amount_cash < 0) {\n              dispatch(\n                addExpense({\n                  date: currentDay,\n                  category: `Зарплата ${updateSalaryData?.name} ${updateSalaryData?.surname}`,\n                  amount: values.amount_cash,\n                  paymentForm: 'cash',\n                  bank: '',\n                  description: `Нараховано ${\n                    updateSalaryData?.date.split('T')[0]\n                  }`,\n                })\n              );\n            }\n            if (values.amount_cashless > 0 || values.amount_cashless < 0) {\n              dispatch(\n                addExpense({\n                  date: currentDay,\n                  category: `Зарплата ${updateSalaryData?.name} ${updateSalaryData?.surname}`,\n                  amount: values.amount_cashless,\n                  paymentForm: 'cashless',\n                  bank: values.bank,\n                  description: `Нараховано ${\n                    updateSalaryData?.date.split('T')[0]\n                  }`,\n                })\n              );\n            }\n\n            form.resetFields();\n            dispatch(clearSalarySelected());\n          });\n        }}\n      >\n        <Form.Item label=\"Форма виплати\" name=\"paymentMethod\">\n          <Checkbox.Group\n            onChange={values => {\n              setPaymentSelected(values);\n              if (!values?.includes('cashless')) {\n                form.setFieldsValue({ bank: undefined });\n                form.resetFields(['bank']);\n              }\n            }}\n          >\n            <Checkbox value=\"cash\">Готівка</Checkbox>\n            <Checkbox value=\"cashless\">Безготівкова</Checkbox>\n          </Checkbox.Group>\n        </Form.Item>\n        {/* Поле для виплати готівкою */}\n        {paymentSelected?.includes('cash') && (\n          <Form.Item label=\"Сума готівкою\" name=\"amount_cash\">\n            <InputNumber\n              style={{ width: '100%' }}\n              placeholder=\"Сума готівкою\"\n              onChange={value => {\n                const cashless = form.getFieldValue('amount_cashless') || 0;\n                form.setFieldsValue({\n                  amount_debt:\n                    updateSalaryData?.amount_debt - (value || 0) - cashless,\n                });\n              }}\n            />\n          </Form.Item>\n        )}\n\n        {/* Поле для виплати безготівково */}\n        {paymentSelected?.includes('cashless') && (\n          <>\n            <Form.Item\n              label=\"Банк\"\n              name=\"bank\"\n              rules={[{ required: true, message: 'Оберіть банк' }]}\n            >\n              <Select>\n                <Select.Option value=\"PrivatBank\">ПриватБанк</Select.Option>\n                <Select.Option value=\"MonoBank\">Монобанк</Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item label=\"Сума безготівково\" name=\"amount_cashless\">\n              <InputNumber\n                style={{ width: '100%' }}\n                placeholder=\"Сума безготівково\"\n                onChange={value => {\n                  const cash = form.getFieldValue('amount_cash') || 0;\n                  form.setFieldsValue({\n                    amount_debt:\n                      updateSalaryData?.amount_debt - (value || 0) - cash,\n                  });\n                }}\n              />\n            </Form.Item>\n          </>\n        )}\n        <Form.Item label=\"Заборгованність\" name=\"amount_debt\">\n          <InputNumber style={{ width: '100%' }} readOnly />\n        </Form.Item>\n\n        <Form.Item label=\"Примітки\" name=\"comment\">\n          <Input.TextArea\n            placeholder=\"Інформація за потреби\"\n            autoSize={{\n              minRows: 1,\n              maxRows: 5,\n            }}\n          />\n        </Form.Item>\n        <ButtonContainer>\n          <Button\n            style={{ width: '100%' }}\n            type=\"primary\"\n            onClick={() => setOpen(false)}\n            htmlType=\"button\"\n          >\n            Відмінити\n          </Button>\n          <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\">\n            Зберегти зміни\n          </Button>\n        </ButtonContainer>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default SalarisForm;\n","import { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport { DatePicker } from 'antd';\nimport { FaRegCalendarPlus } from 'react-icons/fa';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/uk'; // Імпортуємо українську локаль\nimport locale from 'antd/es/date-picker/locale/uk_UA';\n\nimport { BsClipboardPulse, BsEmojiHeartEyes } from 'react-icons/bs';\n\nimport {\n  CommandLineButton,\n  CommandLineWrapper,\n} from './FinancialButtonContainer.styled';\n\nimport ExpenseContainer from 'components/Expense/ExpenseContainer';\nimport { createZvitSelectedPeriod } from 'redux/zvit/zvitOperetion';\nimport ZvitReportTitle from 'ui/ZvitReportTitle/ZvitReportTitle';\nimport { CirclesWithBar } from 'react-loader-spinner';\nimport Expenses from 'components/Zvit/Expenses/Expenses';\nimport { funFormattedDate } from 'assets/constants/transformation';\nimport { formatDateTitle } from 'assets/constants/reusableFunctions';\nimport { getSalarisByDate } from 'redux/salary/salaryOperetion';\nimport SalarisForm from 'components/SalarisForm/SalarisForm';\nconst { RangePicker } = DatePicker;\n\nconst FinancialButtonContainer = ({\n  dayOrePariod,\n  setDayOrePariod,\n  setDateFromTitle,\n  zvitIsLoading,\n  selectedPeriod,\n  setSelectedPeriod,\n  selectedDateString,\n  setSelectedDateString,\n}) => {\n  const dispatch = useDispatch();\n  const today = dayjs();\n\n  const [dateFromExpense, setDateFromExpense] = useState(\n    new Date().toISOString().split('T')[0]\n  );\n\n  const [open, setOpen] = useState(false);\n  const onCloseDrawerExpense = () => {\n    setOpen(false);\n  };\n\n  function selectDay(dates, dateStrings) {\n    if (!dates || dates.length === 0) return;\n    setDateFromExpense(dateStrings[0]);\n    setSelectedDateString(dateStrings);\n\n    const { formattedDates, isOneDay } = funFormattedDate(dates);\n\n    setSelectedPeriod(formattedDates);\n\n    setDayOrePariod(isOneDay ? 'oneDay' : 'period');\n  }\n\n  const createZvitForPeriod = async period => {\n    if (!period) return;\n\n    await dispatch(createZvitSelectedPeriod(period)).then(() =>\n      setDateFromTitle(formatDateTitle(dayOrePariod, selectedDateString))\n    );\n  };\n  const createSalaryZvitForPeriod = async period => {\n    if (!period) return;\n\n    await dispatch(getSalarisByDate(period)).then(() =>\n      setDateFromTitle(formatDateTitle(dayOrePariod, selectedDateString))\n    );\n  };\n\n  return (\n    <>\n      <CommandLineWrapper>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n          }}\n        >\n          <RangePicker\n            defaultValue={[today, today]}\n            onChange={selectDay}\n            locale={locale}\n            style={{ marginBottom: 20 }}\n          />\n          <ZvitReportTitle title=\"Фінансові показники:\" />\n          <CommandLineButton\n            onClick={() => createZvitForPeriod(selectedPeriod)}\n          >\n            <>\n              {zvitIsLoading ? (\n                <CirclesWithBar\n                  height=\"21\"\n                  width=\"50\"\n                  color=\"#ffffff\"\n                  wrapperStyle={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                  visible={true}\n                  ariaLabel=\"circles-with-bar-loading\"\n                />\n              ) : (\n                <>\n                  Обіг коштів за період <BsClipboardPulse />\n                </>\n              )}\n            </>\n          </CommandLineButton>\n          <Expenses\n            selectedPeriod={selectedPeriod}\n            dayOrePariod={dayOrePariod}\n            selectedDateString={selectedDateString}\n            setDateFromTitle={setDateFromTitle}\n          />\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n            marginTop: 35,\n          }}\n        >\n          <ZvitReportTitle title=\"Зарплата вчителів:\" />\n          <CommandLineButton\n            onClick={() => createSalaryZvitForPeriod(selectedPeriod)}\n          >\n            <>\n              За вибраний період <BsEmojiHeartEyes />\n            </>\n          </CommandLineButton>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n            marginTop: 35,\n          }}\n        >\n          <ZvitReportTitle title=\"Внесення розходів\" />\n          <CommandLineButton\n            onClick={() => setOpen(true)}\n            disabled={dayOrePariod === 'period'}\n          >\n            <>\n              Виберіть день <FaRegCalendarPlus />\n            </>\n          </CommandLineButton>\n          {/* <CommandLineButton\n            htmlType=\"button\"\n            disabled={dayOrePariod === 'period'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Виберіть день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                Внеси дохід <BsEmojiHeartEyes />\n              </>\n            )}\n          </CommandLineButton> */}\n          <ExpenseContainer\n            onCloseDrawerExpense={onCloseDrawerExpense}\n            open={open}\n            setOpen={setOpen}\n            selectedPeriod={dateFromExpense}\n          />\n          <SalarisForm selectedPeriod={dateFromExpense} />\n        </div>\n      </CommandLineWrapper>\n    </>\n  );\n};\n\nexport default FinancialButtonContainer;\n","import axios from 'axios';\n\nexport const getZvitOneMonthTotal = async choesData => {\n  try {\n    const { data } = await axios.get(`/zvit/one_month_total`, {\n      params: choesData,\n    });\n\n    return data;\n  } catch (err) {\n    console.error('❌ Error:', err.message);\n  }\n};\n","import styled from 'styled-components';\nimport { Table } from 'antd';\n\nexport const StyledTable = styled(Table)`\n  .ant-table {\n    font-size: 14px;\n  }\n\n  .ant-table-thead > tr > th {\n    background-color: #f0f2f5 !important; /* Колір фону заголовків */\n    font-weight: bold;\n    text-align: center;\n  }\n\n  .ant-table-tbody > tr > td {\n    text-align: center;\n  }\n\n  .ant-table-tbody > tr:hover {\n    background-color: #e6f7ff; /* Колір при наведенні */\n  }\n\n  .ant-table-row[data-row-key='balance'],\n  .ant-table-row[data-row-key='total'] {\n    font-size: 16px;\n    font-weight: 400;\n    background-color: #e6f7ff !important; /* Колір фону */\n    color: #1890ff; /* Колір тексту */\n    border-left: 10px;\n  }\n  .ant-btn-icon .anticon.anticon-delete > svg {\n    transition: all 0.05s cubic-bezier(0.645, 0.045, 0.355, 1);\n  }\n  .ant-btn-icon .anticon.anticon-delete > svg:hover {\n    fill: red;\n  }\n`;\nexport const StyledCellNegative = styled.span`\n  color: var(--main-red);\n`;\nexport const StyledCell = styled.span`\n  color: inherit;\n`;\n","import React from 'react';\nimport {\n  StyledCell,\n  StyledCellNegative,\n  StyledTable,\n} from './PeriodReport.styled';\n\nconst ReportCurrentMonth = ({ indicatorsCurrentMonth, loading }) => {\n  const {\n    profit = {},\n    expense = {},\n    income = {},\n    workedIncom = 0,\n    previousPeriodProfit = {},\n  } = indicatorsCurrentMonth;\n\n  const columns = [\n    {\n      key: '1',\n      title: 'Категорія',\n      dataIndex: 'category',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '2',\n      title: 'На початок періоду',\n      dataIndex: 'profitPrev',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '3',\n      title: 'Оплачені кошти',\n      dataIndex: 'currentIncome',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n\n    {\n      key: '4',\n      title: 'Відпрацьовано',\n      dataIndex: 'workedLessons',\n      onCell: (_, index) => {\n        if (index === 0) {\n          return { rowSpan: dataSource.length - 1 };\n        }\n        if (index === dataSource.length - 1) {\n          return { rowSpan: 1 };\n        }\n        return { rowSpan: 0 };\n      },\n    },\n    {\n      key: '5',\n      title: 'Поточні витрати',\n      dataIndex: 'currentExpense',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n\n    {\n      key: '6',\n      title: 'На кінець періоду ',\n      dataIndex: 'profit',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n  ];\n\n  const dataSource = [\n    {\n      key: 'cash',\n      category: 'Готівка',\n      profitPrev: previousPeriodProfit?.cash || 0,\n      profit: profit?.kasa || 0,\n      currentExpense: expense?.cash || 0,\n      currentIncome: income?.cash || 0,\n      workedLessons: workedIncom,\n    },\n    {\n      key: 'privat',\n      category: 'ПриватБанк',\n      profitPrev: previousPeriodProfit?.privatBank || 0,\n      profit: profit?.privatBank || 0,\n      currentExpense: expense?.privatBank || 0,\n      currentIncome: income?.privatBank || 0,\n      workedLessons: '',\n    },\n    {\n      key: 'mono',\n      category: 'МоноБанк',\n      profitPrev: previousPeriodProfit?.monoBank || 0,\n      profit: profit?.monoBank || 0,\n      currentExpense: expense?.monoBank || 0,\n      currentIncome: income?.monoBank || 0,\n      workedLessons: '',\n    },\n    {\n      key: 'balance',\n      category: 'Ітого:',\n      profitPrev: previousPeriodProfit?.amount || 0,\n      profit: profit?.amount || 0,\n      currentExpense: expense?.amount || 0,\n      currentIncome: income?.amount || 0,\n      workedLessons: workedIncom,\n    },\n  ];\n\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={loading}\n    />\n  );\n};\n\nexport default ReportCurrentMonth;\n","export const selectZvitSelectedPeriod = state => state.zvit.zvitSelectedPeriod;\nexport const selectZvitLoadinge = state => state.zvit.isloading;\nexport const selectZvitStatus = state => state.zvit.zvitStatus;\n","import { StyledTable } from 'components/FinancialOffice/PeriodReport/PeriodReport.styled';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Popconfirm, Space } from 'antd';\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  QuestionCircleOutlined,\n} from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteExpenseById,\n  getExpenseById,\n} from 'redux/expense/expenseOperetion';\n\nconst TableExpensesZvit = ({ expensZvitLoading, expenses }) => {\n  const dispatch = useDispatch();\n\n  const [expensesData, setExpensesData] = useState(expenses);\n  const [filters, setFilters] = useState({});\n\n  useEffect(() => {\n    const filteredData = applyFilters(expenses, filters);\n    setExpensesData(filteredData);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expenses, filters]);\n  const uniqueDates = [\n    ...new Set(\n      expenses.map(expense =>\n        new Date(expense.date).toLocaleDateString('uk-UA')\n      )\n    ),\n  ];\n\n  const applyFilters = (data, filters) => {\n    let filteredData = data;\n\n    const dateFilterKey = columns.find(col => col.dataIndex === 'date')?.key;\n    const categoryFilterKey = columns.find(\n      col => col.dataIndex === 'category'\n    )?.key;\n\n    if (filters[dateFilterKey] && filters[dateFilterKey].length) {\n      filteredData = filteredData.filter(expense =>\n        filters[dateFilterKey].includes(\n          new Date(expense.date).toLocaleDateString('uk-UA')\n        )\n      );\n    }\n\n    if (filters[categoryFilterKey] && filters[categoryFilterKey].length) {\n      filteredData = filteredData.filter(expense =>\n        filters[categoryFilterKey].includes(expense.category)\n      );\n    }\n\n    return filteredData;\n  };\n\n  const handleTableChange = (_, filters) => {\n    setFilters(filters);\n  };\n\n  const columns = [\n    {\n      key: '1',\n      title: 'Дата',\n      dataIndex: 'date',\n      filters: uniqueDates.map(date => ({ text: date, value: date })),\n      onFilter: (value, record) =>\n        record.key === 'total' || record.date === value,\n    },\n    {\n      key: '2',\n      title: 'Категорія',\n      dataIndex: 'category',\n      filters: [...new Set(expenses.map(expense => expense.category))].map(\n        category => ({ text: category, value: category })\n      ),\n      onFilter: (value, record) =>\n        record.key === 'total' || record.category === value,\n    },\n    {\n      key: '3',\n      title: 'Готівка',\n      dataIndex: 'amount_cash',\n    },\n    {\n      key: '4',\n      title: 'Приватбанк',\n      dataIndex: 'amount_privat',\n    },\n    {\n      key: '5',\n      title: 'Монобанк',\n      dataIndex: 'amount_mono',\n    },\n    {\n      key: '6',\n      title: 'Додаткова інформація',\n      dataIndex: 'description',\n    },\n    {\n      key: '7',\n      title: 'Дії',\n      dataIndex: 'actions',\n      render: (_, record) =>\n        record.key !== 'total' && (\n          <Space>\n            <Button\n              type=\"primary\"\n              icon={<EditOutlined />}\n              onClick={async () =>\n                await dispatch(getExpenseById(record.key)).then()\n              }\n            />\n            <Popconfirm\n              title=\"Видалення\"\n              description=\"Ви намагаєтесь видалити цю строчку. Продовжити?\"\n              icon={\n                <QuestionCircleOutlined\n                  style={{\n                    color: 'red',\n                  }}\n                />\n              }\n              onConfirm={() => {\n                dispatch(deleteExpenseById(record.key));\n              }}\n            >\n              <Button type=\"danger\" icon={<DeleteOutlined />} />\n            </Popconfirm>\n          </Space>\n        ),\n    },\n  ];\n\n  const dataSource = expensesData.map(expense => ({\n    key: expense._id,\n    date: new Date(expense.date).toLocaleDateString('uk-UA'),\n    category: expense.category,\n    amount_cash: expense.paymentForm === 'cash' ? expense.amount : '',\n    amount_privat:\n      expense.paymentForm === 'cashless' && expense.bank === 'PrivatBank'\n        ? expense.amount\n        : '',\n    amount_mono:\n      expense.paymentForm === 'cashless' && expense.bank === 'MonoBank'\n        ? expense.amount\n        : '',\n    description: expense.description,\n  }));\n\n  const totalCash = expensesData.reduce(\n    (sum, item) => sum + (item.paymentForm === 'cash' ? item.amount : 0),\n    0\n  );\n  const totalPrivat = expensesData.reduce(\n    (sum, item) =>\n      sum +\n      (item.paymentForm === 'cashless' && item.bank === 'PrivatBank'\n        ? item.amount\n        : 0),\n    0\n  );\n  const totalMono = expensesData.reduce(\n    (sum, item) =>\n      sum +\n      (item.paymentForm === 'cashless' && item.bank === 'MonoBank'\n        ? item.amount\n        : 0),\n    0\n  );\n\n  dataSource.push({\n    key: 'total',\n    date: 'Ітогом за період:',\n    category: '',\n    amount_cash: totalCash,\n    amount_privat: totalPrivat,\n    amount_mono: totalMono,\n    description: '',\n  });\n\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={expensZvitLoading}\n      onChange={handleTableChange}\n    />\n  );\n};\n\nexport default TableExpensesZvit;\n","import {\n  DeleteOutlined,\n  EditOutlined,\n  QuestionCircleOutlined,\n} from '@ant-design/icons';\nimport { Button, Popconfirm, Space } from 'antd';\nimport {\n  StyledCell,\n  StyledCellNegative,\n  StyledTable,\n} from 'components/FinancialOffice/PeriodReport/PeriodReport.styled';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteSalaryById, getSalaryById } from 'redux/salary/salaryOperetion';\n\nconst SalaryZvitTable = ({ salaryLoading, salaris }) => {\n  const dispatch = useDispatch();\n\n  const columns = [\n    {\n      key: '1',\n      title: 'Дата',\n      dataIndex: 'date',\n      // filters: uniqueDates.map(date => ({ text: date, value: date })),\n      // onFilter: (value, record) =>\n      //   record.key === 'total' || record.date === value,\n    },\n    {\n      key: '2',\n      title: 'Нараховано',\n      dataIndex: 'salaryStatus',\n      // filters: [...new Set(expenses.map(expense => expense.category))].map(\n      //   category => ({ text: category, value: category })\n      // ),\n      // onFilter: (value, record) =>\n      //   record.key === 'total' || record.category === value,\n    },\n    {\n      key: '3',\n      title: 'Фахівець',\n      dataIndex: 'specialist',\n    },\n    {\n      key: 'group',\n      title: 'Виплачено',\n      children: [\n        {\n          key: '4',\n          title: 'Готівка',\n          dataIndex: 'amount_cash',\n        },\n        {\n          key: '5',\n          title: 'Приватбанк',\n          dataIndex: 'amount_privat',\n        },\n        {\n          key: '6',\n          title: 'Монобанк',\n          dataIndex: 'amount_mono',\n        },\n      ],\n    },\n    {\n      key: '7',\n      title: 'Заборгованість',\n      dataIndex: 'amount_debt',\n      render: (value, record) => {\n        if (value < 0 && record.key !== 'total') {\n          return <StyledCellNegative>{value} (переплата) </StyledCellNegative>;\n        }\n\n        if (record.key === 'total') {\n          return <StyledCell>{value}</StyledCell>;\n        } else return <StyledCellNegative>{value}</StyledCellNegative>;\n      },\n    },\n    {\n      key: '8',\n      title: 'Додаткова інформація',\n      dataIndex: 'description',\n    },\n\n    {\n      key: '9',\n      title: 'Дії',\n      dataIndex: 'actions',\n      render: (_, record) =>\n        record.key !== 'total' && (\n          <Space>\n            <Popconfirm\n              title=\"Виплата зарплати\"\n              description=\"Нарахувати виплату?\"\n              icon={\n                <QuestionCircleOutlined\n                  style={{\n                    color: 'red',\n                  }}\n                />\n              }\n              onConfirm={async () => await dispatch(getSalaryById(record.key))}\n            >\n              <Button type=\"primary\" icon={<EditOutlined />} />\n            </Popconfirm>\n\n            <Popconfirm\n              title=\"Видалення\"\n              description=\"Ви намагаєтесь видалити цю строчку. Продовжити?\"\n              icon={\n                <QuestionCircleOutlined\n                  style={{\n                    color: 'red',\n                  }}\n                />\n              }\n              onConfirm={() => {\n                dispatch(deleteSalaryById(record.key));\n              }}\n            >\n              <Button type=\"danger\" icon={<DeleteOutlined />} />\n            </Popconfirm>\n          </Space>\n        ),\n    },\n  ];\n  const dataSource = salaris.map(salary => {\n    const {\n      _id,\n      date,\n      amount_accrued,\n      amount_cash,\n      amount_cashless,\n      amount_debt,\n      name,\n      surname,\n      bank,\n      comment,\n    } = salary;\n\n    return {\n      key: _id,\n      date: new Date(date).toLocaleDateString('uk-UA'),\n      salaryStatus: amount_accrued ? amount_accrued : '',\n      specialist: `${name} ${surname}`,\n      amount_cash: amount_cash ? amount_cash : '',\n      amount_privat:\n        amount_cashless && bank === 'PrivatBank' ? amount_cashless : '',\n      amount_mono:\n        amount_cashless && bank === 'MonoBank' ? amount_cashless : '',\n      amount_debt: amount_debt ? amount_debt : '',\n      description: comment,\n    };\n  });\n\n  const total = salaris.reduce(\n    (sum, item) => sum + (item.amount_accrued ? item.amount_accrued : 0),\n    0\n  );\n  const totalDebt = salaris.reduce(\n    (sum, item) => sum + (item.amount_debt ? item.amount_debt : 0),\n    0\n  );\n  const totalCash = salaris.reduce(\n    (sum, item) => sum + (item.amount_cash ? item.amount_cash : 0),\n    0\n  );\n  const totalPrivat = salaris.reduce(\n    (sum, item) =>\n      sum +\n      (item.amount_cashless && item.bank === 'PrivatBank'\n        ? item.amount_cashless\n        : 0),\n    0\n  );\n  const totalMono = salaris.reduce(\n    (sum, item) =>\n      sum +\n      (item.amount_cashless && item.bank === 'MonoBank'\n        ? item.amount_cashless\n        : 0),\n    0\n  );\n\n  dataSource.push({\n    key: 'total',\n    date: 'Ітогом за період:',\n    salaryStatus: total,\n    amount_cash: totalCash,\n    amount_privat: totalPrivat,\n    amount_mono: totalMono,\n    amount_debt: totalDebt,\n    description: '',\n  });\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={salaryLoading}\n      // onChange={handleTableChange}\n    />\n  );\n};\n\nexport default SalaryZvitTable;\n","import React, { useEffect, useState } from 'react';\nimport {\n  ContantLineWrapper,\n  WrapperFinancialOffice,\n  ZvitContainer,\n} from './FinancialLayout.styled';\nimport FinancialButtonContainer from '../FinancialButtonContainer/FinancialButtonContainer';\nimport Container from 'components/Container/Container';\nimport { getZvitOneMonthTotal } from 'redux/zvit/api';\nimport ReportCurrentMonth from '../PeriodReport/PeriodReport';\nimport { useSelector } from 'react-redux';\nimport {\n  selectExpense,\n  selectExpenseByDate,\n  selectExpenseLoading,\n  selectZvitStatusExpense,\n} from 'redux/expense/expenceSelector';\nimport {\n  selectZvitLoadinge,\n  selectZvitSelectedPeriod,\n  selectZvitStatus,\n} from 'redux/zvit/zvitSelector';\nimport ZvitReportTitle from 'ui/ZvitReportTitle/ZvitReportTitle';\nimport TableExpensesZvit from 'components/Zvit/TableExpensesZvit/TableExpensesZvit';\nimport SalaryZvitTable from 'components/Zvit/Salary/SalaryZvitTable/SalaryZvitTable';\nimport {\n  selectSalaryForPeriod,\n  selectSalaryLoading,\n} from 'redux/salary/salarySelector';\n\nconst FinancialLayout = () => {\n  const [indicatorsCurrentMonth, setIndicatorsCurrentMonth] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [typeZvit, setTypeZvit] = useState('');\n  const [dateFromTitle, setDateFromTitle] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState(null);\n  const [selectedDateString, setSelectedDateString] = useState(null);\n  const [dayOrePariod, setDayOrePariod] = useState('oneDay');\n\n  const expenseMarker = useSelector(selectExpense);\n  const { totalData } = useSelector(selectZvitSelectedPeriod);\n  const zvitIsLoading = useSelector(selectZvitLoadinge);\n  const expensZvitLoading = useSelector(selectExpenseLoading);\n  const { expenses } = useSelector(selectExpenseByDate);\n  const statusZvitPeriod = useSelector(selectZvitStatus);\n  const statusZvitExpense = useSelector(selectZvitStatusExpense);\n\n  const salaris = useSelector(selectSalaryForPeriod);\n  const salaryLoading = useSelector(selectSalaryLoading);\n\n  useEffect(() => {\n    if (statusZvitPeriod) {\n      setTypeZvit('report_for_period');\n    }\n    if (statusZvitExpense) {\n      setTypeZvit('expenses_by_period');\n    }\n  }, [statusZvitExpense, statusZvitPeriod]);\n\n  useEffect(() => {\n    const fetchZvitOneMonthTotal = async () => {\n      const now = new Date();\n\n      const startDate = new Date(now.getFullYear(), now.getMonth(), 1);\n      const endDate = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n      const formattedDates = {\n        startDate: startDate.toISOString(),\n        endDate: endDate.toISOString(),\n      };\n\n      try {\n        setLoading(true);\n        setTypeZvit('');\n\n        const { totalData } = await getZvitOneMonthTotal(formattedDates);\n        setIndicatorsCurrentMonth(totalData);\n      } catch (error) {\n        console.error('❌ Error fetching total profit:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchZvitOneMonthTotal();\n  }, [expenseMarker]);\n\n  return (\n    <Container>\n      <WrapperFinancialOffice>\n        <FinancialButtonContainer\n          dayOrePariod={dayOrePariod}\n          setDayOrePariod={setDayOrePariod}\n          setDateFromTitle={setDateFromTitle}\n          zvitIsLoading={zvitIsLoading}\n          selectedPeriod={selectedPeriod}\n          setSelectedPeriod={setSelectedPeriod}\n          selectedDateString={selectedDateString}\n          setSelectedDateString={setSelectedDateString}\n        />\n        <ContantLineWrapper>\n          <ZvitContainer>\n            <ZvitReportTitle title=\"Поточні цифри місяця\" />\n            <ReportCurrentMonth\n              loading={loading}\n              indicatorsCurrentMonth={indicatorsCurrentMonth}\n            />\n          </ZvitContainer>\n\n          {typeZvit === 'report_for_period' &&\n          totalData &&\n          Object.keys(totalData).length > 0 ? (\n            <ZvitContainer>\n              <ZvitReportTitle title={`${dateFromTitle}`} />\n              <ReportCurrentMonth\n                loading={zvitIsLoading}\n                indicatorsCurrentMonth={totalData}\n              />\n            </ZvitContainer>\n          ) : typeZvit === '' ||\n            typeZvit === 'expenses_by_period' ||\n            (totalData && Object.keys(totalData).length === 0) ? null : (\n            <>\n              <ZvitReportTitle title={`${dateFromTitle}`} />\n              <h4>Даних в обраному періоді немає</h4>\n            </>\n          )}\n          {(typeZvit === 'expenses_by_period' ||\n            statusZvitExpense === 'expenses_by_period') &&\n          expenses?.length > 0 ? (\n            <ZvitContainer>\n              <ZvitReportTitle title={`${dateFromTitle}`} />\n              <TableExpensesZvit\n                expensZvitLoading={expensZvitLoading}\n                expenses={expenses}\n              />\n            </ZvitContainer>\n          ) : typeZvit === '' || typeZvit === 'report_for_period' ? null : (\n            <>\n              <ZvitReportTitle title={`${dateFromTitle}`} />\n              <h4>Витрат в обраному періоді немає</h4>\n            </>\n          )}\n          <ZvitContainer>\n            <ZvitReportTitle title={`${dateFromTitle}`} />\n            <SalaryZvitTable salaris={salaris} salaryLoading={salaryLoading} />\n          </ZvitContainer>\n        </ContantLineWrapper>\n      </WrapperFinancialOffice>\n    </Container>\n  );\n};\n\nexport default FinancialLayout;\n"],"names":["WrapperFinancialOffice","styled","div","_templateObject","_taggedTemplateLiteral","ContantLineWrapper","_templateObject2","ZvitContainer","_templateObject3","CommandLineWrapper","CommandLineButton","Button","btnStyledAll","DateTitle","DateDescription","span","ButtonContainer","selectExpense","state","expense","operetion","selectExpenseByDate","expensesPeriod","selectExpenseLoading","isloading","selectZvitStatusExpense","zvitStatus","selectExpenseSelected","expenseSelected","_ref","setOpen","selectedPeriod","open","onCloseDrawerExpense","_useForm","useForm","form","_slicedToArray","_useState","useState","_useState2","paymentMethod","setPaymentMethod","dispatch","useDispatch","updateExpenseInfo","useSelector","useEffect","setFieldsValue","date","split","category","amount","paymentForm","bank","description","_jsx","_Fragment","children","Drawer","title","placement","width","onClose","_jsxs","Form","initialValues","onFinish","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","values","expenseData","wrap","_context2","prev","next","id","_id","updateExpense","then","_callee","_context","clearExpenseSelected","stop","addExpense","_x","apply","arguments","Item","label","name","rules","required","message","Select","categoryExpense","map","Option","value","InputNumber","style","placeholder","onChange","e","target","Radio","undefined","resetFields","Input","TextArea","autoSize","minRows","maxRows","display","alignItems","flexDirection","gap","type","onClick","htmlType","Title","h3","formatDateTitle","dayOrePariod","selectedDateString","concat","reverse","join","setDateFromTitle","loading","getExpensesBySelectedPeriod","period","abrupt","getExpensesByDate","CirclesWithBar","height","color","wrapperStyle","justifyContent","visible","ariaLabel","BsClipboardPulse","selectSalaryForPeriod","salary","salaryPeriod","selectSalaryLoading","selectSalarySelected","salarySelected","updateSalaryData","_useState3","_useState4","paymentSelected","setPaymentSelected","onCloseDrawerSalary","amount_cash","amount_cashless","amount_debt","currentDay","Date","toISOString","currentDayDescr","toLocaleDateString","day","month","replace","marginBottom","surname","amount_accrued","salaryData","Notify","failure","comment","filter","Boolean","console","log","updateSalary","clearSalarySelected","Checkbox","Group","includes","cashless","getFieldValue","cash","readOnly","RangePicker","DatePicker","setDayOrePariod","zvitIsLoading","setSelectedPeriod","setSelectedDateString","today","dayjs","dateFromExpense","setDateFromExpense","createZvitForPeriod","createZvitSelectedPeriod","createSalaryZvitForPeriod","_ref3","getSalarisByDate","_x2","defaultValue","dates","dateStrings","length","_funFormattedDate","funFormattedDate","formattedDates","isOneDay","locale","ZvitReportTitle","Expenses","marginTop","BsEmojiHeartEyes","disabled","FaRegCalendarPlus","ExpenseContainer","SalarisForm","getZvitOneMonthTotal","choesData","_yield$axios$get","data","axios","get","params","sent","t0","error","StyledTable","Table","StyledCellNegative","StyledCell","indicatorsCurrentMonth","_indicatorsCurrentMon","profit","_indicatorsCurrentMon2","_indicatorsCurrentMon3","income","_indicatorsCurrentMon4","workedIncom","_indicatorsCurrentMon5","previousPeriodProfit","columns","key","dataIndex","render","onCell","_","index","rowSpan","dataSource","profitPrev","kasa","currentExpense","currentIncome","workedLessons","privatBank","monoBank","size","pagination","selectZvitSelectedPeriod","zvit","zvitSelectedPeriod","selectZvitLoadinge","selectZvitStatus","expensZvitLoading","expenses","expensesData","setExpensesData","filters","setFilters","filteredData","applyFilters","uniqueDates","_toConsumableArray","Set","_columns$find","_columns$find2","dateFilterKey","find","col","categoryFilterKey","text","onFilter","record","Space","icon","EditOutlined","getExpenseById","Popconfirm","QuestionCircleOutlined","onConfirm","deleteExpenseById","DeleteOutlined","amount_privat","amount_mono","totalCash","reduce","sum","item","totalPrivat","totalMono","push","salaryLoading","salaris","getSalaryById","deleteSalaryById","salaryStatus","specialist","total","totalDebt","setIndicatorsCurrentMonth","setLoading","_useState5","_useState6","typeZvit","setTypeZvit","_useState7","_useState8","dateFromTitle","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","expenseMarker","totalData","statusZvitPeriod","statusZvitExpense","fetchZvitOneMonthTotal","now","startDate","endDate","_yield$getZvitOneMont","_totalData","getFullYear","getMonth","finish","Container","FinancialButtonContainer","ReportCurrentMonth","Object","keys","TableExpensesZvit","SalaryZvitTable"],"sourceRoot":""}