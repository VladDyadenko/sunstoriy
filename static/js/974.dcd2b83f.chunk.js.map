{"version":3,"file":"static/js/974.dcd2b83f.chunk.js","mappings":"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","sources":["ui/UpdateAvatar/UpdateAvatar.styled.js","ui/UpdateAvatar/UpdateAvatar.jsx","components/Teacher/Schemas/schema.js","components/Teacher/TeacherForm/TeacherForm.styled.js","components/Teacher/TeacherForm/TeacherForm.jsx","redux/teacher/api.js","page/TeacherPage/TeacherPage.jsx","redux/teacher/teacherSelector.js"],"sourcesContent":["import styled from 'styled-components';\nimport { BsFillFileEarmarkPersonFill } from 'react-icons/bs';\n\nexport const PreviewFotoContainer = styled.div`\n  width: 110px;\n  height: 110px;\n  background-color: #c0c0c0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n`;\nexport const UpdateFileButton = styled.button`\n  border-radius: 4px;\n  background-color: var(--main-dark-blue);\n  color: var(--header-main-color);\n  border-radius: 8px;\n  border: 1px solid transparent;\n  padding: 5px 10px;\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  font-size: 13px;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out,\n    border-color 0.3s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: var(--main-green);\n    border-color: var(--header-main-color);\n  }\n`;\nexport const FotoBlock = styled.div`\n  padding: 10px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const ImagePreview = styled.img`\n  display: block;\n  border-radius: 4px;\n`;\nexport const FotoIcon = styled(BsFillFileEarmarkPersonFill)`\n  width: 30px;\n  height: 30px;\n  fill: #808080;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n  FotoBlock,\n  FotoIcon,\n  ImagePreview,\n  PreviewFotoContainer,\n  UpdateFileButton,\n} from './UpdateAvatar.styled';\n\nfunction UpdateAvatar({ setFieldValue, avatar, fileName }) {\n  const fileRef = useRef(null);\n\n  const [preview, setPreview] = useState(avatar);\n  useEffect(() => {\n    setPreview(avatar);\n  }, [avatar]);\n  return (\n    <>\n      <input\n        type=\"file\"\n        hidden\n        ref={fileRef}\n        onChange={event => {\n          const selectedFile = event.target.files[0];\n          setFieldValue(`${fileName}`, selectedFile);\n          const reader = new FileReader();\n          reader.readAsDataURL(selectedFile);\n          reader.onload = () => {\n            setPreview(reader.result);\n          };\n        }}\n      />\n      <FotoBlock>\n        {preview ? (\n          <ImagePreview src={preview} alt=\"preview\" width={130} height={110} />\n        ) : (\n          <PreviewFotoContainer>\n            <FotoIcon />\n          </PreviewFotoContainer>\n        )}\n        <UpdateFileButton\n          type=\"button\"\n          onClick={() => {\n            fileRef.current.click();\n          }}\n        >\n          Додайте фото\n        </UpdateFileButton>\n      </FotoBlock>\n    </>\n  );\n}\n\nexport default UpdateAvatar;\n","import * as yup from 'yup';\n\nexport const initialValuesTeacherForm = {\n  name: '',\n  surname: '',\n  teacherImage: '',\n  phone: '',\n  email: '',\n  color: '',\n  about: '',\n  specialization: [],\n  salaryRate: Number,\n};\n\nexport const schemaTeacherUpdate = yup.object().shape({\n  name: yup\n    .string()\n    .required(\"Ім'я обов'язкове!\")\n    .min(2, 'Закоротке!')\n    .max(40, 'Задовге!'),\n  surname: yup.string().min(2, 'Закоротке!').max(40, 'Задовге!'),\n  price: yup.number(),\n  salaryRate: yup\n    .number()\n    .typeError('Вкажіть дані!')\n    .required(\"Ставка обов'язкова!\"),\n});\nexport const options = [\n  {\n    value: 'Спеціаліст з сенсорної інтеграції',\n    label: 'Спеціаліст з сенсорної інтеграції',\n  },\n  {\n    value: 'Психолог',\n    label: 'Психолог',\n  },\n  {\n    value: 'Логопед',\n    label: 'Логопед',\n  },\n  {\n    value: 'Корекційний педагог',\n    label: 'Корекційний педагог',\n  },\n  {\n    value: 'Педагог початкових класів',\n    label: 'Педагог початкових класів',\n  },\n  {\n    value: 'Вихователь',\n    label: 'Вихователь',\n  },\n  {\n    value: 'Підготовка до школи',\n    label: 'Підготовка до школи',\n  },\n  {\n    value: 'Реабілітолог',\n    label: 'Реабілітолог',\n  },\n];\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormTeacher = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 25px 15px 40px 15px;\n  width: 375px;\n\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n  @media (min-width: 1280px) {\n    width: 1280px;\n  }\n  @media (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\nexport const TeacherAddTitle = styled.p`\n  width: 100%;\n  font-family: 'RobotoSlab';\n\n  font-weight: 500;\n  font-size: 24px;\n  color: var(--main-green);\n  margin: 0;\n  text-align: center;\n`;\n\nexport const FormImgContainer = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 10px;\n\n  @media (min-width: 768px) {\n    gap: 30px;\n  }\n`;\nexport const NameFormTeacher = styled.div`\n  padding: 10px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: space-between;\n  width: 100%;\n  gap: 20px;\n`;\nexport const FieldTeacher = styled(Field)`\n  width: 100%;\n  height: 40px;\n  max-width: 400px;\n\n  padding: 12px 20px;\n  color: #2a2a2a;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: solid 2px var(--bg-main-color);\n  border-radius: 6px;\n  opacity: 0.8;\n  background-color: transparent;\n\n  &:focus-visible {\n    border: solid 2px var(--main-green);\n  }\n`;\nexport const ErrorInfo = styled.p`\n  color: red;\n`;\nexport const TextAreaTitle = styled.label`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 18px;\n  color: var(--main-green);\n  margin-bottom: 5px;\n  margin-top: 15px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    text-align: start;\n  }\n`;\nexport const ContactDescr = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  min-width: 130px;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 18px;\n  color: var(--main-green);\n  text-align: center;\n\n  @media (min-width: 768px) {\n    text-align: start;\n  }\n`;\n\nexport const ContactContainer = styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  gap: 10px;\n  text-align: center;\n  justify-content: start;\n`;\nexport const SelectDescr = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 18px;\n  color: var(--main-green);\n  text-align: center;\n\n  @media (min-width: 768px) {\n    text-align: start;\n  }\n`;\nexport const SelectContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: start;\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 10px;\n  }\n`;\n\nexport const FieldTextarea = styled(Field)`\n  width: 100%;\n  padding: 12px 20px;\n  color: #2a2a2a;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: solid 2px var(--bg-main-color);\n  border-radius: 6px;\n  opacity: 0.8;\n  background-color: transparent;\n  margin-bottom: 20px;\n\n  &:focus-visible {\n    border: solid 2px var(--main-green);\n  }\n`;\nexport const FormButton = styled.button`\n  border-radius: 4px;\n  margin: 0 auto;\n  width: 200px;\n  background-color: var(--bg-main-color);\n  color: var(--header-main-color);\n  border-radius: 8px;\n  border: 1px solid transparent;\n  padding: 10px 10px;\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  font-size: 18px;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out,\n    border-color 0.3s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: var(--main-green);\n    border-color: var(--header-main-color);\n  }\n`;\n\nexport const ColorWrapper = styled.div`\n  width: 100%;\n  max-width: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  gap: 10px;\n`;\n\nexport const FieldColor = styled(Field)`\n  width: 100px;\n  border-color: var(--main-green);\n  cursor: pointer;\n`;\n\nexport const FieldTeacherPhone = styled(Field)`\n  height: 40px;\n  width: 100%;\n  padding: 12px 20px;\n  color: #2a2a2a;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: solid 2px var(--bg-main-color);\n  border-radius: 6px;\n  opacity: 0.8;\n  background-color: transparent;\n\n  &:focus-visible {\n    border: solid 2px var(--main-green);\n  }\n\n  @media (min-width: 768px) {\n    max-width: 400px;\n    flex: 1;\n  }\n`;\nexport const TeacherPhoneTitle = styled.label`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  color: var(--main-green);\n\n  @media (min-width: 768px) {\n    width: 110px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { Select } from 'antd';\nimport {\n  initialValuesTeacherForm,\n  options,\n  schemaTeacherUpdate,\n} from '../Schemas/schema';\nimport {\n  ColorWrapper,\n  ContactContainer,\n  ContactDescr,\n  ErrorInfo,\n  FieldColor,\n  FieldTeacher,\n  FieldTeacherPhone,\n  FieldTextarea,\n  FormButton,\n  FormImgContainer,\n  FormTeacher,\n  NameFormTeacher,\n  SelectContainer,\n  SelectDescr,\n  TeacherAddTitle,\n  TextAreaTitle,\n} from './TeacherForm.styled';\nimport UpdateAvatar from 'ui/UpdateAvatar/UpdateAvatar';\nimport { addTeacher, updateTeacher } from 'redux/teacher/teacherOperetion';\nimport { selectTeacherOperetion } from 'redux/teacher/teacherSelector';\nimport ButtonLoader from 'ui/ButtonLoader/ButtonLoader';\n\nconst TeacherForm = ({ teacher }) => {\n  const [valuesTeacherForm, setValuesChildForm] = useState(\n    initialValuesTeacherForm\n  );\n  const [teacherImage, setTeacherImage] = useState('');\n  const [teacherSpecialization, setTeacherSpecialization] = useState([]);\n  const [color, setColor] = useState('#0456BA');\n  const [buttonView, setButtonView] = useState(true);\n\n  const operetion = useSelector(selectTeacherOperetion);\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const source = searchParams.get('source');\n  useEffect(() => {\n    if (source === 'buttonViewing') {\n      setButtonView(false);\n    }\n  }, [source]);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (teacher) {\n      const teacherData = {\n        name: teacher.name ? teacher.name : '',\n        surname: teacher.surname ? teacher.surname : '',\n        salaryRate: teacher.salaryRate ? teacher.salaryRate : '',\n        teacherImage: teacher.teacherImage ? teacher.teacherImage : '',\n        phone: teacher.phone ? teacher.phone : '',\n        email: teacher.email ? teacher.email : '',\n        color: teacher.color ? teacher.color : '#0456BA',\n        about: teacher.about ? teacher.about : '',\n        specialization:\n          teacher.specialization &&\n          teacher.specialization.length === 1 &&\n          teacher.specialization[0].trim() === ''\n            ? []\n            : teacher.specialization,\n      };\n      setValuesChildForm(teacherData);\n      setTeacherImage(teacherData.teacherImage);\n      setTeacherSpecialization(teacherData.specialization);\n      setColor(teacherData.color);\n    }\n  }, [teacher]);\n\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={valuesTeacherForm}\n        validationSchema={schemaTeacherUpdate}\n        onSubmit={values => {\n          if (buttonView) {\n            if (teacher) {\n              const id = teacher._id;\n              const combinedData = { id, values };\n              dispatch(updateTeacher(combinedData)).then(() => {\n                navigate('/teachers');\n              });\n            } else {\n              dispatch(addTeacher(values)).then(() => {\n                if (source === '/lesson') {\n                  navigate(-1);\n                } else navigate('/teachers');\n              });\n            }\n          } else {\n            navigate(-1);\n            setButtonView(true);\n          }\n        }}\n      >\n        {({ errors, touched, values, setFieldValue }) => (\n          <FormTeacher>\n            <TeacherAddTitle>Картка фахівця</TeacherAddTitle>\n            <FormImgContainer>\n              <UpdateAvatar\n                avatar={teacherImage}\n                fileName=\"teacherImage\"\n                setFieldValue={setFieldValue}\n              />\n              <NameFormTeacher>\n                <FieldTeacher name=\"name\" type=\"text\" placeholder=\"Ім'я\" />\n                {touched.name && errors.name && (\n                  <ErrorInfo>{errors.name}</ErrorInfo>\n                )}\n\n                <FieldTeacher\n                  name=\"surname\"\n                  type=\"text\"\n                  placeholder=\"Фамілія\"\n                />\n                {errors.surname && <ErrorInfo>{errors.surname}</ErrorInfo>}\n                <ColorWrapper>\n                  <TextAreaTitle>Колір для розкладу:</TextAreaTitle>\n                  <FieldColor\n                    name=\"color\"\n                    type=\"color\"\n                    value={color}\n                    onChange={event => {\n                      const selectedColor = event.target.value;\n                      setColor(selectedColor);\n                      setFieldValue('color', selectedColor);\n                    }}\n                  />\n                </ColorWrapper>\n              </NameFormTeacher>\n            </FormImgContainer>\n            <ContactContainer>\n              <ContactDescr>Телефон:</ContactDescr>\n              <FieldTeacherPhone\n                name=\"phone\"\n                type=\"tel\"\n                autoComplete=\"off\"\n                placeholder=\"+380(__)___ __ __\"\n              />\n            </ContactContainer>\n            <ContactContainer>\n              <ContactDescr>e-mail:</ContactDescr>\n              <FieldTeacherPhone\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"off\"\n                placeholder=\"example@example.com\"\n              />\n            </ContactContainer>\n            <ContactContainer>\n              <ContactDescr>Зарплата</ContactDescr>\n              <FieldTeacherPhone\n                name=\"salaryRate\"\n                type=\"number\"\n                autoComplete=\"off\"\n                placeholder=\"вкажіть ставку\"\n              />\n            </ContactContainer>\n            {touched.salaryRate && errors.salaryRate && (\n              <ErrorInfo>{errors.salaryRate}</ErrorInfo>\n            )}\n            <SelectContainer>\n              <SelectDescr>Спеціалізація:</SelectDescr>\n              <Select\n                mode=\"multiple\"\n                style={{\n                  width: '100%',\n                  maxWidth: '400px',\n                  marginTop: '10px',\n                  border: '2px solid #68bf48',\n                  borderRadius: '8px',\n                }}\n                value={teacherSpecialization}\n                onChange={e => {\n                  setTeacherSpecialization(e);\n                  setFieldValue(\n                    'specialization',\n                    e ? e : teacherSpecialization\n                  );\n                }}\n                options={options}\n              />\n            </SelectContainer>\n\n            <TextAreaTitle>Додаткова інформація:</TextAreaTitle>\n            <FieldTextarea name=\"about\" component=\"textarea\" rows={6} />\n\n            <FormButton type=\"submit\">\n              {operetion === 'addTeacher' ? (\n                <ButtonLoader height=\"21\" width=\"50\" />\n              ) : buttonView ? (\n                'Зберегти зміни'\n              ) : (\n                'Назад'\n              )}\n            </FormButton>\n          </FormTeacher>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default TeacherForm;\n","import { axiosWithAuth } from 'api/api.interceptors';\n\nexport const getTeacherById = async id => {\n  try {\n    const { data } = await axiosWithAuth.get(`/teacher/teacher/${id}`);\n    return data;\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n","import { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport TeacherForm from 'components/Teacher/TeacherForm/TeacherForm';\nimport { useEffect, useState } from 'react';\nimport { getTeacherById } from 'redux/teacher/api';\n\nconst TeacherPage = () => {\n  const [teacher, setTeacher] = useState('');\n  const { teacherId } = useParams();\n  useEffect(() => {\n    if (!teacherId) {\n      return;\n    }\n    async function fetchTeachers() {\n      try {\n        const teacher = await getTeacherById(teacherId);\n        if (!teacher) {\n          return;\n        }\n        setTeacher(teacher);\n      } catch (err) {\n        Notify.failure('Child not found');\n      }\n    }\n    fetchTeachers();\n  }, [teacherId]);\n  return (\n    <>\n      <TeacherForm teacher={teacher} />\n    </>\n  );\n};\n\nexport default TeacherPage;\n","export const selectTeachers = state => state.teachers.teacher;\nexport const selectTeacherOperetion = state => state.teachers.operetion;\n"],"names":["PreviewFotoContainer","styled","div","UpdateFileButton","button","FotoBlock","ImagePreview","img","FotoIcon","BsFillFileEarmarkPersonFill","_ref","setFieldValue","avatar","fileName","fileRef","useRef","preview","setPreview","useState","useEffect","_jsxs","_Fragment","children","_jsx","type","hidden","ref","onChange","event","selectedFile","target","files","reader","FileReader","readAsDataURL","onload","result","src","alt","width","height","onClick","current","click","initialValuesTeacherForm","name","surname","teacherImage","phone","email","color","about","specialization","salaryRate","Number","schemaTeacherUpdate","yup","shape","required","min","max","price","typeError","options","value","label","FormTeacher","Form","TeacherAddTitle","p","FormImgContainer","NameFormTeacher","FieldTeacher","Field","ErrorInfo","TextAreaTitle","ContactDescr","ContactContainer","SelectDescr","SelectContainer","FieldTextarea","FormButton","ColorWrapper","FieldColor","FieldTeacherPhone","teacher","valuesTeacherForm","setValuesChildForm","setTeacherImage","teacherSpecialization","setTeacherSpecialization","setColor","buttonView","setButtonView","operetion","useSelector","selectTeacherOperetion","location","useLocation","source","URLSearchParams","search","get","dispatch","useDispatch","navigate","useNavigate","teacherData","length","trim","Formik","enableReinitialize","initialValues","validationSchema","onSubmit","values","combinedData","id","_id","updateTeacher","then","addTeacher","_ref2","errors","touched","UpdateAvatar","placeholder","selectedColor","autoComplete","Select","mode","style","maxWidth","marginTop","border","borderRadius","e","component","rows","ButtonLoader","TeacherPage","setTeacher","teacherId","useParams","async","data","axiosWithAuth","err","console","log","message","getTeacherById","Notify","failure","fetchTeachers","TeacherForm","selectTeachers","state","teachers"],"sourceRoot":""}