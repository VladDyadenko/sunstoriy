{"version":3,"file":"static/js/83.ca94e700.chunk.js","mappings":"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","sources":["components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.styled.js","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.styled.js","components/Expense/ExpenseContainer.styled.js","redux/expense/expenceSelector.js","components/Expense/ExpenseContainer.jsx","ui/ZvitReportTitle/ZvitReportTitle.styled.js","ui/ZvitReportTitle/ZvitReportTitle.jsx","components/Zvit/Expenses/Expenses.jsx","components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.jsx","redux/zvit/api.js","components/FinancialOffice/PeriodReport/PeriodReport.styled.js","components/FinancialOffice/PeriodReport/PeriodReport.jsx","redux/zvit/zvitSelector.js","components/Zvit/TableExpensesZvit/TableExpensesZvit.jsx","components/FinancialOffice/FinancialOfficeLayout/FinancialLayout.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperFinancialOffice = styled.div`\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 8px;\n  gap: 20px;\n  margin-bottom: 8px;\n`;\nexport const ContantLineWrapper = styled.div`\n  width: 100%;\n  max-width: 80%;\n  height: 100vh;\n  padding: 10px;\n`;\nexport const ZvitContainer = styled.div`\n  border: 1px solid var(--main-yellow);\n  padding: 7px;\n  border-radius: 15px;\n  margin-bottom: 30px;\n`;\n","import { Button } from 'antd';\nimport styled from 'styled-components';\nimport { btnStyledAll } from 'styles/GlobalStyles';\n\n// export const FinancialCommandTitle = styled.p`\n//   text-align: center;\n//   width: 100%;\n//   text-align: center;\n//   font-family: 'Roboto';\n//   font-size: 20px;\n//   font-weight: 400;\n//   padding-bottom: 5px;\n\n//   border-bottom: 2px solid var(--main-green);\n// `;\nexport const CommandLineWrapper = styled.div`\n  width: 100%;\n  max-width: 20%;\n  height: 100vh;\n  /* border: 2px solid var(--main-green); */\n  padding: 10px;\n`;\n\nexport const CommandLineButton = styled(Button)`\n  ${btnStyledAll}\n  background-color: var(--main-green);\n  &:hover {\n    background-color: var(--bg-main-color);\n  }\n\n  &:disabled {\n    background-color: var(--main-disabled);\n    color: var(--header-main-color);\n  }\n  & span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n  }\n  & svg {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DateTitle = styled.div`\n  margin-bottom: 20px;\n  text-align: center;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 14px;\n`;\nexport const DateDescription = styled.p`\n  color: var(--main-green);\n`;\n","export const selectExpense = state => state.expense.operetion;\nexport const selectExpenseByDate = state => state.expense.expensesPeriod;\nexport const selectExpenseLoading = state => state.expense.isloading;\nexport const selectZvitStatusExpense = state => state.expense.zvitStatus;\nexport const selectExpenseSelected = state => state.expense.expenseSelected;\n","import { Drawer, Form, InputNumber, Select, Input, Button, Radio } from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport { categoryExpense } from 'assets/constants/mainConstans';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addExpense, updateExpense } from 'redux/expense/expenseOperetion';\nimport { DateDescription, DateTitle } from './ExpenseContainer.styled';\nimport { selectExpenseSelected } from 'redux/expense/expenceSelector';\nimport { clearExpenseSelected } from 'redux/expense/expenseSlice';\n\nconst ExpenseContainer = ({\n  setOpen,\n  selectedPeriod,\n  open,\n  onCloseDrawerExpense,\n}) => {\n  const [form] = useForm();\n  const [paymentMethod, setPaymentMethod] = useState(null);\n  const dispatch = useDispatch();\n  const updateExpenseInfo = useSelector(selectExpenseSelected);\n\n  useEffect(() => {\n    if (updateExpenseInfo) {\n      setOpen(true);\n      form.setFieldsValue({\n        date: updateExpenseInfo.date\n          ? updateExpenseInfo.date.split('T')[0]\n          : selectedPeriod,\n        category: updateExpenseInfo.category || 'Інше',\n        amount: updateExpenseInfo.amount || null,\n        paymentForm: updateExpenseInfo.paymentForm || 'cash',\n        bank: updateExpenseInfo.bank || '',\n        description: updateExpenseInfo.description || '',\n      });\n      setPaymentMethod(updateExpenseInfo.paymentForm || 'cash');\n    }\n  }, [updateExpenseInfo, setOpen, form, selectedPeriod]);\n\n  return (\n    <>\n      <Drawer\n        title=\"Поточні витрати\"\n        placement=\"right\"\n        width={340}\n        onClose={onCloseDrawerExpense}\n        open={open}\n      >\n        <Form\n          form={form}\n          initialValues={{\n            date: null,\n            category: 'Інше',\n            amount: null,\n            paymentForm: 'cash',\n            bank: '',\n            description: '',\n          }}\n          onFinish={async values => {\n            if (updateExpenseInfo) {\n              const expenseData = { id: updateExpenseInfo._id, values };\n              await dispatch(updateExpense(expenseData)).then(async () => {\n                dispatch(clearExpenseSelected());\n                onCloseDrawerExpense();\n              });\n            } else {\n              if (values.paymentForm === 'cash') {\n                values.bank = '';\n              }\n              values.date = selectedPeriod;\n              await dispatch(addExpense(values)).then(() => {\n                onCloseDrawerExpense();\n              });\n            }\n          }}\n        >\n          <DateTitle>\n            Дата витрат: <DateDescription>{selectedPeriod}</DateDescription>\n          </DateTitle>\n\n          <Form.Item\n            label=\"Категорія витрат\"\n            name=\"category\"\n            rules={[{ required: true, message: 'Виберіть категорію' }]}\n          >\n            <Select>\n              {categoryExpense.map(expense => (\n                <Select.Option key={expense.category} value={expense.category}>\n                  {expense.title}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            rules={[{ required: true, message: 'Внесіть суму витрат' }]}\n            label=\"Сума\"\n            name=\"amount\"\n          >\n            <InputNumber style={{ width: '100%' }} placeholder=\"Вкажіть суму\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Форма оплати\"\n            name=\"paymentForm\"\n            onChange={e => {\n              if (e.target.value === 'cash') {\n                form.setFieldsValue({ bank: '' });\n              }\n            }}\n          >\n            <Radio.Group\n              onChange={e => {\n                setPaymentMethod(e.target.value);\n                if (e.target.value !== 'cashless') {\n                  form.setFieldsValue({ bank: undefined });\n                  form.resetFields(['bank', 'sum']);\n                }\n              }}\n            >\n              <Radio value=\"cash\">Готівка</Radio>\n              <Radio value=\"cashless\">Безготівкова</Radio>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item\n            rules={\n              paymentMethod === 'cashless' && [\n                { required: true, message: 'Оберіть банк' },\n              ]\n            }\n            label=\"Виберіть банк\"\n            name=\"bank\"\n            style={{ width: 250 }}\n          >\n            <Select>\n              <Select.Option value=\"PrivatBank\">ПриватБанк</Select.Option>\n              <Select.Option value=\"MonoBank\">Монобанк</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"Опис витрат\" name=\"description\">\n            <Input.TextArea\n              placeholder=\"За потребою додайте опис\"\n              autoSize={{\n                minRows: 1,\n                maxRows: 5,\n              }}\n            />\n          </Form.Item>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              flexDirection: 'column',\n              gap: 8,\n            }}\n          >\n            <Button\n              style={{ width: '100%' }}\n              type=\"primary\"\n              onClick={onCloseDrawerExpense}\n              htmlType=\"button\"\n            >\n              Відмінити\n            </Button>\n            <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\">\n              Зберегти зміни\n            </Button>\n          </div>\n        </Form>\n      </Drawer>\n    </>\n  );\n};\n\nexport default ExpenseContainer;\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  width: 100%;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  text-align: center;\n  margin-bottom: 10px;\n  padding: 7px 0;\n  color: var(--main-green);\n  background-color: #e6f7ff;\n  border-radius: 10px;\n`;\n","import React from 'react';\nimport { Title } from './ZvitReportTitle.styled';\n\nconst ZvitReportTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nexport default ZvitReportTitle;\n","import { CommandLineButton } from 'components/FinancialOffice/FinancialButtonContainer/FinancialButtonContainer.styled';\nimport React from 'react';\nimport { BsClipboardPulse } from 'react-icons/bs';\nimport { FaRegCalendarPlus } from 'react-icons/fa';\nimport { CirclesWithBar } from 'react-loader-spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectExpenseLoading } from 'redux/expense/expenceSelector';\nimport { getExpensesByDate } from 'redux/expense/expenseOperetion';\n\nconst Expenses = ({\n  dayOrePariod,\n  selectedPeriod,\n  selectedDateString,\n  setDateFromTitle,\n}) => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectExpenseLoading);\n\n  const getExpensesBySelectedPeriod = async period => {\n    if (!period) return;\n\n    try {\n      await dispatch(getExpensesByDate(period)).then(() =>\n        setDateFromTitle(\n          dayOrePariod === 'oneDay'\n            ? `Розходи за ${selectedDateString[0]\n                .split('-')\n                .reverse()\n                .join('-')}`\n            : `Розходи з ${selectedDateString[0]\n                .split('-')\n                .reverse()\n                .join('-')} по ${selectedDateString[1]\n                .split('-')\n                .reverse()\n                .join('-')}`\n        )\n      );\n    } catch (err) {\n      console.error('❌ Error fetching expenses:', err);\n    }\n  };\n  return (\n    <>\n      <CommandLineButton\n        onClick={() => getExpensesBySelectedPeriod(selectedPeriod)}\n        disabled={dayOrePariod === 'period'}\n      >\n        {dayOrePariod === 'period' ? (\n          <>\n            Розходи за день <FaRegCalendarPlus />\n          </>\n        ) : (\n          <>\n            {loading ? (\n              <CirclesWithBar\n                height=\"21\"\n                width=\"50\"\n                color=\"#ffffff\"\n                wrapperStyle={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                visible={true}\n                ariaLabel=\"circles-with-bar-loading\"\n              />\n            ) : (\n              <>\n                Розходи за день <BsClipboardPulse />\n              </>\n            )}\n          </>\n        )}\n      </CommandLineButton>\n      <CommandLineButton\n        onClick={() => getExpensesBySelectedPeriod(selectedPeriod)}\n        disabled={dayOrePariod === 'oneDay'}\n      >\n        {dayOrePariod === 'period' ? (\n          <>\n            {loading ? (\n              <CirclesWithBar\n                height=\"21\"\n                width=\"50\"\n                color=\"#ffffff\"\n                wrapperStyle={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                visible={true}\n                ariaLabel=\"circles-with-bar-loading\"\n              />\n            ) : (\n              <>\n                Розходи за період <BsClipboardPulse />\n              </>\n            )}\n          </>\n        ) : (\n          <>\n            Розходи за період\n            <FaRegCalendarPlus />\n          </>\n        )}\n      </CommandLineButton>\n    </>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\nimport { DatePicker } from 'antd';\nimport { FaRegCalendarPlus } from 'react-icons/fa';\nimport 'dayjs/locale/uk'; // Імпортуємо українську локаль\nimport locale from 'antd/es/date-picker/locale/uk_UA';\n\nimport {\n  BsClipboardPulse,\n  BsEmojiHeartEyes,\n  BsEmojiFrown,\n} from 'react-icons/bs';\n\nimport {\n  CommandLineButton,\n  CommandLineWrapper,\n} from './FinancialButtonContainer.styled';\n\nimport dayjs from 'dayjs';\nimport ExpenseContainer from 'components/Expense/ExpenseContainer';\nimport { useDispatch } from 'react-redux';\nimport { createZvitSelectedPeriod } from 'redux/zvit/zvitOperetion';\nimport ZvitReportTitle from 'ui/ZvitReportTitle/ZvitReportTitle';\nimport { CirclesWithBar } from 'react-loader-spinner';\nimport Expenses from 'components/Zvit/Expenses/Expenses';\nconst { RangePicker } = DatePicker;\n\nconst FinancialButtonContainer = ({\n  dayOrePariod,\n  setDayOrePariod,\n  setDateFromTitle,\n  zvitIsLoading,\n  selectedPeriod,\n  setSelectedPeriod,\n  selectedDateString,\n  setSelectedDateString,\n}) => {\n  const dispatch = useDispatch();\n  const today = dayjs();\n\n  const [dateFromExpense, setDateFromExpense] = useState(\n    new Date().toISOString().split('T')[0]\n  );\n\n  const [open, setOpen] = useState(false);\n  const onCloseDrawerExpense = () => {\n    setOpen(false);\n  };\n\n  function selectDay(dates, dateStrings) {\n    if (!dates || dates.length === 0) return;\n    setDateFromExpense(dateStrings[0]);\n    setSelectedDateString(dateStrings);\n\n    // Отримуємо дати у форматі JavaScript Date\n    const startDate = new Date(dates[0].toDate());\n    const endDate = new Date(dates[1].toDate());\n\n    // Обнуляємо години для початку дня\n    startDate.setUTCHours(0, 0, 0, 0);\n    endDate.setUTCHours(23, 59, 59, 999);\n\n    const isOneDay =\n      startDate.getUTCFullYear() === endDate.getUTCFullYear() &&\n      startDate.getUTCMonth() === endDate.getUTCMonth() &&\n      startDate.getUTCDate() === endDate.getUTCDate();\n\n    // Форматуємо для бекенду\n    const formattedDates = {\n      startDate: startDate.toISOString(), // 2025-02-01T00:00:00.000Z\n      endDate: endDate.toISOString(), // 2025-02-08T23:59:59.999Z\n    };\n    setSelectedPeriod(formattedDates);\n\n    setDayOrePariod(isOneDay ? 'oneDay' : 'period');\n  }\n\n  const createZvitForPeriod = async period => {\n    if (!period) return;\n\n    try {\n      await dispatch(createZvitSelectedPeriod(period)).then(() =>\n        setDateFromTitle(\n          dayOrePariod === 'oneDay'\n            ? `Обороти за ${selectedDateString[0]\n                .split('-')\n                .reverse()\n                .join('-')}`\n            : `Обороти з ${selectedDateString[0]\n                .split('-')\n                .reverse()\n                .join('-')} по ${selectedDateString[1]\n                .split('-')\n                .reverse()\n                .join('-')}`\n        )\n      );\n    } catch (error) {\n      console.error('❌ Error fetching total profit:', error);\n    }\n  };\n\n  return (\n    <>\n      <CommandLineWrapper>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n          }}\n        >\n          <ZvitReportTitle title=\"Фінансові показники:\" />\n          <RangePicker\n            defaultValue={[today, today]}\n            onChange={selectDay}\n            locale={locale}\n          />\n\n          <CommandLineButton\n            onClick={() => createZvitForPeriod(selectedPeriod)}\n            disabled={dayOrePariod === 'period'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Звіт за день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                {zvitIsLoading ? (\n                  <CirclesWithBar\n                    height=\"21\"\n                    width=\"50\"\n                    color=\"#ffffff\"\n                    wrapperStyle={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                    visible={true}\n                    ariaLabel=\"circles-with-bar-loading\"\n                  />\n                ) : (\n                  <>\n                    Звіт за день <BsClipboardPulse />\n                  </>\n                )}\n              </>\n            )}\n          </CommandLineButton>\n\n          <CommandLineButton\n            onClick={() => createZvitForPeriod(selectedPeriod)}\n            disabled={dayOrePariod === 'oneDay'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                {zvitIsLoading ? (\n                  <CirclesWithBar\n                    height=\"21\"\n                    width=\"50\"\n                    color=\"#ffffff\"\n                    wrapperStyle={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                    visible={true}\n                    ariaLabel=\"circles-with-bar-loading\"\n                  />\n                ) : (\n                  <>\n                    Звіт за період <BsClipboardPulse />\n                  </>\n                )}\n              </>\n            ) : (\n              <>\n                Звіт за період\n                <FaRegCalendarPlus />\n              </>\n            )}\n          </CommandLineButton>\n          <Expenses\n            selectedPeriod={selectedPeriod}\n            dayOrePariod={dayOrePariod}\n            selectedDateString={selectedDateString}\n            setDateFromTitle={setDateFromTitle}\n          />\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n            marginTop: 35,\n          }}\n        >\n          <ZvitReportTitle title=\"Зарплата вчителів:\" />\n          <CommandLineButton disabled={dayOrePariod === 'period'}>\n            {dayOrePariod === 'period' ? (\n              <>\n                День <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                День <BsEmojiHeartEyes />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton disabled={dayOrePariod === 'oneDay'}>\n            {dayOrePariod === 'period' ? (\n              <>\n                Період <BsEmojiHeartEyes />\n              </>\n            ) : (\n              <>\n                Період <FaRegCalendarPlus />\n              </>\n            )}\n          </CommandLineButton>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 10,\n            marginTop: 35,\n          }}\n        >\n          <ZvitReportTitle title=\"Внесення розходів\" />\n          <CommandLineButton\n            onClick={() => setOpen(true)}\n            disabled={dayOrePariod === 'period'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Виберіть день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                Додай витрати <BsEmojiFrown />\n              </>\n            )}\n          </CommandLineButton>\n          <CommandLineButton\n            htmlType=\"button\"\n            disabled={dayOrePariod === 'period'}\n          >\n            {dayOrePariod === 'period' ? (\n              <>\n                Виберіть день <FaRegCalendarPlus />\n              </>\n            ) : (\n              <>\n                Внеси дохід <BsEmojiHeartEyes />\n              </>\n            )}\n          </CommandLineButton>\n          <ExpenseContainer\n            onCloseDrawerExpense={onCloseDrawerExpense}\n            open={open}\n            setOpen={setOpen}\n            selectedPeriod={dateFromExpense}\n          />\n        </div>\n      </CommandLineWrapper>\n    </>\n  );\n};\n\nexport default FinancialButtonContainer;\n","import axios from 'axios';\n\nexport const getZvitOneMonthTotal = async choesData => {\n  try {\n    const { data } = await axios.get(`/zvit/one_month_total`, {\n      params: choesData,\n    });\n\n    return data;\n  } catch (err) {\n    console.error('❌ Error:', err.message);\n  }\n};\n","import styled from 'styled-components';\nimport { Table } from 'antd';\n\nexport const StyledTable = styled(Table)`\n  .ant-table {\n    font-size: 14px;\n  }\n\n  .ant-table-thead > tr > th {\n    background-color: #f0f2f5 !important; /* Колір фону заголовків */\n    font-weight: bold;\n    text-align: center;\n  }\n\n  .ant-table-tbody > tr > td {\n    text-align: center;\n  }\n\n  .ant-table-tbody > tr:hover {\n    background-color: #e6f7ff; /* Колір при наведенні */\n  }\n\n  .ant-table-row[data-row-key='balance'],\n  .ant-table-row[data-row-key='total'] {\n    font-size: 16px;\n    font-weight: 400;\n    background-color: #e6f7ff !important; /* Колір фону */\n    color: #1890ff; /* Колір тексту */\n    border-left: 10px;\n  }\n  .ant-btn-icon .anticon.anticon-delete > svg {\n    transition: all 0.05s cubic-bezier(0.645, 0.045, 0.355, 1);\n  }\n  .ant-btn-icon .anticon.anticon-delete > svg:hover {\n    fill: red;\n  }\n`;\nexport const StyledCellNegative = styled.span`\n  color: var(--main-red);\n`;\nexport const StyledCell = styled.span`\n  color: inherit;\n`;\n","import React from 'react';\nimport {\n  StyledCell,\n  StyledCellNegative,\n  StyledTable,\n} from './PeriodReport.styled';\n\nconst ReportCurrentMonth = ({ indicatorsCurrentMonth, loading }) => {\n  const {\n    profit = {},\n    expense = {},\n    income = {},\n    workedIncom = 0,\n    previousPeriodProfit = {},\n  } = indicatorsCurrentMonth;\n\n  const columns = [\n    {\n      key: '1',\n      title: 'Категорія',\n      dataIndex: 'category',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '2',\n      title: 'На початок періоду',\n      dataIndex: 'profitPrev',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n    {\n      key: '3',\n      title: 'Оплачені кошти',\n      dataIndex: 'currentIncome',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n\n    {\n      key: '4',\n      title: 'Відпрацьовано',\n      dataIndex: 'workedLessons',\n      onCell: (_, index) => {\n        if (index === 0) {\n          return { rowSpan: dataSource.length - 1 };\n        }\n        if (index === dataSource.length - 1) {\n          return { rowSpan: 1 };\n        }\n        return { rowSpan: 0 };\n      },\n    },\n    {\n      key: '5',\n      title: 'Поточні витрати',\n      dataIndex: 'currentExpense',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n\n    {\n      key: '6',\n      title: 'На кінець періоду ',\n      dataIndex: 'profit',\n      render: value =>\n        value < 0 ? (\n          <StyledCellNegative>{value}</StyledCellNegative>\n        ) : (\n          <StyledCell>{value}</StyledCell>\n        ),\n    },\n  ];\n\n  const dataSource = [\n    {\n      key: 'cash',\n      category: 'Готівка',\n      profitPrev: previousPeriodProfit?.cash || 0,\n      profit: profit?.kasa || 0,\n      currentExpense: expense?.cash || 0,\n      currentIncome: income?.cash || 0,\n      workedLessons: workedIncom,\n    },\n    {\n      key: 'privat',\n      category: 'ПриватБанк',\n      profitPrev: previousPeriodProfit?.privatBank || 0,\n      profit: profit?.privatBank || 0,\n      currentExpense: expense?.privatBank || 0,\n      currentIncome: income?.privatBank || 0,\n      workedLessons: '',\n    },\n    {\n      key: 'mono',\n      category: 'МоноБанк',\n      profitPrev: previousPeriodProfit?.monoBank || 0,\n      profit: profit?.monoBank || 0,\n      currentExpense: expense?.monoBank || 0,\n      currentIncome: income?.monoBank || 0,\n      workedLessons: '',\n    },\n    {\n      key: 'balance',\n      category: 'Ітого:',\n      profitPrev: previousPeriodProfit?.amount || 0,\n      profit: profit?.amount || 0,\n      currentExpense: expense?.amount || 0,\n      currentIncome: income?.amount || 0,\n      workedLessons: workedIncom,\n    },\n  ];\n\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={loading}\n    />\n  );\n};\n\nexport default ReportCurrentMonth;\n","export const selectZvitSelectedPeriod = state => state.zvit.zvitSelectedPeriod;\nexport const selectZvitLoadinge = state => state.zvit.isloading;\nexport const selectZvitStatus = state => state.zvit.zvitStatus;\n","import { StyledTable } from 'components/FinancialOffice/PeriodReport/PeriodReport.styled';\nimport React from 'react';\nimport { Button, Popconfirm, Space } from 'antd';\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  QuestionCircleOutlined,\n} from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteExpenseById,\n  getExpenseById,\n} from 'redux/expense/expenseOperetion';\n\nconst TableExpensesZvit = ({ expensZvitLoading, expenses, finalValues }) => {\n  const dispatch = useDispatch();\n\n  const uniqueDates = [\n    ...new Set(\n      expenses.map(expense =>\n        new Date(expense.date).toLocaleDateString('uk-UA')\n      )\n    ),\n  ];\n\n  const columns = [\n    {\n      key: '1',\n      title: 'Дата',\n      dataIndex: 'date',\n      filters: uniqueDates.map(date => ({ text: date, value: date })),\n      onFilter: (value, record) => record.date === value,\n    },\n    {\n      key: '2',\n      title: 'Категорія',\n      dataIndex: 'category',\n      filters: [...new Set(expenses.map(expense => expense.category))].map(\n        category => ({ text: category, value: category })\n      ),\n      onFilter: (value, record) => record.category === value,\n    },\n    {\n      key: '3',\n      title: 'Готівка',\n      dataIndex: 'amount_cash',\n    },\n    {\n      key: '4',\n      title: 'Приватбанк',\n      dataIndex: 'amount_privat',\n    },\n    {\n      key: '5',\n      title: 'Монобанк',\n      dataIndex: 'amount_mono',\n    },\n    {\n      key: '6',\n      title: 'Додаткова інформація',\n      dataIndex: 'description',\n    },\n    {\n      key: '7',\n      title: 'Дії',\n      dataIndex: 'actions',\n      render: (_, record) =>\n        record.key !== 'total' && ( // Вимикаємо кнопки для підсумкового рядка\n          <Space>\n            <Button\n              type=\"primary\"\n              icon={<EditOutlined />}\n              onClick={async () =>\n                await dispatch(getExpenseById(record.key)).then()\n              }\n            />\n            <Popconfirm\n              title=\"Видалення\"\n              description=\"Ви намагаєтесь видалити цю строчку. Продовжити?\"\n              icon={\n                <QuestionCircleOutlined\n                  style={{\n                    color: 'red',\n                  }}\n                />\n              }\n              onConfirm={() => {\n                dispatch(deleteExpenseById(record.key));\n              }}\n            >\n              <Button type=\"danger\" icon={<DeleteOutlined />} />\n            </Popconfirm>\n          </Space>\n        ),\n    },\n  ];\n\n  const dataSource = expenses.map(expense => ({\n    key: expense._id,\n    date: new Date(expense.date).toLocaleDateString('uk-UA'),\n    category: expense.category,\n    amount_cash: expense.paymentForm === 'cash' ? expense.amount : '',\n    amount_privat:\n      expense.paymentForm === 'cashless' && expense.bank === 'PrivatBank'\n        ? expense.amount\n        : '',\n    amount_mono:\n      expense.paymentForm === 'cashless' && expense.bank === 'MonoBank'\n        ? expense.amount\n        : '',\n    description: expense.description,\n  }));\n\n  if (finalValues) {\n    dataSource.push({\n      key: 'total',\n      date: 'Ітогом за період:',\n      category: '',\n      amount_cash: finalValues.cash,\n      amount_privat: finalValues.privatBank,\n      amount_mono: finalValues.monoBank,\n      description: '',\n    });\n  }\n\n  return (\n    <StyledTable\n      columns={columns}\n      dataSource={dataSource}\n      size=\"small\"\n      pagination={false}\n      loading={expensZvitLoading}\n    />\n  );\n};\n\nexport default TableExpensesZvit;\n","import React, { useEffect, useState } from 'react';\nimport {\n  ContantLineWrapper,\n  WrapperFinancialOffice,\n  ZvitContainer,\n} from './FinancialLayout.styled';\nimport FinancialButtonContainer from '../FinancialButtonContainer/FinancialButtonContainer';\nimport Container from 'components/Container/Container';\nimport { getZvitOneMonthTotal } from 'redux/zvit/api';\nimport ReportCurrentMonth from '../PeriodReport/PeriodReport';\nimport { useSelector } from 'react-redux';\nimport {\n  selectExpense,\n  selectExpenseByDate,\n  selectExpenseLoading,\n  selectZvitStatusExpense,\n} from 'redux/expense/expenceSelector';\nimport {\n  selectZvitLoadinge,\n  selectZvitSelectedPeriod,\n  selectZvitStatus,\n} from 'redux/zvit/zvitSelector';\nimport ZvitReportTitle from 'ui/ZvitReportTitle/ZvitReportTitle';\nimport TableExpensesZvit from 'components/Zvit/TableExpensesZvit/TableExpensesZvit';\n\nconst FinancialLayout = () => {\n  const [indicatorsCurrentMonth, setIndicatorsCurrentMonth] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [typeZvit, setTypeZvit] = useState('');\n  const [dateFromTitle, setDateFromTitle] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState(null);\n  const [selectedDateString, setSelectedDateString] = useState(null);\n  const [dayOrePariod, setDayOrePariod] = useState('oneDay');\n\n  const expenseMarker = useSelector(selectExpense);\n  const { totalData } = useSelector(selectZvitSelectedPeriod);\n  const zvitIsLoading = useSelector(selectZvitLoadinge);\n  const expensZvitLoading = useSelector(selectExpenseLoading);\n  const { expenses, finalValues } = useSelector(selectExpenseByDate);\n  const statusZvitPeriod = useSelector(selectZvitStatus);\n  const statusZvitExpense = useSelector(selectZvitStatusExpense);\n\n  useEffect(() => {\n    if (statusZvitPeriod) {\n      setTypeZvit('report_for_period');\n    }\n    if (statusZvitExpense) {\n      setTypeZvit('expenses_by_period');\n    }\n  }, [statusZvitExpense, statusZvitPeriod]);\n\n  useEffect(() => {\n    const fetchZvitOneMonthTotal = async () => {\n      const now = new Date();\n\n      const startDate = new Date(now.getFullYear(), now.getMonth(), 1);\n      const endDate = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n      const formattedDates = {\n        startDate: startDate.toISOString(),\n        endDate: endDate.toISOString(),\n      };\n\n      try {\n        setLoading(true);\n        setTypeZvit('');\n\n        const { totalData } = await getZvitOneMonthTotal(formattedDates);\n        setIndicatorsCurrentMonth(totalData);\n      } catch (error) {\n        console.error('❌ Error fetching total profit:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchZvitOneMonthTotal();\n  }, [expenseMarker]);\n\n  // console.log('expenses', expenses);\n\n  return (\n    <Container>\n      <WrapperFinancialOffice>\n        <FinancialButtonContainer\n          dayOrePariod={dayOrePariod}\n          setDayOrePariod={setDayOrePariod}\n          setDateFromTitle={setDateFromTitle}\n          zvitIsLoading={zvitIsLoading}\n          selectedPeriod={selectedPeriod}\n          setSelectedPeriod={setSelectedPeriod}\n          selectedDateString={selectedDateString}\n          setSelectedDateString={setSelectedDateString}\n        />\n        <ContantLineWrapper>\n          <ZvitContainer>\n            <ZvitReportTitle title=\"Поточні цифри місяця\" />\n            <ReportCurrentMonth\n              loading={loading}\n              indicatorsCurrentMonth={indicatorsCurrentMonth}\n            />\n          </ZvitContainer>\n\n          {typeZvit === 'report_for_period' &&\n          totalData &&\n          Object.keys(totalData).length > 0 ? (\n            <ZvitContainer>\n              <ZvitReportTitle title={`${dateFromTitle}`} />\n              <ReportCurrentMonth\n                loading={zvitIsLoading}\n                indicatorsCurrentMonth={totalData}\n              />\n            </ZvitContainer>\n          ) : typeZvit === '' ||\n            typeZvit === 'expenses_by_period' ||\n            (totalData && Object.keys(totalData).length === 0) ? null : (\n            <>\n              <ZvitReportTitle title={`${dateFromTitle}`} />\n              <h4>Даних в обраному періоді немає</h4>\n            </>\n          )}\n          {(typeZvit === 'expenses_by_period' ||\n            statusZvitExpense === 'expenses_by_period') &&\n          expenses?.length > 0 ? (\n            <ZvitContainer>\n              <ZvitReportTitle title={`${dateFromTitle}`} />\n              <TableExpensesZvit\n                expensZvitLoading={expensZvitLoading}\n                expenses={expenses}\n                finalValues={finalValues}\n              />\n            </ZvitContainer>\n          ) : typeZvit === '' || typeZvit === 'report_for_period' ? null : (\n            <>\n              <ZvitReportTitle title={`${dateFromTitle}`} />\n              <h4>Витрат в обраному періоді немає</h4>\n            </>\n          )}\n        </ContantLineWrapper>\n      </WrapperFinancialOffice>\n    </Container>\n  );\n};\n\nexport default FinancialLayout;\n"],"names":["WrapperFinancialOffice","styled","div","_templateObject","_taggedTemplateLiteral","ContantLineWrapper","_templateObject2","ZvitContainer","_templateObject3","CommandLineWrapper","CommandLineButton","Button","btnStyledAll","DateTitle","DateDescription","p","selectExpense","state","expense","operetion","selectExpenseByDate","expensesPeriod","selectExpenseLoading","isloading","selectZvitStatusExpense","zvitStatus","selectExpenseSelected","expenseSelected","_ref","setOpen","selectedPeriod","open","onCloseDrawerExpense","_useForm","useForm","form","_slicedToArray","_useState","useState","_useState2","paymentMethod","setPaymentMethod","dispatch","useDispatch","updateExpenseInfo","useSelector","useEffect","setFieldsValue","date","split","category","amount","paymentForm","bank","description","_jsx","_Fragment","children","Drawer","title","placement","width","onClose","_jsxs","Form","initialValues","onFinish","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","values","expenseData","wrap","_context2","prev","next","id","_id","updateExpense","then","_callee","_context","clearExpenseSelected","stop","addExpense","_x","apply","arguments","Item","label","name","rules","required","message","Select","categoryExpense","map","Option","value","InputNumber","style","placeholder","onChange","e","target","Radio","undefined","resetFields","Input","TextArea","autoSize","minRows","maxRows","display","alignItems","flexDirection","gap","type","onClick","htmlType","Title","h3","dayOrePariod","selectedDateString","setDateFromTitle","loading","getExpensesBySelectedPeriod","period","abrupt","getExpensesByDate","concat","reverse","join","t0","console","error","disabled","FaRegCalendarPlus","CirclesWithBar","height","color","wrapperStyle","justifyContent","visible","ariaLabel","BsClipboardPulse","RangePicker","DatePicker","setDayOrePariod","zvitIsLoading","setSelectedPeriod","setSelectedDateString","today","dayjs","Date","toISOString","dateFromExpense","setDateFromExpense","_useState3","_useState4","createZvitForPeriod","createZvitSelectedPeriod","ZvitReportTitle","defaultValue","dates","dateStrings","length","startDate","toDate","endDate","setUTCHours","isOneDay","getUTCFullYear","getUTCMonth","getUTCDate","formattedDates","locale","Expenses","marginTop","BsEmojiHeartEyes","BsEmojiFrown","ExpenseContainer","getZvitOneMonthTotal","choesData","_yield$axios$get","data","axios","get","params","sent","StyledTable","Table","StyledCellNegative","span","StyledCell","indicatorsCurrentMonth","_indicatorsCurrentMon","profit","_indicatorsCurrentMon2","_indicatorsCurrentMon3","income","_indicatorsCurrentMon4","workedIncom","_indicatorsCurrentMon5","previousPeriodProfit","columns","key","dataIndex","render","onCell","_","index","rowSpan","dataSource","profitPrev","cash","kasa","currentExpense","currentIncome","workedLessons","privatBank","monoBank","size","pagination","selectZvitSelectedPeriod","zvit","zvitSelectedPeriod","selectZvitLoadinge","selectZvitStatus","expensZvitLoading","expenses","finalValues","filters","_toConsumableArray","Set","toLocaleDateString","text","onFilter","record","Space","icon","EditOutlined","getExpenseById","Popconfirm","QuestionCircleOutlined","onConfirm","deleteExpenseById","DeleteOutlined","amount_cash","amount_privat","amount_mono","push","setIndicatorsCurrentMonth","setLoading","_useState5","_useState6","typeZvit","setTypeZvit","_useState7","_useState8","dateFromTitle","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","expenseMarker","totalData","_useSelector2","statusZvitPeriod","statusZvitExpense","fetchZvitOneMonthTotal","now","_yield$getZvitOneMont","_totalData","getFullYear","getMonth","finish","Container","FinancialButtonContainer","ReportCurrentMonth","Object","keys","TableExpensesZvit"],"sourceRoot":""}