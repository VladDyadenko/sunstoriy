{"version":3,"file":"static/js/359.b4bb5377.chunk.js","mappings":"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","sources":["components/ContainerMain/ContainerMain.styled.js","page/LogopedPage/LogopedPage.jsx","ui/ButtonAddLesson/ButtonAddLesson.styled.js","ui/ButtonAddLesson/ButtonAddLesson.jsx","ui/TimeLessons/TimeLessons.stayled.js","ui/TimeLessons/TimeLessons.jsx","ui/MainTable/MainTable.styled.js","ui/MainTable/MainTable.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainWrapper = styled.div`\n  width: 100%;\n  padding: 5px 5px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: start;\n  gap: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport MainTable from 'ui/MainTable/MainTable';\nimport { MainWrapper } from 'components/ContainerMain/ContainerMain.styled';\nimport Container from 'components/Container/Container';\nimport { selectLessonsLogoped } from 'redux/offices/officesSelector';\nimport { getDates } from 'components/FilterLesson/SelectDate/GetDateFunction';\nimport {\n  deleteLogopedLessonById,\n  logopedLessons,\n} from 'redux/offices/officesOperetion';\nimport FilterLesson from 'components/FilterLesson/FilterLesson';\nimport SelectDate from 'components/FilterLesson/SelectDate/SelectDate';\nimport { localStorageHelper } from 'helpers/helperLocalStorage';\nimport ButtonAddLesson from 'ui/ButtonAddLesson/ButtonAddLesson';\n\nconst LogopedPage = () => {\n  const lessonsChosePeriod = useSelector(selectLessonsLogoped);\n\n  const [teachers, setTeachers] = useState(null);\n  const [teacher, setTeacher] = useState([]);\n  const [lessons, setLessons] = useState(null);\n  const [dateCurrentLesson, setLessonDates] = useState(\n    localStorageHelper.getData('Logoped')\n  );\n  const [type, setType] = useState('Період');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const storedDate = localStorageHelper.getData('Logoped');\n\n    if (storedDate) {\n      setLessonDates(storedDate);\n      dispatch(logopedLessons(storedDate));\n    } else {\n      const startDateFormat = dayjs().startOf('week').format('YYYY-MM-DD');\n      const endDateFormat = dayjs().endOf('week').format('YYYY-MM-DD');\n      const dateString = [startDateFormat, endDateFormat];\n\n      const startDate = new Date(dateString[0]);\n      const endDate = new Date(dateString[1]);\n      const dates = getDates(startDate, endDate);\n      const initialDates = dates?.map(date => date.valueOf());\n      const initialDateValues = initialDates?.map(date => date.valueOf());\n      setLessonDates(initialDateValues);\n      localStorageHelper.setData('Logoped', initialDateValues);\n      if (initialDateValues.length > 0) {\n        dispatch(logopedLessons(initialDateValues));\n      }\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    const uniqueTeachers = Array.from(\n      new Set(\n        lessonsChosePeriod?.map(\n          lesson => `${lesson.teacherName} ${lesson.teacherSurname}`\n        )\n      )\n    );\n    setTeachers(uniqueTeachers);\n  }, [lessonsChosePeriod]);\n\n  useEffect(() => {\n    if (lessonsChosePeriod && teacher && teacher.length > 0) {\n      const filteredLessons = lessonsChosePeriod?.filter(lesson => {\n        const teacherFullName = `${lesson.teacherName} ${lesson.teacherSurname}`;\n        return teacher.includes(teacherFullName);\n      });\n\n      setLessons(filteredLessons);\n    } else {\n      setLessons(lessonsChosePeriod);\n    }\n  }, [lessonsChosePeriod, teacher]);\n\n  const items = [\n    {\n      key: 1,\n      label: 'Параметри відбору',\n      children: (\n        <SelectDate\n          pageName=\"Logoped\"\n          type={type}\n          setType={setType}\n          setLessonDates={setLessonDates}\n          dateCurrentLesson={dateCurrentLesson}\n          teachers={teachers}\n          teacher={teacher}\n          setTeacher={setTeacher}\n          onLessonsChange={lessons => dispatch(logopedLessons(lessons))}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Container>\n        <FilterLesson currentItems={items} />\n        {lessonsChosePeriod?.length === 0 && (\n          <ButtonAddLesson pageName=\"Логопед\" />\n        )}\n        <MainWrapper>\n          {lessons?.length > 0 && (\n            <MainTable\n              lessons={lessons}\n              onLessonsDelete={lesson => {\n                return dispatch(deleteLogopedLessonById(lesson._id));\n              }}\n              office=\"Логопед\"\n            />\n          )}\n        </MainWrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default LogopedPage;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BtnAddLesson = styled(Link)`\n  width: 90%;\n  height: 50px;\n`;\nexport const Wrapper = styled.div`\n  width: 100%;\n  min-height: 80px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  margin: 10px 0;\n`;\n\nexport const BtnTitle = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 20px;\n  color: var(--main-dark-blue);\n`;\n","import { BtnAddLesson, BtnTitle, Wrapper } from './ButtonAddLesson.styled';\nimport FreeTableItem from 'ui/FreeTableItem/FreeTableItem';\n\nconst ButtonAddLesson = ({ pageName }) => {\n  const infoOffice = JSON.stringify({ office: pageName });\n  return (\n    <Wrapper>\n      <BtnTitle>Додати урок:</BtnTitle>\n      <BtnAddLesson to={`/lesson?lessonCopy=${infoOffice}`}>\n        <FreeTableItem />\n      </BtnAddLesson>\n    </Wrapper>\n  );\n};\n\nexport default ButtonAddLesson;\n","import styled from 'styled-components';\nimport { BsPlusCircleDotted } from 'react-icons/bs';\n\nexport const TimeContainer = styled.ul`\n  width: 50px;\n  display: block;\n  padding: 0 5px;\n  margin-right: 10px;\n  @media screen and (min-width: 375.1px) {\n    display: block;\n  }\n`;\nexport const TableItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  border-radius: 8px;\n  min-width: 50px;\n  height: 80px;\n  margin-bottom: 10px;\n  background-color: var(--main-blue);\n  color: var(--main-green);\n  border: 2px solid var(--main-green);\n`;\nexport const TableItemDefault = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 8px;\n  background-color: var(--main-blue);\n  border: 2px solid var(--main-green);\n  height: 70px;\n  min-width: 50px;\n  margin-bottom: 10px;\n`;\nexport const TimeItem = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 900;\n  font-size: 14px;\n  width: 100%;\n  padding: 5px;\n  text-align: center;\n`;\nexport const AddLessonLink = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  background-color: var(--main-blue);\n  border: 2px solid var(--main-green);\n  height: 70px;\n  min-width: 50px;\n  margin-bottom: 10px;\n`;\nexport const IconAddLessonLink = styled(BsPlusCircleDotted)`\n  width: 30px;\n  height: 30px;\n  fill: #a9a9a9;\n  transition: cubic-bezier(0.4, 0, 0.2, 1) 100ms;\n\n  &:hover {\n    fill: var(--main-dark-blue);\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { formatTimeRange } from 'assets/constants/transformation';\nimport {\n  AddLessonLink,\n  IconAddLessonLink,\n  TableItem,\n  TimeContainer,\n  TimeItem,\n} from './TimeLessons.stayled';\n\nfunction TimeLessons({ timeLessonOnList, officeName }) {\n  const infoOffice = JSON.stringify({ office: officeName });\n  return (\n    <>\n      <TimeContainer>\n        <AddLessonLink>\n          <Link to={`/lesson?lessonCopy=${infoOffice}`}>\n            <IconAddLessonLink />\n          </Link>\n        </AddLessonLink>\n        {timeLessonOnList?.map((time, index) => {\n          return (\n            <TableItem key={time + index}>\n              <TimeItem>{formatTimeRange(time)}</TimeItem>\n            </TableItem>\n          );\n        })}\n      </TimeContainer>\n    </>\n  );\n}\n\nexport default TimeLessons;\n","import styled from 'styled-components';\n\nexport const DayWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: start;\n  justify-content: start;\n  flex-direction: row;\n  gap: 10px;\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n  }\n`;\nexport const LessonsWrapper = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  padding: 0 10px;\n`;\nexport const MainTableContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: start;\n  justify-content: center;\n  gap: 15px;\n`;\nexport const DayDeafult = styled.div`\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  border-radius: 8px;\n  height: 70px;\n  width: 100%;\n  min-width: 200px;\n  max-width: 250px;\n  padding: 5px;\n  margin-bottom: 10px;\n  background-color: var(--main-blue);\n  border: 2px solid var(--main-green);\n`;\n\nexport const DayDeafultInfo = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 900;\n  text-align: center;\n  color: var(--main-green);\n  margin-bottom: 10px;\n`;\nexport const DayContainer = styled.div`\n  width: 250px;\n  text-align: center;\n  border-radius: 8px;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 376px) {\n    margin-right: 10px;\n  }\n`;\n\nexport const LessonsContainer = styled.ul``;\n\nexport const LessonsItem = styled.li`\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  cursor: pointer;\n  height: 80px;\n  width: 250px;\n  flex-direction: column;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  border-width: 2px;\n  border-style: solid;\n  transition: cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n  ${props => {\n    if (props['aria-description'] === 'cancel') {\n      return `border-color: #a9a9a9; color: #a9a9a9`;\n    } else if (props['aria-current']) {\n      return `border-color: ${props['aria-current']}; color:${props['aria-current']}`;\n    } else {\n      return `border-color: #fff; color: #fff`;\n    }\n  }}\n`;\n\nexport const CardInfo = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 14px;\n  padding: 5px;\n  text-align: center;\n`;\nexport const OneTimeContainer = styled.ul`\n  padding: 0 5px;\n  :not(:last-child) {\n    margin-right: 5px;\n  }\n`;\nexport const OneTimeItem = styled.li`\n  height: 70px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport FreeTableItem from 'ui/FreeTableItem/FreeTableItem';\nimport LessonTableCard from 'ui/LessonTableCard/LessonTableCard';\nimport TimeLessons from 'ui/TimeLessons/TimeLessons';\nimport {\n  LessonsWrapper,\n  LessonsContainer,\n  LessonsItem,\n  DayDeafult,\n  DayDeafultInfo,\n  DayWrapper,\n  DayContainer,\n  MainTableContainer,\n} from './MainTable.styled';\nimport { formatDateRange, formatDay } from 'assets/constants/transformation';\n\nfunction MainTable({ lessons, onLessonsDelete, office }) {\n  const [uniquTime, setUniquTime] = useState(null);\n  const [uniquDate, setUniquDate] = useState(null);\n  const [groupedLessons, setGroupedLessons] = useState(null);\n\n  const extractTimeFromISOString = dateTimeString => {\n    const timeString = new Date(dateTimeString).toLocaleTimeString('en-US', {\n      timeZone: 'UTC',\n    });\n    return timeString;\n  };\n\n  useEffect(() => {\n    if (lessons) {\n      const areTimeIntervalsEqual = (intervalA, intervalB) => {\n        const roundedIntervalA = intervalA.map(extractTimeFromISOString);\n        const roundedIntervalB = intervalB.map(extractTimeFromISOString);\n        return (\n          roundedIntervalA[0] === roundedIntervalB[0] &&\n          roundedIntervalA[1] === roundedIntervalB[1]\n        );\n      };\n\n      const uniquTimeDate = lessons\n        .map(lesson => lesson.timeLesson)\n        .filter(\n          (time, index, self) =>\n            self.findIndex(t => areTimeIntervalsEqual(t, time)) === index\n        )\n        .sort((timeA, timeB) => {\n          const timePartA = timeA[0].split('T')[1];\n          const timePartB = timeB[0].split('T')[1];\n          return timePartA.localeCompare(timePartB);\n        });\n      setUniquTime(uniquTimeDate);\n\n      const uniqueDates = [...new Set(lessons.map(val => val.dateLesson))]\n        .map(dateString => new Date(dateString))\n        .sort((a, b) => a - b)\n        .map(date => date.toISOString());\n\n      setUniquDate(uniqueDates);\n\n      const groupedLessons = uniqueDates.map(date =>\n        lessons.filter(lesson => lesson.dateLesson === date)\n      );\n      setGroupedLessons(groupedLessons);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lessons]);\n\n  return (\n    <MainTableContainer>\n      <TimeLessons timeLessonOnList={uniquTime} officeName={office} />\n      <LessonsWrapper>\n        <DayWrapper>\n          {uniquDate?.map((date, index) => {\n            return (\n              <DayContainer key={index}>\n                <DayDeafult>\n                  <DayDeafultInfo>{formatDateRange(date)}</DayDeafultInfo>\n                  <DayDeafultInfo>{formatDay(date)}</DayDeafultInfo>\n                </DayDeafult>\n                <LessonsContainer>\n                  {uniquTime?.map((time, timeIndex) => {\n                    const lessonsWithSameTime = groupedLessons[index].filter(\n                      day => {\n                        const lessonTimes = day.timeLesson.map(timeString => {\n                          const lessonDate = new Date(timeString);\n                          return {\n                            hours: lessonDate.getHours(),\n                            minutes: lessonDate.getMinutes(),\n                            seconds: lessonDate.getSeconds(),\n                          };\n                        });\n\n                        const targetTime = time.map(timeString => {\n                          const targetDate = new Date(timeString);\n                          return {\n                            hours: targetDate.getHours(),\n                            minutes: targetDate.getMinutes(),\n                            seconds: targetDate.getSeconds(),\n                          };\n                        });\n\n                        return lessonTimes.some(lessonTime =>\n                          targetTime.some(\n                            target =>\n                              lessonTime.hours === target.hours &&\n                              lessonTime.minutes === target.minutes &&\n                              lessonTime.seconds === target.seconds\n                          )\n                        );\n                      }\n                    );\n\n                    const lesson =\n                      lessonsWithSameTime.length > 0\n                        ? lessonsWithSameTime[0]\n                        : null;\n\n                    return (\n                      <LessonsItem\n                        aria-description={lesson ? lesson.status : ''}\n                        aria-current={lesson ? lesson.teacherColor : ''}\n                        key={timeIndex}\n                      >\n                        {lesson ? (\n                          <LessonTableCard\n                            lesson={lesson}\n                            onLessonsDelete={onLessonsDelete}\n                          />\n                        ) : (\n                          <Link\n                            to={`/lesson?dateFreeLesson=${date}&officeFreeLesson=${office}&timeFreeLesson=${JSON.stringify(\n                              time\n                            )}`}\n                          >\n                            <FreeTableItem />\n                          </Link>\n                        )}\n                      </LessonsItem>\n                    );\n                  })}\n                </LessonsContainer>\n              </DayContainer>\n            );\n          })}\n        </DayWrapper>\n      </LessonsWrapper>\n    </MainTableContainer>\n  );\n}\n\nexport default MainTable;\n"],"names":["MainWrapper","styled","div","_templateObject","_taggedTemplateLiteral","lessonsChosePeriod","useSelector","selectLessonsLogoped","_useState","useState","_useState2","_slicedToArray","teachers","setTeachers","_useState3","_useState4","teacher","setTeacher","_useState5","_useState6","lessons","setLessons","_useState7","localStorageHelper","getData","_useState8","dateCurrentLesson","setLessonDates","_useState9","_useState10","type","setType","dispatch","useDispatch","useEffect","storedDate","logopedLessons","dateString","dayjs","startOf","format","endOf","startDate","Date","endDate","dates","getDates","initialDates","map","date","valueOf","initialDateValues","setData","length","uniqueTeachers","Array","from","Set","lesson","concat","teacherName","teacherSurname","filteredLessons","filter","teacherFullName","includes","items","key","label","children","_jsx","SelectDate","pageName","onLessonsChange","_Fragment","_jsxs","Container","FilterLesson","currentItems","ButtonAddLesson","MainTable","onLessonsDelete","deleteLogopedLessonById","_id","office","BtnAddLesson","Link","Wrapper","_templateObject2","BtnTitle","p","_templateObject3","_ref","infoOffice","JSON","stringify","to","FreeTableItem","TimeContainer","ul","TableItem","li","TimeItem","_templateObject4","AddLessonLink","_templateObject5","IconAddLessonLink","BsPlusCircleDotted","_templateObject6","timeLessonOnList","officeName","time","index","formatTimeRange","DayWrapper","LessonsWrapper","MainTableContainer","DayDeafult","DayDeafultInfo","DayContainer","LessonsContainer","_templateObject7","LessonsItem","_templateObject8","props","_templateObject9","_templateObject10","_templateObject11","uniquTime","setUniquTime","uniquDate","setUniquDate","groupedLessons","setGroupedLessons","extractTimeFromISOString","dateTimeString","toLocaleTimeString","timeZone","uniquTimeDate","timeLesson","self","findIndex","t","intervalA","intervalB","roundedIntervalA","roundedIntervalB","areTimeIntervalsEqual","sort","timeA","timeB","timePartA","split","timePartB","localeCompare","uniqueDates","_toConsumableArray","val","dateLesson","a","b","toISOString","TimeLessons","formatDateRange","formatDay","timeIndex","lessonsWithSameTime","day","lessonTimes","timeString","lessonDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","targetTime","targetDate","some","lessonTime","target","status","teacherColor","LessonTableCard"],"sourceRoot":""}